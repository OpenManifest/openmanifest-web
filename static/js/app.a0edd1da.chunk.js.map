{"version":3,"sources":["assets/images/night.png","assets/images/weather.png","assets/fonts/SpaceMono-Regular.ttf","webpack:///./app/screens/authenticated/overview/statistics/LoadsByDay.css?0258","app/screens/authenticated/overview/statistics/LoadsByDay.css","app/entrypoint/bootstrap/PaperDatesPolyfill.ts","app/constants/expo.ts","app/entrypoint/bootstrap/GoogleMaps.ts","app/entrypoint/bootstrap/Notifications.tsx","app/api/schema.d.ts","app/components/forms/dropzone/slice.tsx","app/screens/wizards/dropzone_wizard/slice.tsx","app/components/forms/dropzone_user/slice.tsx","app/components/forms/rig/slice.tsx","app/components/forms/rig_inspection/slice.tsx","app/components/forms/rig_inspection_template/slice.tsx","app/components/forms/manifest/slice.tsx","app/components/forms/manifest_group/slice.tsx","app/components/forms/user/slice.tsx","app/components/forms/weather_conditions/slice.tsx","app/components/forms/slice.ts","app/screens/authenticated/user/user_list/slice.ts","app/screens/unauthenticated/login/slice.ts","app/screens/authenticated/dropzone/manifest/slice.ts","app/screens/unauthenticated/signup/slice.ts","app/screens/wizards/user_wizard/slice.ts","app/screens/slice.ts","app/components/dialogs/ImageViewer/slice.ts","app/constants/Colors.ts","app/state/global.ts","app/state/store.ts","app/api/client/utils/getServerUrl.ts","app/api/client/links/websockets.ts","app/api/client/links/http.ts","app/providers/notifications/context.ts","app/providers/notifications/provider.tsx","app/components/LottieView.web.tsx","app/api/client/links/errors.ts","app/components/app_signal/AppSignalClient.tsx","app/components/app_signal/AppSignalContext.tsx","app/components/app_signal/AppSignalFallbackBoundary.tsx","app/components/app_signal/ErrorScreen.tsx","app/components/app_signal/AppSignalBoundary.tsx","app/components/app_signal/AppSignalProvider.tsx","app/api/crud/factory.tsx","app/providers/dropzone/context.ts","app/components/app_signal/AppSignalTagger.tsx","app/components/app_signal/AppSignalLink.tsx","app/api/client/links/appSignal.ts","app/api/client/links/link.ts","app/api/client/links/authentication.ts","app/api/client/cache.ts","app/api/client/client.ts","app/api/Apollo.tsx","app/entrypoint/EntrypointWrapper.web.tsx","app/api/reflection.tsx","app/api/crud/useDropzone.tsx","app/api/crud/useDropzones.tsx","app/hooks/useRestriction.ts","app/api/createMutation.tsx","app/api/hooks/useMutationUpdateLoad.ts","app/api/crud/useLoad.tsx","app/api/crud/useUserProfile.tsx","app/api/crud/useManifest.tsx","app/api/crud/useTickets.ts","app/api/crud/useAircrafts.ts","app/components/layout/DialogOrSheet.web.tsx","app/components/input/withHookForm.tsx","app/components/input/text/TextField.tsx","app/components/input/number_input/NumberField.web.tsx","app/components/chips/Chip.tsx","app/components/input/chip_select/ChipSelect.tsx","app/components/Skeleton.web.tsx","app/components/input/chip_select/ChipSelectSkeleton.tsx","app/components/input/chip_select/DropzoneUserChipSelect.tsx","app/components/input/chip_select/JumpTypeChipSelect.tsx","app/components/input/chip_select/LicenseChipSelect.tsx","app/components/input/chip_select/PlaneChipSelect.tsx","app/components/input/chip_select/TicketTypeChipSelect.tsx","app/components/input/number_input/index.ts","app/components/UserAvatar.tsx","app/components/UserAvatar.web.old.tsx","app/components/popover/Menu.web.tsx","app/components/input/select/Select.web.tsx","app/components/input/dropdown_select/RigSelect.tsx","app/forms/manifest_user/ManifestForm.tsx","app/providers/manifest/context.ts","app/hooks/useManifestValidator.ts","app/forms/manifest_user/useForm.tsx","app/forms/manifest_user/Dialog.web.tsx","app/forms/load/LoadForm.tsx","app/forms/load/useForm.tsx","app/forms/load/Dialog.tsx","app/forms/credits/CreditsForm.tsx","app/forms/credits/useForm.tsx","app/forms/credits/Credits.web.tsx","app/providers/hooks/useDialog.tsx","app/providers/manifest/provider.tsx","app/components/input/time_picker/TimePicker.tsx","app/providers/load/TimePickerDialog.tsx","app/providers/load/context .tsx","app/providers/load/provider.tsx","app/forms/aircraft/AircraftForm.tsx","app/forms/aircraft/useForm.tsx","app/forms/aircraft/Dialog.tsx","app/components/input/dropdown_select/AltitudeSelect.tsx","app/components/input/dropdown_select/DropzoneUserSelect.tsx","app/components/input/dropdown_select/FederationSelect.tsx","app/components/input/dropdown_select/JumpTypeSelect.tsx","app/components/input/dropdown_select/LicenseSelect.tsx","app/components/input/dropdown_select/PlaneSelect.tsx","app/components/input/dropdown_select/RoleSelect.tsx","app/components/input/dropdown_select/TicketTypeSelect.tsx","app/forms/create_user/Form.tsx","app/forms/create_user/useForm.ts","app/forms/create_user/Dialog.tsx","app/components/input/switch/Switch.tsx","app/forms/ticket_type/TicketTypeForm.tsx","app/forms/ticket_type/useForm.tsx","app/forms/ticket_type/Dialog.tsx","app/forms/ticket_type_addon/TicketAddonForm.tsx","app/forms/ticket_type_addon/useForm.tsx","app/forms/ticket_type_addon/Dialog.tsx","app/providers/dropzone/provider.tsx","app/entrypoint/providers/Dropzones.tsx","app/entrypoint/providers/PushNotificationProvider.tsx","app/entrypoint/providers/ThemeProvider.web.tsx","app/entrypoint/providers/AppUpdate.tsx","app/components/dialogs/ImageViewer/ImageViewer.web.tsx","app/screens/NotFoundScreen.tsx","app/components/Themed.tsx","app/components/NoResults.tsx","app/screens/limbo/dropzone_select/DropzoneCard.tsx","app/screens/limbo/dropzone_select/DropzonesScreen.tsx","app/screens/limbo/routes.tsx","app/hooks/useDevice.ts","app/components/Divider.tsx","app/screens/unauthenticated/login/form/FacebookButton.web.tsx","app/screens/unauthenticated/login/form/AppleButton.web.tsx","app/screens/unauthenticated/login/form/useForm.ts","app/screens/unauthenticated/login/form/LoginForm.tsx","app/screens/unauthenticated/login/LoginScreen.tsx","app/components/layout/Screen.tsx","app/components/layout/SwipeActions.tsx","app/components/GradientText.web.tsx","app/components/carousel_wizard/Step.tsx","app/components/carousel_wizard/Dots.tsx","app/components/carousel_wizard/Buttons.tsx","app/components/carousel_wizard/Wizard.tsx","app/utils/checkPasswordComplexity.ts","app/components/input/PasswordComplexityIndicator.tsx","app/forms/sign_up/steps/Password.tsx","app/forms/sign_up/steps/Email.tsx","app/forms/sign_up/steps/PasswordConfirmation.tsx","app/forms/sign_up/steps/Done.tsx","app/forms/sign_up/useForm.tsx","app/forms/sign_up/SignupWizard.tsx","app/screens/unauthenticated/signup/SignUpScreen.tsx","app/screens/unauthenticated/routes.tsx","app/api/hooks/useMutationCreateDropzone.ts","app/api/hooks/useMutationUpdateDropzone.ts","app/screens/wizards/dropzone_wizard/steps/Name.tsx","app/components/input/card_select/CardSelect.tsx","app/components/input/card_select/FederationCardSelect.tsx","app/screens/wizards/dropzone_wizard/steps/Federation.tsx","app/utils/calculateLatLngDelta.ts","app/components/map/Map.web.tsx","app/components/input/search/AddressSearchBar.tsx","app/screens/wizards/dropzone_wizard/steps/Location.web.tsx","app/components/theme_preview/Phone.tsx","app/components/theme_preview/Web.tsx","app/components/input/colorpicker/ColorPickerDialog.tsx","app/components/input/colorpicker/ColorPicker.tsx","app/components/input/colorpicker/index.ts","app/screens/wizards/dropzone_wizard/steps/Theming.tsx","app/screens/wizards/dropzone_wizard/steps/Done.tsx","app/components/permissions/PermissionListItem.tsx","app/screens/wizards/dropzone_wizard/steps/Permissions.tsx","app/hooks/useImagePicker.ts","app/screens/wizards/dropzone_wizard/steps/Logo.tsx","app/screens/wizards/dropzone_wizard/DropzoneWizard.tsx","app/api/hooks/useMutationUpdateUser.ts","app/screens/wizards/user_wizard/steps/Federation.tsx","app/screens/wizards/user_wizard/steps/FederationNumber.tsx","app/screens/wizards/user_wizard/steps/RealName.tsx","app/screens/wizards/user_wizard/steps/Nickname.tsx","app/components/input/card_select/LicenseCardSelect.tsx","app/screens/wizards/user_wizard/steps/License.tsx","app/screens/wizards/user_wizard/steps/Rig.tsx","app/components/input/date_picker/DatePicker.web.tsx","app/screens/wizards/user_wizard/steps/ReserveRepack.tsx","app/screens/wizards/user_wizard/steps/AskForRig.tsx","app/screens/wizards/user_wizard/steps/Wingloading.tsx","app/screens/wizards/user_wizard/steps/Done.tsx","app/screens/wizards/user_wizard/steps/Avatar.tsx","app/screens/wizards/user_wizard/UserWizardScreen.tsx","app/screens/wizards/recover_password/steps/Email.tsx","app/screens/wizards/recover_password/steps/Done.tsx","app/screens/wizards/recover_password/RecoverPasswordScreen.tsx","app/screens/wizards/confirm_user/ConfirmUserScreen.tsx","app/screens/wizards/change_password/steps/Done.tsx","app/screens/wizards/change_password/steps/Password.tsx","app/screens/wizards/change_password/steps/PasswordConfirmation.tsx","app/screens/wizards/change_password/ChangePasswordScreen.tsx","app/screens/authenticated/user/useUserNavigation.ts","app/screens/authenticated/user/user_list/UsersScreen.tsx","app/screens/authenticated/user/user_list/AppBar.tsx","app/components/forms/rig_inspection_template/RigInspectionItem.tsx","app/components/forms/rig_inspection/RigInspectionForm.tsx","app/api/hooks/useMutationUpdateRig.tsx","app/screens/authenticated/user/equipment/RigCard.tsx","app/screens/authenticated/user/rig_inspection/RigInspectionScreen.tsx","app/components/Badge.tsx","app/screens/authenticated/user/profile/UserInfo/PermissionBadges.tsx","app/components/forms/dropzone_user/DropzoneUserForm.tsx","app/components/dialogs/DropzoneUserDialog.tsx","app/api/hooks/useMutationCreateRig.ts","app/components/forms/rig/RigForm.tsx","app/components/dialogs/Rig.tsx","app/components/forms/user/UserForm.tsx","app/components/dialogs/User.tsx","app/hooks/navigation/useProfileWizard.tsx","app/screens/authenticated/user/profile/UserInfo/Header.tsx","app/screens/authenticated/user/profile/UserInfo/InfoGrid.tsx","app/screens/authenticated/user/profile/UserActions.tsx","app/screens/authenticated/user/profile/SlotCard.tsx","app/screens/authenticated/user/profile/tabs/JumpHistory.tsx","app/components/orders/OrderCard.tsx","app/screens/authenticated/user/profile/tabs/index.tsx","app/screens/authenticated/user/profile/tabs/Transactions.tsx","app/screens/authenticated/user/profile/tabs/Equipment.tsx","app/screens/authenticated/user/profile/ProfileScreen.tsx","app/screens/authenticated/user/orders/OrdersScreen.tsx","app/screens/authenticated/user/equipment/EquipmentScreen.tsx","app/components/layout/ScrollableScreen.tsx","app/screens/authenticated/user/order_receipt/TransactionCard.tsx","app/screens/authenticated/user/order_receipt/ReceiptCard.tsx","app/screens/authenticated/user/order_receipt/OrderScreen.tsx","app/screens/authenticated/user/routes.tsx","app/screens/wizards/routes.tsx","app/screens/authenticated/dropzone/load/InfoGrid.tsx","app/components/drawer/Drawer.tsx","app/api/hooks/useLogout.ts","app/components/appbar/SetupWarning.tsx","app/components/appbar/AppBar.tsx","app/components/chips/GcaChip.tsx","app/components/chips/LoadMasterChip.tsx","app/components/chips/PilotChip.tsx","app/components/chips/PlaneChip.tsx","app/components/autocomplete/DropzoneUserAutocomplete.web.tsx","app/components/forms/manifest_group/UserRigCard.tsx","app/utils/calculateWingLoading.ts","app/components/slots_table/UserRow.tsx","app/components/slots_table/DragAndDrop/DraggableRow.web.tsx","app/components/slots_table/DragAndDrop/DroppableSlot.web.tsx","app/utils/generateColor.ts","app/components/forms/manifest_group/GroupPicker.tsx","app/components/forms/manifest_group/ManifestGroupForm.tsx","app/components/dialogs/ManifestGroup/ManifestGroup.web.tsx","app/screens/authenticated/dropzone/load/ActionButton.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Countdown.tsx","app/screens/authenticated/dropzone/load/Header.tsx","app/components/slots_table/AvailableRow.web.tsx","app/components/slots_table/Table.tsx","app/screens/authenticated/dropzone/load/views/TableView.tsx","app/screens/authenticated/dropzone/load/LoadScreen.tsx","app/components/wizard/Pagination.tsx","app/components/wizard/Wizard.tsx","app/components/wizard/WizardScreen.tsx","app/components/wizard/WizardCompleteStep.tsx","app/api/hooks/useMutationCreateWeatherConditions.ts","app/components/forms/weather_conditions/WindRow.tsx","app/components/forms/weather_conditions/WeatherConditionForm.tsx","app/screens/authenticated/dropzone/weather_conditions/steps/Winds.tsx","app/utils/calculateAngle.ts","app/utils/mapDegreesToDirection.ts","app/utils/calculateCoordinatesByAngle.ts","app/components/input/jump_run_select/JumpRunSelect.web.tsx","app/screens/authenticated/dropzone/weather_conditions/steps/JumpRun.tsx","app/screens/authenticated/dropzone/weather_conditions/WeatherConditionsScreen.tsx","app/screens/authenticated/dropzone/weather_conditions/JumpRunScreen.tsx","app/screens/authenticated/useAuthenticatedNavigation.ts","app/screens/authenticated/dropzone/weather_conditions/WindScreen.tsx","app/components/slots_table/DragAndDrop/DraggingRow.web.tsx","app/components/slots_table/DragAndDrop/DragDropSlotProvider.web.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Small/Loading.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Small/Card.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Large/Loading.tsx","app/screens/authenticated/dropzone/manifest/LoadCard/Large/Card.tsx","app/screens/authenticated/dropzone/manifest/Weather/JumpRun.tsx","app/screens/authenticated/dropzone/manifest/Weather/WeatherBoard.tsx","app/screens/authenticated/dropzone/manifest/SetupProfileCard.tsx","app/screens/authenticated/dropzone/manifest/FinishSetupSteps.tsx","app/screens/authenticated/dropzone/manifest/ManifestScreen.tsx","app/screens/authenticated/configuration/settings_menu/SettingsMenuScreen.tsx","app/screens/authenticated/configuration/ticket_types/TicketTypesScreen.tsx","app/components/input/LocationPicker.web.tsx","app/components/forms/dropzone/DropzoneForm.tsx","app/screens/authenticated/configuration/dropzone_settings/DropzoneSettingsScreen.tsx","app/screens/authenticated/configuration/aircrafts/AircraftsScreen.tsx","app/components/forms/rig_inspection_template/RigInspectionTemplateForm.tsx","app/screens/authenticated/configuration/rig_inspection_template/RigInspectionTemplateScreen.tsx","app/screens/authenticated/configuration/rigs/DropzoneRigsScreen.tsx","app/screens/authenticated/configuration/permissions/PermissionsScreen.tsx","app/screens/authenticated/configuration/master_log/useForm.ts","app/screens/authenticated/configuration/master_log/MasterLogScreen.tsx","app/screens/authenticated/configuration/transactions/DropzoneTransactionsScreen.tsx","app/screens/authenticated/configuration/extras/ExtrasScreen.tsx","app/screens/authenticated/configuration/routes.tsx","app/screens/authenticated/dropzone/routes.tsx","app/screens/authenticated/notifications/notifications/Cards/NotificationCard.tsx","app/screens/authenticated/notifications/notifications/Cards/Manifested.tsx","app/screens/authenticated/notifications/notifications/Cards/BoardingCall.tsx","app/screens/authenticated/notifications/notifications/Cards/Funds.tsx","app/screens/authenticated/notifications/notifications/Cards/RigInspection.tsx","app/screens/authenticated/notifications/useNotificationNavigation.ts","app/screens/authenticated/notifications/notifications/Cards/Permission.tsx","app/screens/authenticated/notifications/notifications/Cards/PublicationRequest.tsx","app/screens/authenticated/notifications/notifications/NotificationsScreen.tsx","app/screens/authenticated/notifications/routes.tsx","app/screens/authenticated/overview/statistics/Stats.tsx","app/screens/authenticated/overview/statistics/LoadsByDay.web.tsx","app/screens/authenticated/overview/DropzonesTable.tsx","app/constants/ChartConfig.ts","app/screens/authenticated/overview/statistics/JumpTypePieChart.tsx","app/screens/authenticated/overview/AdminOverview.tsx","app/components/activity/Feed.web.tsx","app/components/activity/Container.tsx","app/screens/authenticated/overview/DropzoneOverview.tsx","app/screens/authenticated/overview/routes.tsx","app/screens/authenticated/TabBar.web.tsx","app/screens/authenticated/routes.tsx","app/screens/drawers/UserDrawer.tsx","app/screens/routes.tsx","app/entrypoint/Entrypoint.tsx","app/entrypoint/hooks/useAppearance.tsx","app/entrypoint/hooks/useRouteChange.tsx","app/entrypoint/index.ts","app/entrypoint/hooks/useCachedResources.ts","index.js","assets/images/logo-black.png","assets/images/logo-white.png","assets/images/webb-dark.png","assets/images/pattern.png"],"names":["module","exports","api","content","__esModule","default","i","options","locals","___CSS_LOADER_API_IMPORT___","push","Platform","OS","require","Intl","DateTimeFormat","__setDefaultTimeZone","timezone","config","Constants","manifest","extra","manifest2","expoClient","googleMapsApiKey","select","ios","googleMapsIos","android","googleMapsAndroid","web","googleMapsWeb","Geocoder","init","setGoogleApiKey","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","DropzoneState","DropzoneStateEvent","EventAccessLevel","EventAction","EventLevel","LoadState","ModerationRole","NotificationType","OrderState","Permission","TransactionStatus","TransactionType","DropzoneWizardStep","initialState","original","open","fields","federation","value","error","lat","lng","name","secondaryColor","primaryColor","banner","isCreditSystemEnabled","status","Public","createSlice","reducers","setField","state","action","payload","field","setFieldError","setOpen","Object","keys","forEach","key","payloadKey","typedKey","setOriginal","reset","role","expiresAt","make","model","serial","repackExpiresAt","canopySize","rigType","ok","setOk","index","item","map","idx","setFields","JSON","parse","console","log","Error","message","definition","err","jumpType","extras","load","rig","ticketType","dropzoneUser","exitWeight","passengerName","passengerExitWeight","groupNumber","users","setFromSlots","slots","slot","id","Number","rigId","find","setDropzoneUsers","xorBy","dzUser","autoSelectedRig","user","rigs","length","first","availableRigs","avatar","image","apfNumber","email","phone","nickname","license","setFederation","userFederations","uid","userFederation","debug","jumpRun","temperature","exitSpotMiles","offsetDirection","winds","dropzone","rigInspection","rigInspectionTemplate","manifestGroup","weather","isSearchVisible","searchText","setSearchText","setSearchVisible","password","setEmail","setPassword","setEmailError","setPasswordError","selectedUsers","display","setSelected","setDisplayStyle","passwordConfirmation","currentIndex","completed","Name","Federation","Location","Aircraft","Tickets","Branding","setIndex","complete","skipRigSetup","login","signup","dropzoneWizard","userWizard","close","successColor","infoColor","light","text","background","tint","tabIconDefault","tabIconSelected","success","warning","info","dark","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","fonts","fontFamily","fontWeight","thin","medium","regular","colors","primary","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","currentUser","currentDropzone","currentDropzoneId","permissions","credentials","authenticated","expoPushToken","currentRouteName","theme","palette","main","accent","isDarkMode","setCredentials","setAuthenticated","setUser","setExpoPushToken","setCurrentRouteName","setPermissions","setPrimaryColor","color","darken","hex","lighten","setAccentColor","setDropzone","setAppearance","current","merge","logout","persistConfig","storage","AsyncStorage","whitelist","screenReducers","screens","reduce","obj","reducer","formReducers","forms","screenActions","actions","global","globalSlice","imageViewer","imageViewerSlice","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","immutableCheck","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","getServerUrl","url","URL","hasSubscriptionOperation","query","definitions","some","kind","operation","abortController","AbortController","httpLink","BatchHttpLink","batchDebounce","batchMax","uri","fetchOptions","mode","method","signal","createHttpLink","ApolloLink","split","cable","createConsumer","URI","scheme","host","join","ActionCableLink","connectionParams","a","getContext","authHeaders","createWebsocketsLink","NotificationContext","React","noop","useNotifications","AnimationState","LottieView","NotificationsProvider","props","children","queue","setQueue","successAnimation","closed","animationState","setAnimationState","notification","variant","opening","notify","newNotification","isEqual","last","onHide","newQueue","onAnimationFinish","waiting","setTimeout","Toast","show","text1","type","context","Provider","View","style","StyleSheet","absoluteFillObject","alignItems","justifyContent","pointerEvents","loop","autoPlay","speed","ref","styles","animation","source","lottieDoneAnimation","autoHide","visibilityTime","position","create","height","width","defaultErrorLink","onError","graphQLErrors","networkError","extensions","code","process","EXPO_ENV","locations","path","nodes","stringify","AppSignalClient","Appsignal","ExpoManifest","appSignalApiKey","namespace","revision","expoConfig","version","ignoreErrors","INITIAL_TAGS","platform","currentUserId","INITIAL_CONTEXT","appSignal","tags","setTags","AppSignalContext","useAppSignalContext","ErrorBoundary","undefined","errorInfo","this","Fallback","fallback","ErrorScreen","isDetailsVisible","setDetailsVisible","reloading","setReloading","onToggleDetails","onReloadApp","window","location","reload","reloadAsync","useWindowDimensions","SafeAreaView","top","left","Card","minHeight","maxWidth","marginHorizontal","Title","title","subtitle","titleStyle","textAlign","subtitleStyle","Content","twigBreakAnimation","HelperText","maxHeight","stack","Actions","Button","compact","onPress","disabled","loading","AppSignalBoundary","instance","errorBoundaryRef","AppSignalProvider","use","AppSignalWindowEvents","AppSignalCurrentPath","onUpdateTags","newTags","onTagsChanged","span","addDecorator","uninitializedHandler","args","createCRUDContext","useHook","INITIAL_STATE","Context","rest","useContext","called","refetch","fetchMore","dialogs","aircraft","visible","createUser","ticketTypeAddon","DropzoneContext","useDropzoneContext","AppSignalSessionTagProvider","currentDropzoneUser","sessionTags","toString","currentSessionTags","pick","DEFAULT_OPTIONS","breadcrumbs","includeQuery","includeResponse","includeVariables","excludeOperation","excludeError","isServerError","getDefinition","q","createBreadCrumb","category","operationName","timestamp","Math","floor","Date","getTime","metadata","createAppSignalErrorLink","client","createErrorLink","errors","response","ignore","filteredErrors","filter","breadcrumb","loc","body","print","variables","result","statusCode","addBreadcrumb","sendError","e","AppSignalBreadcrumbLink","forward","Observable","originalObserver","subscription","subscribe","next","omit","unsubscribe","ERROR_CODE_WHITELIST","useAppSignalLink","useAppSignal","includes","from","defaultLink","useLink","authLink","root","accessToken","Authorization","tokenType","isEmpty","setContext","_","headers","useAuthenticationLink","errorLink","dispatch","useErrorLink","appSignalLink","links","useMemo","Boolean","cache","InMemoryCache","typePolicies","Event","relayStylePagination","DropzoneUsers","Loads","ApolloClient","link","Apollo","isAuthenticated","authStateChanged","setLink","useApolloClient","ApolloProvider","EntrypointWrapper","absoluteFill","defaultOptions","RoleEssentialsFragmentDoc","gql","LicenseEssentialsFragmentDoc","UserEssentialsFragmentDoc","DropzoneUserEssentialsFragmentDoc","ActivityEssentialsFragmentDoc","DropzoneEssentialsFragmentDoc","LoadEssentialsFragmentDoc","TicketTypeEssentialsFragmentDoc","TicketTypeAddonEssentialsFragmentDoc","TicketTypeDetailsFragmentDoc","JumpTypeEssentialsFragmentDoc","SlotEssentialsFragmentDoc","RigEssentialsFragmentDoc","PlaneEssentialsFragmentDoc","ActivityDetailsFragmentDoc","FederationEssentialsFragmentDoc","LicenseDetailsFragmentDoc","UserFederationEssentialsFragmentDoc","UserRigDetailedFragmentDoc","UserDetailedFragmentDoc","DropzoneUserDetailsFragmentDoc","RigInspectionEssentialsFragmentDoc","TransactionEssentialsFragmentDoc","ReceiptEssentialsFragmentDoc","OrderEssentialsFragmentDoc","SlotDetailsFragmentDoc","UserSlotDetailsFragmentDoc","DropzoneUserProfileFragmentDoc","DropzoneStatisticsEssentialsFragmentDoc","DropzoneStatisticsFragmentDoc","WeatherConditionEssentialsFragmentDoc","DropzoneDetailedFragmentDoc","CurrentUserEssentialsFragmentDoc","CurrentUserFragmentDoc","CurrentUserDetailedFragmentDoc","DropzoneExtensiveFragmentDoc","TicketTypeExtraEssentialsFragmentDoc","TicketTypeExtraDetailedFragmentDoc","MasterLogUserFragmentDoc","MasterLogAircraftFragmentDoc","MasterLogSlotFragmentDoc","MasterLogLoadFragmentDoc","LocationFragmentDoc","MasterLogEntryFragmentDoc","RigInspectionDetailedFragmentDoc","RigInspectionMutationEssentialsFragmentDoc","RoleDetailedFragmentDoc","LoadDetailsFragmentDoc","SlotExhaustiveFragmentDoc","TicketTypeAddonDetailsFragmentDoc","ArchivePlaneDocument","ArchiveTicketTypeDocument","ArchiveUserDocument","ConfirmUserDocument","CreateAircraftDocument","CreateDropzoneDocument","CreateLoadDocument","CreateOrderDocument","CreateRigDocument","CreateRigInspectionDocument","CreateTicketAddonDocument","CreateTicketTypeDocument","CreateGhostDocument","DeleteSlotDocument","FinalizeLoadDocument","GrantPermissionDocument","JoinFederationDocument","useJoinFederationMutation","baseOptions","LoginDocument","LoginWithFacebookDocument","ManifestGroupDocument","useManifestGroupMutation","ManifestUserDocument","useManifestUserMutation","MoveSlotDocument","RecoverPasswordDocument","RevokePermissionDocument","UpdateAircraftDocument","UpdateDropzoneDocument","UpdateDropzoneUserDocument","useUpdateDropzoneUserMutation","UpdateLoadDocument","UpdateLostPasswordDocument","UpdateMasterLogDocument","UpdateRigDocument","useUpdateRigMutation","UpdateRigInspectionTemplateDocument","UpdateRoleDocument","UpdateTicketAddonDocument","UpdateTicketTypeDocument","UpdateUserDocument","useUpdateUserMutation","UpdateVisibilityDocument","UserSignUpDocument","ActivityDetailsDocument","DropzoneDocument","DropzoneStatisticsDocument","DropzonesStatisticsDocument","DropzoneRigsDocument","DropzonePermissionsDocument","DropzoneTransactionsDocument","DropzoneUsersDocument","useDropzoneUsersQuery","DropzoneUsersDetailedDocument","DropzoneUserProfileDocument","useDropzoneUserProfileLazyQuery","DropzonesDocument","TicketTypeExtrasDocument","FederationsDocument","useFederationsQuery","AddressToLocationDocument","AllowedJumpTypesDocument","useAllowedJumpTypesQuery","LicensesDocument","useLicensesQuery","LoadDocument","LoadsDocument","MasterLogDocument","NotificationsDocument","PlanesDocument","usePlanesQuery","CurrentUserPermissionsDocument","RigInspectionTemplateDocument","useRigInspectionTemplateQuery","AvailableRigsDocument","RolesDocument","useRolesQuery","AllowedTicketTypesDocument","TicketTypesDocument","LoadUpdatedDocument","UserUpdatedDocument","useDropzone","vars","dropzoneId","useDropzoneLazyQuery","getDropzone","permissionsVariables","useCurrentUserPermissionsLazyQuery","getPermissions","data","queryVariables","useDropzonesLazyQuery","getDropzones","useUpdateVisibilityMutation","updateVisibilityMutation","updateVisibility","event","fieldErrors","dropzones","edges","edge","node","DropzonesProvider","useDropzonesContext","useRestriction","permission","isRequired","pattern","isNumeric","createMutation","mutation","getPayload","fieldErrorMap","validators","validates","opts","onFieldError","onSuccess","useMutation","mutate","raiseFieldError","camelizedField","camelCase","fieldName","flat","msg","startCase","mopts","hasErrors","x","variable","validator","test","callback","validate","requestAnimationFrame","updateLoad","useLoad","useLoadLazyQuery","getLoad","subscribeToMore","mutationManifestUser","useFinalizeLoadMutation","mutationFinalizeLoad","document","updateQuery","prev","subscriptionData","update","useMutationUpdateLoad","loadNumber","manifestUser","validatedPayload","yup","shape","required","nullable","validateSync","createSlot","ValidationError","dispatchInMinutes","minutes","dispatchTime","DateTime","local","plus","toISO","dispatchAt","BoardingCall","Open","updateLoadState","updatePilot","pilot","updateGCA","gca","updatePlane","plane","updateLoadMaster","lm","loadMaster","markAsLanded","Landed","cancel","Cancelled","canDispatchAircraft","UpdateLoad","createAircraftDispatchAction","dispatchAtTime","time","fromSeconds","useUserProfile","updateMutation","getProfile","useCreateOrderMutation","mutationCreateOrder","useCreateGhostMutation","mutationCreateGhost","canGrantPermission","GrantPermission","canRevokePermission","RevokePermission","profile","attributes","refetchQueries","createGhost","updateDropzoneUser","createOrder","mutationResult","order","buyer","__typename","writeFragment","fragment","fragmentName","identify","seller","addCredits","amount","walletId","withdrawCredits","useRevokePermissionMutation","revoke","useGrantPermissionMutation","grant","grantPermission","dropzoneUserId","permissionName","revokePermission","useManifest","date","canCreateLoad","CreateLoad","canDeleteOwnSlot","DeleteSlot","canDeleteSlot","DeleteUserSlot","canManifestSelf","CreateSlot","canManifestOthers","CreateUserSlot","canUpdateSlot","UpdateSlot","canUpdateOwnSlot","UpdateUserSlot","canAddTransaction","CreateUserTransaction","useLoadsQuery","initialFetchPolicy","utc","toISODate","skip","useMoveSlotMutation","moveSlotMutation","useDeleteSlotMutation","deleteSlotMutation","manifestGroupMutation","manifestUserMutation","useCreateLoadMutation","createLoadMutation","moveSlot","sourceLoad","mutationVariables","targetLoad","loads","createSlots","deleteSlot","createLoad","useTickets","useTicketTypesLazyQuery","getTickets","ticketTypes","useCreateTicketTypeMutation","createTicket","useUpdateTicketTypeMutation","updateTicket","useArchiveTicketTypeMutation","archiveTicket","useCreateTicketAddonMutation","createAddon","useUpdateTicketAddonMutation","updateAddon","createTicketType","updateTicketType","createTicketTypeAddon","fetchPolicy","createExtra","updateTicketTypeAddon","updateExtra","archiveTicketType","optimisticResponse","mutationData","evict","useAircrafts","usePlanesLazyQuery","getAircrafts","useCreateAircraftMutation","createAircraft","useUpdateAircraftMutation","updateAircraft","useArchivePlaneMutation","archiveAircraft","createPlane","planes","archive","deletePlane","aircrafts","noPadding","borderBottomWidth","paddingLeft","paddingRight","defaultPadding","button","padding","alignSelf","borderRadius","marginTop","right","DialogOrSheet","buttonLabel","disablePadding","buttonAction","onClose","useTheme","Drawer","anchor","PaperProps","ProgressBar","indeterminate","Typography","marginBottom","IconButton","icon","size","paddingBottom","Dialog","backgroundColor","withHookForm","Component","control","rules","defaultValue","render","onChange","onBlur","formState","TextField","helperText","setText","onChangeText","TextInput","flatten","surface","NumberFieldType","FormTextField","flex","adornments","Cash","CanopySize","Weight","muiVariants","outlined","NumberField","label","onChangeValue","parseInt","target","FormControl","fullWidth","InputProps","endAdornment","InputAdornment","startAdornment","FormHelperText","Chip","small","assignedColor","onSurface","chipStyle","borderColor","iconStyles","selectedColor","iconProps","MaterialCommunityIcons","textStyle","ChipSelect","items","allowEmpty","isSelected","isDisabled","renderItemLabel","autoSelectFirst","Wrapper","horizontal","flexDirection","flexWrap","isItemSelected","selected","margin","ChipSelectComponent","previous","ChipSelectField","defaultColors","ThemedSkeleton","boneColor","Color","negate","rgb","highlightColor","ChipSelectSkeleton","rows","isLoading","containerStyle","layout","marginVertical","marginRight","DropzoneUserChipSelect","requiredPermissions","onLoadingStateChanged","onChangeSelected","getItemLabel","Subheader","uniqBy","dropzoneUsers","DropzoneUserChipSelectField","JumpTypeChipSelect","userId","allowedForDropzoneUserIds","allowedJumpTypes","jumpTypes","JumpTypeChipSelectField","LicenseChipSelect","federationId","licenses","LicenseChipSelectField","PlaneChipSelect","PlaneChipSelectField","TicketTypeChipSelect","onlyPublicTickets","useAllowedTicketTypesQuery","cost","TicketTypeChipSelectField","FormNumberField","UserAvatar","initals","n","Image","Text","stringToColor","string","hash","charCodeAt","substr","initials","Avatar","sx","bgcolor","src","MenuItem","bold","testID","onClick","data-testid","ListItemIcon","ListItemAvatar","ListItemText","Menu","anchorEl","setAnchorEl","currentTarget","TouchableOpacity","anchorOrigin","vertical","transformOrigin","Select","compare","renderAnchor","onOpen","onDismiss","selectedOption","option","createSelectHandler","showAvatars","openMenu","m","minWidth","InputLabel","labelId","paddingTop","native","SelectDisplayProps","opt","val","b","RigSelect","loadId","tandem","useAvailableRigsLazyQuery","fetchRigs","isTandem","RigSelectField","ManifestForm","useWatch","allowedToManifestOthers","selectedAddons","addon","Divider","credits","ManifestContext","useManifestContext","schema","hasLicense","isTrue","hasMembership","hasRigInspection","hasReserveInDate","hasExitWeight","useManifestValidator","canManifest","abortEarly","manifestUserValidation","min","max","of","EMPTY_FORM_VALUES","ManifestUserDialog","initial","initialValues","defaultValues","setDefaultValues","methods","useForm","resolver","yupResolver","handleSubmit","setError","useAsyncFn","onManifest","onSubmit","portal","usePortal","removePortal","LoadForm","placeholder","ActAsGca","ActAsPilot","loadValidation","maxSlots","isOpen","LoadDialog","setValue","validatedFields","snapPoints","scrollable","CreditsForm","subtotal","Deposit","Withdrawal","DataTable","Row","Cell","numeric","orderValidation","integer","oneOf","values","DropzoneUserDialog","shouldUnregister","onCreateOrder","useCreditsForm","defaultIndex","onChangeIndex","newIndex","form","paddingHorizontal","createUseDialog","defaults","setState","newState","ManifestUserDialogWrapper","LoadDialogWrapper","CreditsDialogWrapper","useManifestUserDialog","useLoadDialog","useCreditsDialog","ManifestContextProvider","manifestUserDialog","loadDialog","creditsDialog","TimePicker","onDismissSingle","onConfirm","timestampLabel","format","Item","description","Icon","Modal","hours","toSeconds","hour","minute","locale","set","toJSDate","TimePickerDialog","setTime","setLoading","dismissable","timepicker","LoadContext","useLoadContext","useTimePickerDialog","LoadContextProvider","onChangeDispatchTime","then","withLoadContext","AircraftForm","aircraftValidation","registration","minSlots","basicEmptyWeight","maxTakeOffWeight","fuelType","AircraftDialog","register","validated","useAircraftForm","AltitudeSelect","AltitudeSelectField","DropzoneUserSelect","DropzoneUserSelectField","FederationSelect","federations","FederationSelectField","JumpTypeSelect","LicenseSelect","PlaneSelect","onCHange","RoleSelect","roles","RoleSelectField","TicketTypeSelect","allowManifestingSelf","useTicketTypesQuery","GhostForm","ghostValidation","optional","federationUid","CreateGhostDialog","federationNumber","Switch","onValueChange","SwitchField","TicketTypeForm","altitude","useTicketTypeExtrasLazyQuery","getTicketAddons","ticketTypeValidation","TicketTypeDialog","extraIds","selectedTicketTypes","ticketAddonValidation","ticketTypeIds","onSave","useAircraftDialog","useCreateUserDialog","useTicketTypeDialog","useTicketTypeAddonDialog","DropzoneContextProvider","token","Device","existingStatus","finalStatus","warn","importance","MAX","vibrationPattern","lightColor","PushNotifications","pushToken","notificationListener","responseListener","onOutsideLink","intendedRoute","updateUser","registerForPushNotificationsAsync","request","Linking","addEventListener","remove","remoteToken","muiTheme","createTheme","secondary","paper","common","white","black","matchMedia","addListener","matches","ThemeProvider","AppUpdate","fontsLoaded","overlay","setOverlay","onUpdate","play","Update","isNew","isUpdateAvailable","isAvailable","blur","intensity","fontSize","bottom","ImageViewer","mainSrc","onCloseRequest","NotFoundScreen","navigation","container","replace","linkText","paddingVertical","useThemeColor","colorName","colorFromProps","Colors","darkColor","otherProps","NoResults","empty","Paragraph","fab","DropzonesScreen","globalState","useNavigation","nameLines","lines","desaturate","textColor","shouldPushRoute","StackActions","screen","params","cardContainer","ImageBackground","numberOfLines","svgContainer","adjustsFontSizeToFit","allowFontScaling","overflow","fontStyle","FlatList","numColumns","refreshing","keyExtractor","onRefresh","flatlist","contentContainerStyle","ListEmptyComponent","renderItem","FAB","navigate","flexGrow","dzIcon","Stack","createStackNavigator","Limbo","Navigator","screenOptions","headerShown","cardStyle","initialRouteName","Screen","component","ScreenOrientation","divider","useLoginWithFacebook","useLoginWithFacebookMutation","onLoginWithFacebook","loginWithFacebook","authenticatable","FacebookButton","appId","reAuthenticate","autoLoad","buttonStyle","onFailure","textButton","AppleButton","useLoginForm","useState","useLoginMutation","mutationLogin","loginWithFacebookMutation","loginWithApple","loginWithAppleMutation","onLogin","useCallback","userLogin","LoginForm","ScrollView","animationContainer","loadingAnimation","secureTextEntry","onSubmitEditing","forgotPasswordDark","forgotPassword","labelStyle","textButtonLabel","logo","card","cardLandscape","fieldsLandscape","borderWidth","LoginScreen","orientation","Landscape","Portrait","useDevice","backgroundDark","backgroundLight","resizeMode","logoLight","logoDark","KeyboardAvoidingView","behavior","elevation","keyboardDismissMode","keyboardShouldPersistTaps","contentInsetAdjustmentBehavior","centerAlignedContent","SwipeActions","rightAction","Swipeable","enabled","renderRightActions","progress","dragX","scale","interpolate","inputRange","outputRange","translateX","Animated","transform","childrenContainerStyle","useNativeAnimations","GradientText","opacity","Fields","fieldContent","Step","hideContentUntilNavigatedTo","useIsFocused","Dots","count","Array","activeDot","inactiveDot","marginLeft","Buttons","backLabel","nextLabel","onNext","onBack","onNextPress","back","PasswordStrength","dots","zIndex","steps","y","dimensions","setDimensions","carouselRef","getCurrentIndex","scrollTo","goBack","onLayout","nativeEvent","modeConfig","parallaxScrollingScale","parallaxScrollingOffset","pagingEnabled","panGestureHandlerProps","activeOffsetX","onSnapToItem","checkPasswordComplexity","passwordStrength","TooWeak","minDiversity","minLength","Weak","Acceptable","Strong","indicator","indicatorInactive","indicatorWeak","indicatorOk","indicatorStrong","PasswordStep","strength","indicatorStyle","useFormContext","textContentType","passwordRules","PasswordComplexityIndicator","EmailStep","PasswordConfirmationStep","DoneStep","SignUpSteps","signUpValidation","useSignupForm","Email","step","setStep","useUserSignUpMutation","onSignUp","userRegister","getValues","PasswordConfirmation","inner","validationError","Password","SignupWizard","SignupScreen","Unauthenticated","presentation","SignUpScreen","createDropzone","updateDropzone","newValue","active","itemSelected","FederationCardSelect","onSelect","degreesToRadians","degrees","PI","calculateLatLngDelta","latitude","mileRadius","milePerDegreeAtEquator","milePerDegreeAtLatitude","cos","DEFAULT_COORDS","Map","_coords","center","coords","interactive","onDragEnd","isLoaded","useJsApiLoader","mapStyle","onLoad","bounds","google","maps","LatLngBounds","fitBounds","panTo","onUnmount","rootLayout","setRootLayout","isFocused","mapTypeId","MapTypeId","HYBRID","mapContainerStyle","zoom","fullscreenControl","streetViewControl","mapTypeControl","zoomControl","AddressSearchBar","suggestions","setSuggestions","useAddressToLocationLazyQuery","fetchLocation","fetchSuggestions","search","fetchSuggestionsDebounced","debounce","geocode","onPickResult","formattedString","Searchbar","suggestion","titleContainer","textShadowColor","textShadowRadius","textShadowOffset","markerFixed","myLocation","LocationWizardStep","setCenter","setUsersLocation","longitude","Value","region","latitudeDelta","longitudeDelta","fadeOut","timing","duration","toValue","useNativeDriver","fadeIn","setCoordinateFade","start","isDragging","setDragging","onDragStart","r","stop","autocomplete","toFixed","previewContainer","hairlineWidth","previewTabButton","previewTabButton2","previewTabButton3","previewAppBar","borderTopRightRadius","borderTopLeftRadius","previewTabBar","borderBottomRightRadius","borderBottomLeftRadius","previewLoadCard","previewLoadCard2","previewLoadCard3","previewButton","colorBox","PhonePreview","Surface","WebPreview","ColorPickerDialog","Portal","sliderComponent","defaultColor","hideSliders","getColor","COLOR_PRESETS","ColorPicker","isCustomColor","isDialogOpen","setDialogOpen","TouchableRipple","manipulate","ThemingStep","Phone","Web","Done","PermissionListItem","canChangePermissions","useUpdateRoleMutation","mutationUpdatePermission","roleId","updateRole","PermissionWizardScreen","dropzoneForm","useDropzonePermissionsLazyQuery","queryRoles","capitalize","useImagePicker","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","base64","avatarContainer","paragraph","Logo","pickImage","onPickImage","DropzoneSetupScreen","mutationCreateDropzone","useMutationCreateDropzone","mutationUpdateDropzone","useMutationUpdateDropzone","onComplete","onNameNext","onFederationNext","onLogoNext","camelize","wizard","Promise","resolve","NameStep","FederationStep","LocationStep","LogoStep","stepProps","FederationWizardSceen","toUpperCase","RealName","UserInfoScreen","LicenseCardSelect","RigWizardScreen","isOtherMake","setIsOtherMake","concat","DatePicker","selectedDays","onDayClick","ReserveRepackStep","AskForRigStep","cardTitle","cardValue","slider","sliderControl","wingLoading","wingLoadingCardLeft","wingLoadingCardRight","WingloadingWizardScreen","rigForm","userForm","ceil","AvatarStep","UserWizardScreen","useRoute","joinFederation","mutationUpdateUser","useMutationUpdateUser","mutationUpdateRig","useCreateRigMutation","mutationCreateRig","onNicknameNext","toLowerCase","onFederationNumberNext","onLicenseNext","onRigNext","updateRig","createRig","onReserveRepackNext","onWingloadingNext","onImageNext","RealNameStep","NicknameStep","FederationNumberStep","LicenseStep","RigStep","WingloadingStep","newText","useRecoverPasswordMutation","onRecover","onClickRecover","redirectUrl","errorIcon","ConfirmUserScreen","route","useConfirmUserMutation","confirmUser","userConfirmRegistrationWithToken","catch","useUpdateLostPasswordMutation","updatePassword","onChangePassword","userUpdatePasswordWithToken","validatePassword","onFinished","useUserNavigation","UserCardSkeleton","loadingFragment","hasCredits","UsersScreen","omitBy","canCreateUser","CreateUser","initialLoading","fill","refreshControl","RefreshControl","descriptionStyle","separator","inputContainer","input","AppBar","onSearch","searchVisible","Appbar","Header","BackAction","autoFocus","RigInspectionItem","canInspect","ActAsRigInspector","valueType","Checkbox","Android","RigInspectionForm","RigCard","onSuccessfulImageUpload","isUploading","setUploading","useMutationUpdateRig","isPackingCardMenuOpen","setPackingCardMenuOpen","packingCard","canManageDropzoneRigs","UpdateDropzoneRig","canUpdateRig","owner","textRow","chip","inspectedBy","innerChip","RigInspectionScreen","rigInspectionQuery","useCreateRigInspectionMutation","mutationCreateRigInspection","rigInspections","inspection","record","isOk","createRigInspection","readQuery","currentDz","earliestTimestamp","startOfDay","toISOString","writeQuery","ins","newData","Badge","iconName","ActAsDzso","ActAsLoadMaster","PermissionBadges","badges","shouldShowBadge","showsHorizontalScrollIndicator","DropzoneUserForm","canUpdateRole","newRole","getCachedUser","readFragment","mutationUpdateDropzoneUser","createData","userRoleId","RigForm","showTypeSelect","canCreateRigs","CreateRig","keyboardType","RigDialog","useMutationCreateRig","d","onDialogClose","SlotForm","num","ticketAddons","UpdateUserDialog","parseFloat","selectedLicenseFederation","slug","useProfileWizard","badgesInitials","UserHeader","onPressAvatar","isContactOpen","setContactOpen","canUpdateUser","UpdateUser","primaryDark","actingPermissions","str","openURL","Caption","InfoGrid","verticalDivider","UserActionsButton","fabOpen","setFabOpen","rootNavigator","onClickSetupWizard","onClickAccessAndMembership","onClickTransactions","onClickEquipment","onClickAddFunds","onClickEdit","isSelf","canViewOthersTransactions","ReadUserTransactions","canUpdateUsers","canDeleteUsers","DeleteUser","useArchiveUserMutation","deleteUser","onDeleteUser","Alert","alert","fabActions","Group","fabStyle","onStateChange","SlotCard","transaction","transactionContent","transactionTitle","transactionDescription","avatarIcon","JumpHistoryTab","tabIndex","currentTabIndex","sections","groupBy","parseISO","createdAt","t","differenceInDays","formatDistance","addSuffix","enAU","easing","OrderCard","showAvatar","isSelfBuyer","fromISO","toLocaleString","DATETIME_SHORT","orderContent","orderTitle","orderDescription","ProfileTabs","TransactionsTab","orders","startOf","diffNow","Duration","fromDurationLike","days","DATE_MED_WITH_WEEKDAY","toRelative","round","hasSame","orderId","EquipmentTab","insp","ProfileTab","Funds","Equipment","Jumps","TabBar","disableSwipe","ProfileScreen","headerRight","setOptions","onCloseRigForm","onUserSheetClose","openWizard","getContent","ListHeaderComponent","wrappingHeader","wrappingHeaderItem","chipTitle","lineHeight","textAlignVertical","OrdersScreen","firstName","SectionList","renderSectionHeader","section","flatList","EquipmentScreen","getIcon","TransactionCard","transactionType","ReceiptCard","receipt","isUser","entity","transactions","receiver","OrderScreen","lottieTicketAnimation","red","green","blue","ScrollableScreen","rightStyle","receipts","Users","Routes","header","initialParams","OrderReceiptScreen","Wizards","DropzoneWizardScreen","RecoverPasswordScreen","ChangePasswordScreen","User","DrawerMenu","routeName","canUpdateDropzone","UpdateDropzone","canUpdatePlane","UpdatePlane","canUpdateTicketTypes","UpdateTicketType","canUpdateExtras","UpdateExtra","canUpdatePermissions","canUpdateDzRigs","canUpdateRigInspectionTemplate","UpdateFormTemplate","abort","clearStore","useLogout","onLogout","DrawerActions","closeDrawer","shouldShowSettings","skeleton","profileAvatarTitle","profileAvatarSubtitle","profileAvatar","showsVerticalScrollIndicator","Section","moderationRole","profileHeader","Warning","contrast","SetupWarning","isRigSetUp","isExitWeightDefined","isMembershipInDate","isReserveInDate","isRigInspectionComplete","onSetupWizard","missing","hideWarnings","openDrawer","tintColor","isRigInspected","isRepackInDate","GCAChip","allowed","truncate","LoadMasterChip","PilotChip","PlaneChip","StyledTextField","styled","shouldForwardProp","prop","p","borderBottomColor","DropzoneUserAutocomplete","useDropzoneUsersLazyQuery","searchUsers","licensed","getOptionLabel","sort","localeCompare","nextValue","Autocomplete","renderInput","disableUnderline","onInputChange","inputValue","popupIcon","clearIcon","renderOption","menuItemProps","UserRigCard","exitWeightInKg","canopySizeInFt","onChangeRig","selectedRig","passengerWeight","onRemove","onChangeExitWeight","onChangePassengerName","onChangePassengerWeight","row","rowFirst","rowLast","SlotFields","DraggableRow","rowProps","useDraggable","slotId","setNodeRef","listeners","className","DroppableSlot","rowIndex","useDroppable","isOver","GROUP_COLORS","hsl","random","UserRow","onDeletePress","onSlotGroupPress","onSlotPress","canEditSelf","canEditOthers","canRemoveSelf","canRemoveOthers","slotGroup","isCurrentUser","isNumber","borderLeftWidth","borderLeftColor","hasLanded","avatarCell","nameCell","slotText","License","licenseCell","Rig","rigCell","WingLoading","wingLoadingCell","JumpType","jumpTypeCell","TicketType","ticketCell","Altitude","altitudeCell","tandemPassengerNameCell","tandemInfoCell","GroupPicker","availableGroups","createChangeHandler","sortedUniq","gap","UserCard","slotUser","newRig","ManifestGroupForm","isPublic","createToggleTicketAddonHandler","firstUser","mutationCreateSlots","userGroup","fetchProfile","onSelectUser","wrapper","Toolbar","Fade","in","LinearProgress","buttonContainer","contentContainer","userListContainer","sheet","sheetHeader","shadowColor","shadowOffset","shadowOpacity","shadowRadius","ActionButton","isExpanded","setExpanded","canUpdateLoad","canManifestGroup","canManifestGroupWithSelfOnly","CreateUserSlotWithSelf","isFull","showManifestButton","showGroupIcon","callActions","isToday","isSameDay","manifestActions","workflowActions","InFlight","buttonActions","CountdownCircleTimer","Countdown","end","difference","diff","fractionFiveMinutes","fractionTenMinutes","fractionTwentyMinutes","isPlaying","strokeWidth","remainingTime","animatedColor","seconds","secondsToMinutes","formattedSeconds","formattedMinutes","RenderBadges","renderBadges","LinearGradient","AvailableRow","SlotsTable","onAvailableSlotPress","rowStyles","th","LoadTableView","numFields","LoadScreen","occupiedSlots","onDeleteSlot","weight","LoadScreenWrapper","WizardPagination","paginationIndex","icons","Dimensions","get","bridgeLength","pagination","hasCustomIcon","defaultIcon","iconDone","bridge","bridgeDone","WizardContext","Wizard","scrollToIndex","animated","showPagination","PaginationComponent","wizardProps","scrollEnabled","autoplay","prevIndex","wizardScreen","buttonBack","buttons","WizardScreen","backButtonLabel","nextButtonLabel","contentStyle","disableScroll","scrollRef","WizardCompleteStep","createWeatherCondition","WindRow","direction","altitudeMenuOpen","setAltitudeMenuOpen","_speed","_setSpeed","_direction","_setDirection","altitudeCard","altitudeOption","alt","strengthCard","newSpeed","match","numbers","textField","directionCard","newDir","CARD_STYLE","WeatherConditionForm","onPressJumpRun","setTemperature","setJumpRun","headerTemperature","headerJumprun","altitudeTempRow","temperatureCard","cardContent","newTemp","jumpRunCard","newJumpRun","headerAltitude","headerSpeed","headerDirection","wind","newWinds","WindsWizardScreen","calculateAngle","theta","cx","cy","ex","dy","dx","atan2","calculateAngle180","DEGREE_DIRECTION_SECTORS","getPointOnCircle","radius","offsetX","offsetY","sin","JumpRunSelector","MAP_SIZE","originX","originY","origin","setOrigin","rotation","planePosition","planeAnimation","resetBeforeIteration","onGestureEvent","currentCoordinates","angle","onMountRotatableView","planeStartPosition","onBegan","onEnded","iconContainer","rotate","translateY","degreeLabel","bottomDegreeLabel","borderStyle","textInput","setLocation","WeatherConditionsScreen","mutationCreateWeatherConditions","useMutationCreateWeatherConditions","onSaveConditions","Winds","JumpRun","JumpRunScreen","useAuthenticatedNavigation","WindScreen","DraggingRow","DragDropWrapper","draggedItem","setDraggedItem","over","sourceSlot","targetSlot","LoadingCard","smallChip","smallChipText","LOAD_BADGE_COLOR","cancelled","boarding_call","loadStates","isBefore","onManifestGroup","controlsVisible","isDispatchOpen","setDispatchOpen","deletingSlot","setDeletingSlot","differenceInMinutes","planeIcon","CENTER_Y","CENTER_X","animate","scaleX","WeatherBoard","conditions","currentConditions","canUpdate","UpdateWeatherConditions","hasWeatherConditions","Easing","inOut","ease","onEditWindboard","onEditJumprun","defaultBackground","nightBackground","weatherBackground","onLongPress","cell","FontAwesome","windboard","orderBy","noData","noDataLabel","SetupProfileCard","SetupStepCard","rightProps","availableSlots","setupProfileCardFragment","setupAircraftsCardFragment","setupTicketsCardFragment","ManifestScreen","manifestScreen","isDisplayOptionsOpen","setDisplayOptionsOpen","sheets","loadingAircrafts","loadingTickets","cardWidth","contentWidth","SettingsScreen","onChangeVisibility","Archived","Private","InReview","RequestPublication","Unpublish","Publish","descriptionNumberOfLines","TicketTypesScreen","canCreateTicketTypes","CreateTicketType","createArchiveTicketHandler","ticket","createToggleManifestSelfHandler","markerSize","labelSize","isAnimating","setAnimating","DropzoneForm","outsideLoading","skeletonCard","imagePickLight","imagePickDark","skeletonCardColorPicker","skeletonCardCheckbox","subheader","UpdateDropzoneScreen","hasError","isDirty","PlanesScreen","canDeletePlane","DeletePlane","canCreatePlane","CreatePlane","createArchiveAircraftHandler","createEditAircraftHandler","RigInspectionTemplateForm","newItem","setNewItem","onTouchEnd","RigInspectionTemplateScreen","canEdit","useUpdateRigInspectionTemplateMutation","mutationUpdateForm","updateForm","formId","DropzoneRigsScreen","useDropzoneRigsQuery","updateData","canCreateRig","CreateDropzoneRig","DropzonePermissionScreen","Accordion","masterLogValidation","notes","dzso","useMasterLogForm","useUpdateMasterLogMutation","updateMasterLog","masterLog","DropzoneMasterLogScreen","setDate","isEditing","setIsEditing","toggleEditing","useMasterLogQuery","entry","onDownload","downloadUrl","TransactionsScreen","useDropzoneTransactionsLazyQuery","fetchTransactions","ExtrasScreen","useTicketTypeExtrasQuery","createEditHandler","canCreateExtras","CreateExtra","Configuration","SettingsTab","SettingsMenuScreen","DropzoneSettingsScreen","TicketTypeSettingsScreen","DropzoneTransactionsScreen","Manifest","ManifestTab","headerStyleInterpolator","HeaderStyleInterpolators","forUIKit","NotificationCard","notificationContent","notificationTitle","notificationDescription","formatDistanceToNow","ManifestedNotification","resource","BoardingCallNotification","FundsNotification","RigInspectionNotification","notificationType","PermissionNotification","PublicationRequestNotification","NotificationScreen","useNotificationsLazyQuery","getNotifications","fetchNotifications","notifications","UserManifested","CreditsUpdated","RigInspectionRequested","RigInspectionCompleted","PermissionGranted","PermissionRevoked","PublicationRequested","Notification","NotificationsScreen","Stats","cols","columns","itemWidth","cardHeight","statistic","valueText","labelText","lineBreakMode","LoadsByDay","startTime","showMonthLabels","classForValue","titleForValue","startDate","subDays","endDate","stateEvent","Archive","DropzoneTableRow","createdCell","statusCell","loadsCell","statistics","loadsCount","usersCell","activeUserCount","DropzonesTable","alwaysBounceVertical","controls","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","stroke","backgroundGradientFromOpacity","backgroundGradientToOpacity","barPercentage","useShadowColorFromDataset","TimeRange","JUMP_TYPE_COLORS","cam","ws","hnp","hp","fs","freefly","sortBy","stat","legendFontColor","legendFontSize","accessor","absolute","AdminOverviewPage","selectedTimeRange","setTimeRange","timeRange","subMonths","endTime","createTimeRangeHandler","range","selectedDropzones","setSelectedDropzones","useDropzonesStatisticsQuery","summedStatistics","revenueCents","sumBy","revenueCentsCount","cancelledLoadsCount","slotsCount","pilotCount","dzsoCount","gcaCount","totalUserCount","inactiveUserCount","loadCountByDay","slotsByJumpType","stickyHeaderIndices","ThreeMonths","SixMonths","Year","turnaround","dispatchedLoadsCard","jumpTypesCard","table","AdminOverviewPageWrapper","LEVEL_COLORS","Debug","Info","FeedItem","expanded","details","level","createdBy","levelCell","messageCell","Feed","onFetchMore","onEndReached","onEndReachedThreshold","ActivityFeedContainer","accessLevels","levels","canViewAdminActivity","ViewAdminActivity","canViewSystemActivity","ViewSystemActivity","canViewUserActivity","ViewUserActivity","useActivityDetailsLazyQuery","getActivity","activity","pageInfo","hasNextPage","endCursor","after","onChangeEventLevel","newLevels","onChangeAccessLevel","newAccessLevels","Admin","System","DashboardPage","canViewRevenue","ViewStatistics","canViewStatistics","ViewRevenue","activityVariables","setActivityVariables","onChangeActivityVariables","useDropzoneStatisticsQuery","Overview","OverviewTab","DashboardScreen","OverviewScreen","AnimatedTabBarNavigator","AuthenticatedTabBar","isAdmin","canViewUsers","ReadUser","canViewDashboard","tabBarActiveTintColor","tabBarInactiveBackgroundColor","backdrop","tabBarActiveBackgroundColor","tabBarInactiveTintColor","tabBarShowLabel","tabBarStyle","borderTopWidth","borderTopColor","appearance","tabBarBackground","topPadding","shadow","bottomPadding","tabBarOptions","activeTintColor","inactiveTintColor","activeBackgroundColor","tabBarIcon","focused","iconActive","unmountOnBlur","NotificationsTab","UsersTab","createDrawerNavigator","DrawerNavigator","drawerContent","drawerType","Authenticated","prefixes","LeftDrawer","UserListScreen","AircraftScreen","MasterLogScreen","AircraftsScreen","PermissionScreen","DropzoneSelectScreen","SignUpWizard","RootNavigator","listener","Appearance","addChangeListener","colorScheme","handler","useAppearanceListener","onRouteChange","s","getPathFromState","reverse","screenName","useRouteChange","NavigationContainer","linking","LinkingConfiguration","StatusBar","App","Entrypoint","isLoadingComplete","setLoadingComplete","Font","Inter_400Regular","inter","Inter_500Medium","Inter_700Bold","Roboto_400Regular","roboto","Roboto_500Medium","Roboto_700Bold","Ionicons","font","MaterialIcons","SplashScreen","loadResourcesAndDataAsync","useCachedResources","ActivityIndicator","registerRootComponent"],"mappings":"0EAAAA,EAAOC,QAAU,IAA0B,mC,qBCA3CD,EAAOC,QAAU,IAA0B,qC,6wbCA3CD,EAAOC,QAAU,IAA0B,iC,gpaCA3C,IAAIC,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,kBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACH,EAAOM,EAAIH,EAAS,MAG9C,IAAII,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAEPL,EAAIC,EAASI,GAI1BP,EAAOC,QAAUE,EAAQK,QAAU,I,sBChBnCP,EADkC,EAAQ,IAChCQ,EAA4B,IAE9BC,KAAK,CAACV,EAAOM,EAAI,2FAA4F,KAErHN,EAAOC,QAAUA,G,wKCFiB,YAAhBU,UAASC,KAKzBC,EAAQ,MACRA,EAAQ,MAERA,EAAQ,MACRA,EAAQ,MAERA,EAAQ,MACRA,EAAQ,MAERA,EAAQ,MACRA,EAAQ,MAERA,EAAQ,MACRA,EAAQ,MAERA,EAAQ,MACRA,EAAQ,MAERA,EAAQ,MACRA,EAAQ,MAERA,EAAQ,MAIJ,yBAA0BC,KAAKC,gBAIjCD,KAAKC,eAAeC,qBAAqBH,EAAQ,MAAqBI,W,qBClC3DC,GAFA,SAAAC,UAAUC,eAAV,IAAoBC,SAApB,SAA6BF,UAAUG,YAAvC,SAA6B,EAAqBD,QAAlD,SAA6B,EAA4BE,iBAAzD,EAA6B,EAAwCF,O,kBCI9EG,EAAmBb,UAASc,OAAO,CACvCC,IAAG,MAAER,OAAF,EAAEA,EAAQS,cACbC,QAAO,MAAEV,OAAF,EAAEA,EAAQW,kBACjBC,IAAG,MAAEZ,OAAF,EAAEA,EAAQa,gBAGfC,UAASC,KAAKT,GACdU,0BAAgBV,G,4BCXhBW,uBAAqC,CACnCC,mBAAmB,WAAD,WAAE,kBAAa,CAC/BC,iBAAiB,EACjBC,iBAAiB,EACjBC,gBAAgB,MAHA,kDAAC,K,IC0eTC,EAQAC,EA6IAC,EASAC,EAiCAC,EA2NAC,EAkFAC,EA0XAC,EAiFAC,EAwBAC,EAmkBAC,EAMAC,E,iGAxhDAX,K,oBAAAA,E,YAAAA,E,qBAAAA,E,kBAAAA,E,iBAAAA,M,cAQAC,K,kBAAAA,E,YAAAA,E,kBAAAA,E,yCAAAA,E,uBAAAA,M,cA6IAC,K,cAAAA,E,gBAAAA,E,aAAAA,M,cASAC,K,oBAAAA,E,sBAAAA,E,kBAAAA,E,kBAAAA,E,mBAAAA,M,cAiCAC,K,cAAAA,E,cAAAA,E,aAAAA,M,cA2NAC,K,6BAAAA,E,sBAAAA,E,qBAAAA,E,gBAAAA,E,aAAAA,M,cAkFAC,K,8BAAAA,E,sBAAAA,E,kBAAAA,E,aAAAA,M,cA0XAC,K,6BAAAA,E,8CAAAA,E,iCAAAA,E,uCAAAA,E,qCAAAA,E,gDAAAA,E,uCAAAA,E,uCAAAA,E,6CAAAA,E,kDAAAA,E,kDAAAA,E,8CAAAA,E,gBAAAA,E,kCAAAA,M,cAiFAC,K,sBAAAA,E,sBAAAA,E,kBAAAA,E,qBAAAA,M,cAwBAC,K,sBAAAA,E,oBAAAA,E,kCAAAA,E,wBAAAA,E,sCAAAA,E,oCAAAA,E,sCAAAA,E,0BAAAA,E,wCAAAA,E,wBAAAA,E,8BAAAA,E,0BAAAA,E,sBAAAA,E,wBAAAA,E,sCAAAA,E,oCAAAA,E,wBAAAA,E,4CAAAA,E,gCAAAA,E,gDAAAA,E,8CAAAA,E,gCAAAA,E,sCAAAA,E,0BAAAA,E,wCAAAA,E,wBAAAA,E,8BAAAA,E,0BAAAA,E,sBAAAA,E,wBAAAA,E,sCAAAA,E,oCAAAA,E,wBAAAA,E,gCAAAA,E,kCAAAA,E,kCAAAA,E,sBAAAA,E,oCAAAA,E,oBAAAA,E,0BAAAA,E,kCAAAA,E,kBAAAA,E,oBAAAA,E,4CAAAA,E,oCAAAA,E,oCAAAA,E,0CAAAA,E,8BAAAA,E,8BAAAA,E,0BAAAA,E,0CAAAA,E,wCAAAA,E,4BAAAA,E,oCAAAA,E,gCAAAA,E,sCAAAA,E,0BAAAA,E,wCAAAA,E,wBAAAA,E,8BAAAA,E,sCAAAA,E,0BAAAA,E,sBAAAA,E,wBAAAA,E,sCAAAA,E,oCAAAA,E,wBAAAA,E,gCAAAA,E,kDAAAA,E,sCAAAA,E,0BAAAA,E,gCAAAA,E,wCAAAA,E,qCAAAA,M,cAmkBAC,K,sBAAAA,E,sBAAAA,E,qBAAAA,M,cAMAC,K,kBAAAA,E,oBAAAA,E,gBAAAA,E,YAAAA,E,yBAAAA,M,KCz+DL,I,EC1BKC,ED0BCC,EAAmC,CA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","file":"static/js/app.a0edd1da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/night.f2cf113d.png\";","module.exports = __webpack_public_path__ + \"static/media/weather.0908eb6b.png\";","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!./LoadsByDay.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".none {\\n  fill: #CCC;\\n}\\n\\n.few {\\n  fill: #00AA00;\\n}\\n\\n.many {\\n  fill: #008800;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable global-require */\nimport { Platform } from 'react-native';\n\nconst isAndroid = Platform.OS === 'android';\nconst isHermesEnabled = false;\n\n// in your index.js file\nif (isHermesEnabled || isAndroid) {\n  require('@formatjs/intl-getcanonicallocales/polyfill');\n  require('@formatjs/intl-locale/polyfill');\n\n  require('@formatjs/intl-pluralrules/polyfill');\n  require('@formatjs/intl-pluralrules/locale-data/en');\n\n  require('@formatjs/intl-displaynames/polyfill');\n  require('@formatjs/intl-displaynames/locale-data/en');\n\n  require('@formatjs/intl-listformat/polyfill');\n  require('@formatjs/intl-listformat/locale-data/en');\n\n  require('@formatjs/intl-numberformat/polyfill');\n  require('@formatjs/intl-numberformat/locale-data/en');\n\n  require('@formatjs/intl-relativetimeformat/polyfill');\n  require('@formatjs/intl-relativetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/polyfill');\n  require('@formatjs/intl-datetimeformat/locale-data/en');\n\n  require('@formatjs/intl-datetimeformat/add-golden-tz');\n\n  // https://formatjs.io/docs/polyfills/intl-datetimeformat/#default-timezone\n\n  if ('__setDefaultTimeZone' in Intl.DateTimeFormat) {\n    //  Are you using Expo, use this instead of previous 2 lines\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    Intl.DateTimeFormat.__setDefaultTimeZone(require('expo-localization').timezone);\n  }\n}\n","import Constants from 'expo-constants';\n\nconst config = Constants.manifest?.extra || Constants.manifest2?.extra?.expoClient?.extra;\n\nexport default config;\n","import config from 'app/constants/expo';\nimport { Platform } from 'react-native';\n\nimport Geocoder from 'react-native-geocoding';\nimport { setGoogleApiKey } from 'expo-location';\n\nconst googleMapsApiKey = Platform.select({\n  ios: config?.googleMapsIos,\n  android: config?.googleMapsAndroid,\n  web: config?.googleMapsWeb,\n});\n\nGeocoder.init(googleMapsApiKey);\nsetGoogleApiKey(googleMapsApiKey);\n","import * as Notifications from 'expo-notifications';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n","/* eslint-disable */\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** An ISO 8601-encoded date */\n  ISO8601Date: any;\n  /** An ISO 8601-encoded datetime */\n  ISO8601DateTime: any;\n};\n\nexport type AnyResource = {\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n};\n\n/** Autogenerated return type of Apple. */\nexport type ApplePayload = {\n  __typename?: 'ApplePayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateDropzone */\nexport type CreateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateDropzone. */\nexport type CreateDropzonePayload = {\n  __typename?: 'CreateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateExtra */\nexport type CreateExtraInput = {\n  attributes: ExtraInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateExtra. */\nexport type CreateExtraPayload = {\n  __typename?: 'CreateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of CreateGhost */\nexport type CreateGhostInput = {\n  attributes: GhostInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateGhost. */\nexport type CreateGhostPayload = {\n  __typename?: 'CreateGhostPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  user?: Maybe<User>;\n};\n\n/** Autogenerated input type of CreateLoad */\nexport type CreateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateLoad. */\nexport type CreateLoadPayload = {\n  __typename?: 'CreateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateOrder */\nexport type CreateOrderInput = {\n  attributes: OrderInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateOrder. */\nexport type CreateOrderPayload = {\n  __typename?: 'CreateOrderPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  order?: Maybe<Order>;\n};\n\n/** Autogenerated input type of CreatePlane */\nexport type CreatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreatePlane. */\nexport type CreatePlanePayload = {\n  __typename?: 'CreatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of CreateRig */\nexport type CreateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated input type of CreateRigInspection */\nexport type CreateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateRigInspection. */\nexport type CreateRigInspectionPayload = {\n  __typename?: 'CreateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of CreateRig. */\nexport type CreateRigPayload = {\n  __typename?: 'CreateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of CreateSlot */\nexport type CreateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlot. */\nexport type CreateSlotPayload = {\n  __typename?: 'CreateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of CreateSlots */\nexport type CreateSlotsInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateSlots. */\nexport type CreateSlotsPayload = {\n  __typename?: 'CreateSlotsPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of CreateTicket */\nexport type CreateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of CreateTicket. */\nexport type CreateTicketPayload = {\n  __typename?: 'CreateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of CreateWeatherCondition */\nexport type CreateWeatherConditionInput = {\n  attributes: WeatherConditionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of CreateWeatherCondition. */\nexport type CreateWeatherConditionPayload = {\n  __typename?: 'CreateWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\nexport type Credential = {\n  __typename?: 'Credential';\n  accessToken: Scalars['String'];\n  client: Scalars['String'];\n  expiry: Scalars['Int'];\n  tokenType: Scalars['String'];\n  uid: Scalars['String'];\n};\n\n/** Autogenerated input type of DeleteDropzone */\nexport type DeleteDropzoneInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteDropzone. */\nexport type DeleteDropzonePayload = {\n  __typename?: 'DeleteDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of DeleteLoad */\nexport type DeleteLoadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteLoad. */\nexport type DeleteLoadPayload = {\n  __typename?: 'DeleteLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of DeletePlane */\nexport type DeletePlaneInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeletePlane. */\nexport type DeletePlanePayload = {\n  __typename?: 'DeletePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of DeleteRig */\nexport type DeleteRigInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteRig. */\nexport type DeleteRigPayload = {\n  __typename?: 'DeleteRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of DeleteSlot */\nexport type DeleteSlotInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteSlot. */\nexport type DeleteSlotPayload = {\n  __typename?: 'DeleteSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of DeleteTicket */\nexport type DeleteTicketInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteTicket. */\nexport type DeleteTicketPayload = {\n  __typename?: 'DeleteTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of DeleteUser */\nexport type DeleteUserInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  /** The ID of the dropzone user to delete */\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of DeleteUser. */\nexport type DeleteUserPayload = {\n  __typename?: 'DeleteUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Dropzone = AnyResource & Wallet & {\n  __typename?: 'Dropzone';\n  allowedJumpTypes: Array<JumpType>;\n  banner?: Maybe<Scalars['String']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  currentConditions: WeatherCondition;\n  currentUser: DropzoneUser;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  extras: Array<Extra>;\n  federation: Federation;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isCreditSystemEnabled: Scalars['Boolean'];\n  lat?: Maybe<Scalars['Float']>;\n  lng?: Maybe<Scalars['Float']>;\n  /** Get the master log entry for a given date */\n  masterLog: MasterLog;\n  name?: Maybe<Scalars['String']>;\n  orders?: Maybe<OrderConnection>;\n  planes: Array<Plane>;\n  primaryColor?: Maybe<Scalars['String']>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspectionTemplate?: Maybe<FormTemplate>;\n  /** Get rigs for dropzone */\n  rigs?: Maybe<Array<Rig>>;\n  roles: Array<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  secondaryColor?: Maybe<Scalars['String']>;\n  state: DropzoneState;\n  statistics: Statistics;\n  ticketTypes: Array<TicketType>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  userRoles: Array<UserRole>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type DropzoneAllowedJumpTypesArgs = {\n  userId: Array<Scalars['Int']>;\n};\n\n\nexport type DropzoneDropzoneUserArgs = {\n  id?: InputMaybe<Scalars['Int']>;\n  userId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneMasterLogArgs = {\n  date: Scalars['Int'];\n};\n\n\nexport type DropzoneOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzonePurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneRolesArgs = {\n  selectable?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type DropzoneSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneTicketTypesArgs = {\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** The connection type for Dropzone. */\nexport type DropzoneConnection = {\n  __typename?: 'DropzoneConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Dropzone>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneEdge = {\n  __typename?: 'DropzoneEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Dropzone>;\n};\n\nexport type DropzoneInput = {\n  banner?: InputMaybe<Scalars['String']>;\n  federation: Scalars['Int'];\n  isCreditSystemEnabled?: InputMaybe<Scalars['Boolean']>;\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n  lat?: InputMaybe<Scalars['Float']>;\n  lng?: InputMaybe<Scalars['Float']>;\n  name: Scalars['String'];\n  primaryColor?: InputMaybe<Scalars['String']>;\n  requestPublication?: InputMaybe<Scalars['Boolean']>;\n  secondaryColor?: InputMaybe<Scalars['String']>;\n};\n\nexport enum DropzoneState {\n  Archived = 'archived',\n  Demo = 'demo',\n  InReview = 'in_review',\n  Private = 'private',\n  Public = 'public'\n}\n\nexport enum DropzoneStateEvent {\n  /** archive */\n  Archive = 'archive',\n  /** demo */\n  Demo = 'demo',\n  /** publish */\n  Publish = 'publish',\n  /** request_publication */\n  RequestPublication = 'request_publication',\n  /** unpublish */\n  Unpublish = 'unpublish'\n}\n\nexport type DropzoneUser = AnyResource & Wallet & {\n  __typename?: 'DropzoneUser';\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  createdAt: Scalars['ISO8601DateTime'];\n  credits?: Maybe<Scalars['Int']>;\n  dropzone: Dropzone;\n  expiresAt?: Maybe<Scalars['Int']>;\n  guid: Scalars['ID'];\n  hasCredits: Scalars['Boolean'];\n  hasExitWeight: Scalars['Boolean'];\n  hasLicense: Scalars['Boolean'];\n  hasMembership: Scalars['Boolean'];\n  hasReserveInDate: Scalars['Boolean'];\n  hasRigInspection: Scalars['Boolean'];\n  id: Scalars['ID'];\n  jumpTypes?: Maybe<Array<JumpType>>;\n  license?: Maybe<License>;\n  notifications?: Maybe<NotificationConnection>;\n  orders?: Maybe<OrderConnection>;\n  permissions?: Maybe<Array<Permission>>;\n  purchases?: Maybe<OrderConnection>;\n  rigInspections?: Maybe<Array<RigInspection>>;\n  role?: Maybe<UserRole>;\n  sales?: Maybe<OrderConnection>;\n  slots?: Maybe<SlotConnection>;\n  unseenNotifications: Scalars['Int'];\n  updatedAt: Scalars['ISO8601DateTime'];\n  user: User;\n  userFederation?: Maybe<UserFederation>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type DropzoneUserAvailableRigsArgs = {\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  loadId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserNotificationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserPurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type DropzoneUserSlotsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n/** The connection type for DropzoneUser. */\nexport type DropzoneUserConnection = {\n  __typename?: 'DropzoneUserConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<DropzoneUserEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<DropzoneUser>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type DropzoneUserEdge = {\n  __typename?: 'DropzoneUserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<DropzoneUser>;\n};\n\nexport type DropzoneUserInput = {\n  credits?: InputMaybe<Scalars['Float']>;\n  email?: InputMaybe<Scalars['String']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  expiresAt?: InputMaybe<Scalars['Int']>;\n  federationNumber?: InputMaybe<Scalars['String']>;\n  image?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nickname?: InputMaybe<Scalars['String']>;\n  phone?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  userRoleId?: InputMaybe<Scalars['Int']>;\n};\n\nexport type Event = {\n  __typename?: 'Event';\n  action?: Maybe<EventAction>;\n  createdAt: Scalars['ISO8601DateTime'];\n  createdBy?: Maybe<DropzoneUser>;\n  details?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  level?: Maybe<EventLevel>;\n  message?: Maybe<Scalars['String']>;\n  resource?: Maybe<AnyResource>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport enum EventAccessLevel {\n  /** admin */\n  Admin = 'admin',\n  /** system */\n  System = 'system',\n  /** user */\n  User = 'user'\n}\n\nexport enum EventAction {\n  /** assigned */\n  Assigned = 'assigned',\n  /** confirmed */\n  Confirmed = 'confirmed',\n  /** created */\n  Created = 'created',\n  /** deleted */\n  Deleted = 'deleted',\n  /** updated */\n  Updated = 'updated'\n}\n\n/** The connection type for Event. */\nexport type EventConnection = {\n  __typename?: 'EventConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<EventEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Event>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type EventEdge = {\n  __typename?: 'EventEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Event>;\n};\n\nexport enum EventLevel {\n  /** debug */\n  Debug = 'debug',\n  /** error */\n  Error = 'error',\n  /** info */\n  Info = 'info'\n}\n\nexport type Extra = AnyResource & SellableItem & {\n  __typename?: 'Extra';\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  ticketTypes: Array<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type ExtraInput = {\n  cost?: InputMaybe<Scalars['Float']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  ticketTypeIds?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n/** Autogenerated return type of Facebook. */\nexport type FacebookPayload = {\n  __typename?: 'FacebookPayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Federation = {\n  __typename?: 'Federation';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  licenses?: Maybe<Array<License>>;\n  name?: Maybe<Scalars['String']>;\n  slug?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type FieldError = {\n  __typename?: 'FieldError';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\n/** Autogenerated input type of FinalizeLoad */\nexport type FinalizeLoadInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n  state: LoadState;\n};\n\n/** Autogenerated return type of FinalizeLoad. */\nexport type FinalizeLoadPayload = {\n  __typename?: 'FinalizeLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\nexport type FormTemplate = {\n  __typename?: 'FormTemplate';\n  createdAt: Scalars['ISO8601DateTime'];\n  definition?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type FormTemplateInput = {\n  definition?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type GeocodedLocation = {\n  __typename?: 'GeocodedLocation';\n  formattedString?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['ID']>;\n  lat?: Maybe<Scalars['Float']>;\n  lng: Scalars['Float'];\n};\n\nexport type GhostInput = {\n  dropzone: Scalars['Int'];\n  email: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  federationNumber?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name: Scalars['String'];\n  phone?: InputMaybe<Scalars['String']>;\n  role: Scalars['Int'];\n};\n\n/** Autogenerated input type of GrantPermission */\nexport type GrantPermissionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  permission: Permission;\n};\n\n/** Autogenerated return type of GrantPermission. */\nexport type GrantPermissionPayload = {\n  __typename?: 'GrantPermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of JoinFederation */\nexport type JoinFederationInput = {\n  attributes: UserFederationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of JoinFederation. */\nexport type JoinFederationPayload = {\n  __typename?: 'JoinFederationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  userFederation?: Maybe<UserFederation>;\n};\n\nexport type JumpType = {\n  __typename?: 'JumpType';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type License = AnyResource & {\n  __typename?: 'License';\n  createdAt: Scalars['ISO8601DateTime'];\n  federation?: Maybe<Federation>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type Load = AnyResource & {\n  __typename?: 'Load';\n  availableSlots: Scalars['Int'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dispatchAt?: Maybe<Scalars['Int']>;\n  gca?: Maybe<DropzoneUser>;\n  guid: Scalars['ID'];\n  hasLanded?: Maybe<Scalars['Boolean']>;\n  id: Scalars['ID'];\n  isFull: Scalars['Boolean'];\n  isOpen: Scalars['Boolean'];\n  isReady: Scalars['Boolean'];\n  loadMaster?: Maybe<DropzoneUser>;\n  loadNumber: Scalars['Int'];\n  maxSlots: Scalars['Int'];\n  name?: Maybe<Scalars['String']>;\n  occupiedSlots: Scalars['Int'];\n  pilot?: Maybe<DropzoneUser>;\n  plane: Plane;\n  slots?: Maybe<Array<Slot>>;\n  state: LoadState;\n  updatedAt: Scalars['ISO8601DateTime'];\n  weight: Scalars['Int'];\n};\n\n/** The connection type for Load. */\nexport type LoadConnection = {\n  __typename?: 'LoadConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<LoadEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Load>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type LoadEdge = {\n  __typename?: 'LoadEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Load>;\n};\n\nexport type LoadInput = {\n  dispatchAt?: InputMaybe<Scalars['ISO8601DateTime']>;\n  gca?: InputMaybe<Scalars['Int']>;\n  loadMaster?: InputMaybe<Scalars['Int']>;\n  maxSlots?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  pilot?: InputMaybe<Scalars['Int']>;\n  plane?: InputMaybe<Scalars['Int']>;\n  state?: InputMaybe<LoadState>;\n};\n\nexport enum LoadState {\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** cancelled */\n  Cancelled = 'cancelled',\n  /** in_flight */\n  InFlight = 'in_flight',\n  /** landed */\n  Landed = 'landed',\n  /** open */\n  Open = 'open'\n}\n\n/** Autogenerated return type of LoadUpdated. */\nexport type LoadUpdatedPayload = {\n  __typename?: 'LoadUpdatedPayload';\n  load?: Maybe<Load>;\n};\n\nexport type MasterLog = {\n  __typename?: 'MasterLog';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone?: Maybe<Dropzone>;\n  dzso?: Maybe<Array<DropzoneUser>>;\n  id: Scalars['ID'];\n  loads?: Maybe<Array<Load>>;\n  notes?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type MasterLogAircraft = {\n  __typename?: 'MasterLogAircraft';\n  id?: Maybe<Scalars['ID']>;\n  name?: Maybe<Scalars['String']>;\n  registration?: Maybe<Scalars['String']>;\n};\n\nexport type MasterLogEntry = {\n  __typename?: 'MasterLogEntry';\n  date?: Maybe<Scalars['ISO8601Date']>;\n  downloadUrl?: Maybe<Scalars['String']>;\n  dzso?: Maybe<MasterLogUser>;\n  id: Scalars['ID'];\n  loads?: Maybe<Array<MasterLogLoad>>;\n  location?: Maybe<GeocodedLocation>;\n  notes?: Maybe<Scalars['String']>;\n};\n\nexport type MasterLogInput = {\n  dzso?: InputMaybe<Scalars['ID']>;\n  notes?: InputMaybe<Scalars['String']>;\n};\n\nexport type MasterLogLoad = {\n  __typename?: 'MasterLogLoad';\n  aircraft?: Maybe<MasterLogAircraft>;\n  dispatchAt?: Maybe<Scalars['ISO8601DateTime']>;\n  gca?: Maybe<MasterLogUser>;\n  id: Scalars['ID'];\n  loadMaster?: Maybe<MasterLogUser>;\n  loadNumber?: Maybe<Scalars['Int']>;\n  pilot?: Maybe<MasterLogUser>;\n  slots?: Maybe<Array<MasterLogSlot>>;\n};\n\nexport type MasterLogSlot = {\n  __typename?: 'MasterLogSlot';\n  altitude?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  jumpType?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type MasterLogUser = {\n  __typename?: 'MasterLogUser';\n  email?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['ID']>;\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n};\n\nexport enum ModerationRole {\n  /** administrator */\n  Administrator = 'administrator',\n  /** moderator */\n  Moderator = 'moderator',\n  /** support */\n  Support = 'support',\n  /** user */\n  User = 'user'\n}\n\n/** Autogenerated input type of MoveSlot */\nexport type MoveSlotInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  sourceSlot: Scalars['Int'];\n  targetLoad: Scalars['Int'];\n  targetSlot?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of MoveSlot. */\nexport type MoveSlotPayload = {\n  __typename?: 'MoveSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  loads?: Maybe<Array<Load>>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  archiveRig?: Maybe<DeleteRigPayload>;\n  archiveTicketType?: Maybe<DeleteTicketPayload>;\n  createDropzone?: Maybe<CreateDropzonePayload>;\n  createExtra?: Maybe<CreateExtraPayload>;\n  createGhost?: Maybe<CreateGhostPayload>;\n  createLoad?: Maybe<CreateLoadPayload>;\n  createOrder?: Maybe<CreateOrderPayload>;\n  createPlane?: Maybe<CreatePlanePayload>;\n  createRig?: Maybe<CreateRigPayload>;\n  createRigInspection?: Maybe<CreateRigInspectionPayload>;\n  createSlot?: Maybe<CreateSlotPayload>;\n  createSlots?: Maybe<CreateSlotsPayload>;\n  createTicketType?: Maybe<CreateTicketPayload>;\n  createWeatherCondition?: Maybe<CreateWeatherConditionPayload>;\n  deleteDropzone?: Maybe<DeleteDropzonePayload>;\n  deleteLoad?: Maybe<DeleteLoadPayload>;\n  deletePlane?: Maybe<DeletePlanePayload>;\n  deleteSlot?: Maybe<DeleteSlotPayload>;\n  deleteUser?: Maybe<DeleteUserPayload>;\n  finalizeLoad?: Maybe<FinalizeLoadPayload>;\n  grantPermission?: Maybe<GrantPermissionPayload>;\n  joinFederation?: Maybe<JoinFederationPayload>;\n  loginWithApple?: Maybe<ApplePayload>;\n  loginWithFacebook?: Maybe<FacebookPayload>;\n  moveSlot?: Maybe<MoveSlotPayload>;\n  reloadWeatherCondition?: Maybe<ReloadWeatherConditionPayload>;\n  revokePermission?: Maybe<RevokePermissionPayload>;\n  updateDropzone?: Maybe<UpdateDropzonePayload>;\n  updateDropzoneUser?: Maybe<UpdateDropzoneUserPayload>;\n  updateExtra?: Maybe<UpdateExtraPayload>;\n  updateFormTemplate?: Maybe<UpdateFormTemplatePayload>;\n  updateLoad?: Maybe<UpdateLoadPayload>;\n  updateMasterLog?: Maybe<UpdateMasterLogPayload>;\n  updateNotification?: Maybe<UpdateNotificationPayload>;\n  updatePlane?: Maybe<UpdatePlanePayload>;\n  updateRig?: Maybe<UpdateRigPayload>;\n  updateRigInspection?: Maybe<UpdateRigInspectionPayload>;\n  updateRole?: Maybe<UpdateRolePayload>;\n  updateSlot?: Maybe<UpdateSlotPayload>;\n  updateTicketType?: Maybe<UpdateTicketPayload>;\n  updateUser?: Maybe<UpdateUserPayload>;\n  updateVisibility?: Maybe<UpdateVisibilityPayload>;\n  userConfirmRegistrationWithToken?: Maybe<UserConfirmRegistrationWithTokenPayload>;\n  userLogin?: Maybe<UserLoginPayload>;\n  userLogout?: Maybe<UserLogoutPayload>;\n  userRegister?: Maybe<SignUpPayload>;\n  userResendConfirmationWithToken?: Maybe<UserResendConfirmationWithTokenPayload>;\n  userSendPasswordResetWithToken?: Maybe<UserSendPasswordResetWithTokenPayload>;\n  userUpdatePasswordWithToken?: Maybe<UserUpdatePasswordWithTokenPayload>;\n};\n\n\nexport type MutationArchiveRigArgs = {\n  input: DeleteRigInput;\n};\n\n\nexport type MutationArchiveTicketTypeArgs = {\n  input: DeleteTicketInput;\n};\n\n\nexport type MutationCreateDropzoneArgs = {\n  input: CreateDropzoneInput;\n};\n\n\nexport type MutationCreateExtraArgs = {\n  input: CreateExtraInput;\n};\n\n\nexport type MutationCreateGhostArgs = {\n  input: CreateGhostInput;\n};\n\n\nexport type MutationCreateLoadArgs = {\n  input: CreateLoadInput;\n};\n\n\nexport type MutationCreateOrderArgs = {\n  input: CreateOrderInput;\n};\n\n\nexport type MutationCreatePlaneArgs = {\n  input: CreatePlaneInput;\n};\n\n\nexport type MutationCreateRigArgs = {\n  input: CreateRigInput;\n};\n\n\nexport type MutationCreateRigInspectionArgs = {\n  input: CreateRigInspectionInput;\n};\n\n\nexport type MutationCreateSlotArgs = {\n  input: CreateSlotInput;\n};\n\n\nexport type MutationCreateSlotsArgs = {\n  input: CreateSlotsInput;\n};\n\n\nexport type MutationCreateTicketTypeArgs = {\n  input: CreateTicketInput;\n};\n\n\nexport type MutationCreateWeatherConditionArgs = {\n  input: CreateWeatherConditionInput;\n};\n\n\nexport type MutationDeleteDropzoneArgs = {\n  input: DeleteDropzoneInput;\n};\n\n\nexport type MutationDeleteLoadArgs = {\n  input: DeleteLoadInput;\n};\n\n\nexport type MutationDeletePlaneArgs = {\n  input: DeletePlaneInput;\n};\n\n\nexport type MutationDeleteSlotArgs = {\n  input: DeleteSlotInput;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input: DeleteUserInput;\n};\n\n\nexport type MutationFinalizeLoadArgs = {\n  input: FinalizeLoadInput;\n};\n\n\nexport type MutationGrantPermissionArgs = {\n  input: GrantPermissionInput;\n};\n\n\nexport type MutationJoinFederationArgs = {\n  input: JoinFederationInput;\n};\n\n\nexport type MutationLoginWithAppleArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n  userIdentity: Scalars['String'];\n};\n\n\nexport type MutationLoginWithFacebookArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n  token: Scalars['String'];\n};\n\n\nexport type MutationMoveSlotArgs = {\n  input: MoveSlotInput;\n};\n\n\nexport type MutationReloadWeatherConditionArgs = {\n  input: ReloadWeatherConditionInput;\n};\n\n\nexport type MutationRevokePermissionArgs = {\n  input: RevokePermissionInput;\n};\n\n\nexport type MutationUpdateDropzoneArgs = {\n  input: UpdateDropzoneInput;\n};\n\n\nexport type MutationUpdateDropzoneUserArgs = {\n  input: UpdateDropzoneUserInput;\n};\n\n\nexport type MutationUpdateExtraArgs = {\n  input: UpdateExtraInput;\n};\n\n\nexport type MutationUpdateFormTemplateArgs = {\n  input: UpdateFormTemplateInput;\n};\n\n\nexport type MutationUpdateLoadArgs = {\n  input: UpdateLoadInput;\n};\n\n\nexport type MutationUpdateMasterLogArgs = {\n  input: UpdateMasterLogInput;\n};\n\n\nexport type MutationUpdateNotificationArgs = {\n  input: UpdateNotificationInput;\n};\n\n\nexport type MutationUpdatePlaneArgs = {\n  input: UpdatePlaneInput;\n};\n\n\nexport type MutationUpdateRigArgs = {\n  input: UpdateRigInput;\n};\n\n\nexport type MutationUpdateRigInspectionArgs = {\n  input: UpdateRigInspectionInput;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input: UpdateRoleInput;\n};\n\n\nexport type MutationUpdateSlotArgs = {\n  input: UpdateSlotInput;\n};\n\n\nexport type MutationUpdateTicketTypeArgs = {\n  input: UpdateTicketInput;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input: UpdateUserInput;\n};\n\n\nexport type MutationUpdateVisibilityArgs = {\n  input: UpdateVisibilityInput;\n};\n\n\nexport type MutationUserConfirmRegistrationWithTokenArgs = {\n  confirmationToken: Scalars['String'];\n};\n\n\nexport type MutationUserLoginArgs = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationUserRegisterArgs = {\n  confirmUrl?: InputMaybe<Scalars['String']>;\n  email: Scalars['String'];\n  exitWeight: Scalars['Float'];\n  licenseId?: InputMaybe<Scalars['Int']>;\n  name: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  phone: Scalars['String'];\n  pushToken?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type MutationUserResendConfirmationWithTokenArgs = {\n  confirmUrl: Scalars['String'];\n  email: Scalars['String'];\n};\n\n\nexport type MutationUserSendPasswordResetWithTokenArgs = {\n  email: Scalars['String'];\n  redirectUrl: Scalars['String'];\n};\n\n\nexport type MutationUserUpdatePasswordWithTokenArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  resetPasswordToken: Scalars['String'];\n};\n\nexport type Notification = {\n  __typename?: 'Notification';\n  createdAt: Scalars['ISO8601DateTime'];\n  id: Scalars['ID'];\n  isSeen: Scalars['Boolean'];\n  message?: Maybe<Scalars['String']>;\n  notificationType?: Maybe<NotificationType>;\n  receivedBy: DropzoneUser;\n  resource?: Maybe<AnyResource>;\n  sentBy?: Maybe<DropzoneUser>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** The connection type for Notification. */\nexport type NotificationConnection = {\n  __typename?: 'NotificationConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<NotificationEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Notification>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type NotificationEdge = {\n  __typename?: 'NotificationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Notification>;\n};\n\nexport type NotificationInput = {\n  isSeen: Scalars['Boolean'];\n};\n\nexport enum NotificationType {\n  /** boarding_call */\n  BoardingCall = 'boarding_call',\n  /** boarding_call_canceled */\n  BoardingCallCanceled = 'boarding_call_canceled',\n  /** credits_updated */\n  CreditsUpdated = 'credits_updated',\n  /** membership_updated */\n  MembershipUpdated = 'membership_updated',\n  /** packjob_confirmed */\n  PackjobConfirmed = 'packjob_confirmed',\n  /** packjob_pending_confirm */\n  PackjobPendingConfirm = 'packjob_pending_confirm',\n  /** permission_granted */\n  PermissionGranted = 'permission_granted',\n  /** permission_revoked */\n  PermissionRevoked = 'permission_revoked',\n  /** publication_requested */\n  PublicationRequested = 'publication_requested',\n  /** rig_inspection_completed */\n  RigInspectionCompleted = 'rig_inspection_completed',\n  /** rig_inspection_requested */\n  RigInspectionRequested = 'rig_inspection_requested',\n  /** rig_pending_inspection */\n  RigPendingInspection = 'rig_pending_inspection',\n  /** system */\n  System = 'system',\n  /** user_manifested */\n  UserManifested = 'user_manifested'\n}\n\nexport type Order = AnyResource & {\n  __typename?: 'Order';\n  amount: Scalars['Float'];\n  buyer: Wallet;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  item?: Maybe<SellableItem>;\n  orderNumber: Scalars['Int'];\n  receipts?: Maybe<Array<Receipt>>;\n  seller: Wallet;\n  state: OrderState;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** The connection type for Order. */\nexport type OrderConnection = {\n  __typename?: 'OrderConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<OrderEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Order>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type OrderEdge = {\n  __typename?: 'OrderEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Order>;\n};\n\nexport type OrderInput = {\n  /** Total amount of the order */\n  amount: Scalars['Float'];\n  /** Any buyer peer, e.g DropzoneUser or Dropzone */\n  buyer: Scalars['ID'];\n  dropzone: Scalars['ID'];\n  /** Item to attach to order */\n  sellableItem?: InputMaybe<Scalars['ID']>;\n  /** Any sales peer, e.g DropzoneUser or Dropzone */\n  seller: Scalars['ID'];\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport enum OrderState {\n  /** cancelled */\n  Cancelled = 'cancelled',\n  /** completed */\n  Completed = 'completed',\n  /** pending */\n  Pending = 'pending',\n  /** refunded */\n  Refunded = 'refunded'\n}\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\nexport enum Permission {\n  ActAsDzso = 'actAsDZSO',\n  ActAsGca = 'actAsGCA',\n  ActAsLoadMaster = 'actAsLoadMaster',\n  ActAsPilot = 'actAsPilot',\n  ActAsRigInspector = 'actAsRigInspector',\n  CreateDoubleSlot = 'createDoubleSlot',\n  CreateDropzoneRig = 'createDropzoneRig',\n  CreateExtra = 'createExtra',\n  CreateFormTemplate = 'createFormTemplate',\n  CreateLoad = 'createLoad',\n  CreatePackjob = 'createPackjob',\n  CreatePlane = 'createPlane',\n  CreateRig = 'createRig',\n  CreateSlot = 'createSlot',\n  CreateStudentSlot = 'createStudentSlot',\n  CreateTicketType = 'createTicketType',\n  CreateUser = 'createUser',\n  CreateUserDoubleSlot = 'createUserDoubleSlot',\n  CreateUserSlot = 'createUserSlot',\n  CreateUserSlotWithSelf = 'createUserSlotWithSelf',\n  CreateUserTransaction = 'createUserTransaction',\n  DeleteDropzone = 'deleteDropzone',\n  DeleteDropzoneRig = 'deleteDropzoneRig',\n  DeleteExtra = 'deleteExtra',\n  DeleteFormTemplate = 'deleteFormTemplate',\n  DeleteLoad = 'deleteLoad',\n  DeletePackjob = 'deletePackjob',\n  DeletePlane = 'deletePlane',\n  DeleteRig = 'deleteRig',\n  DeleteSlot = 'deleteSlot',\n  DeleteStudentSlot = 'deleteStudentSlot',\n  DeleteTicketType = 'deleteTicketType',\n  DeleteUser = 'deleteUser',\n  DeleteUserSlot = 'deleteUserSlot',\n  GrantPermission = 'grantPermission',\n  ReadDropzoneRig = 'readDropzoneRig',\n  ReadExtra = 'readExtra',\n  ReadFormTemplate = 'readFormTemplate',\n  ReadLoad = 'readLoad',\n  ReadPackjob = 'readPackjob',\n  ReadPermissions = 'readPermissions',\n  ReadRig = 'readRig',\n  ReadUser = 'readUser',\n  ReadUserTransactions = 'readUserTransactions',\n  RevokePermission = 'revokePermission',\n  UndeleteDropzone = 'undeleteDropzone',\n  UndeleteDropzoneRig = 'undeleteDropzoneRig',\n  UndeleteExtra = 'undeleteExtra',\n  UndeletePlane = 'undeletePlane',\n  UndeleteRig = 'undeleteRig',\n  UndeleteStudentSlot = 'undeleteStudentSlot',\n  UndeleteTicketType = 'undeleteTicketType',\n  UndeleteUser = 'undeleteUser',\n  UndeleteUserSlot = 'undeleteUserSlot',\n  UpdateDropzone = 'updateDropzone',\n  UpdateDropzoneRig = 'updateDropzoneRig',\n  UpdateExtra = 'updateExtra',\n  UpdateFormTemplate = 'updateFormTemplate',\n  UpdateLoad = 'updateLoad',\n  UpdatePackjob = 'updatePackjob',\n  UpdatePermissions = 'updatePermissions',\n  UpdatePlane = 'updatePlane',\n  UpdateRig = 'updateRig',\n  UpdateSlot = 'updateSlot',\n  UpdateStudentSlot = 'updateStudentSlot',\n  UpdateTicketType = 'updateTicketType',\n  UpdateUser = 'updateUser',\n  UpdateUserSlot = 'updateUserSlot',\n  UpdateWeatherConditions = 'updateWeatherConditions',\n  ViewAdminActivity = 'viewAdminActivity',\n  ViewRevenue = 'viewRevenue',\n  ViewStatistics = 'viewStatistics',\n  ViewSystemActivity = 'viewSystemActivity',\n  ViewUserActivity = 'viewUserActivity'\n}\n\nexport type Plane = AnyResource & {\n  __typename?: 'Plane';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  guid: Scalars['ID'];\n  hours?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  maxSlots: Scalars['Int'];\n  minSlots?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  nextMaintenanceHours?: Maybe<Scalars['Int']>;\n  registration?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type PlaneInput = {\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  hours?: InputMaybe<Scalars['Int']>;\n  maxSlots?: InputMaybe<Scalars['Int']>;\n  minSlots?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nextMaintenanceHours?: InputMaybe<Scalars['Int']>;\n  registration?: InputMaybe<Scalars['String']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Get all Activity Events for a dropzone (or all dropzones) */\n  activity: EventConnection;\n  /** Get user rigs that have been inspected and marked as OK + dropzone rigs */\n  availableRigs?: Maybe<Array<Rig>>;\n  /** Currently authenticated user */\n  currentUser?: Maybe<User>;\n  /** Get dropzone details */\n  dropzone?: Maybe<Dropzone>;\n  /** Get a specific user at a dropzone */\n  dropzoneUser?: Maybe<DropzoneUser>;\n  /** Search users at a dropzone */\n  dropzoneUsers?: Maybe<DropzoneUserConnection>;\n  /** Get all available dropzones */\n  dropzones: DropzoneConnection;\n  /** Get all ticket type extras */\n  extras: Array<Extra>;\n  /** Get all available federations */\n  federations: Array<Federation>;\n  /** Find location by searching */\n  geocode?: Maybe<GeocodedLocation>;\n  /** Get Base64 images via GraphQL */\n  image?: Maybe<Scalars['String']>;\n  /** Get all jump types */\n  jumpTypes: Array<JumpType>;\n  /** Get all licenses for a federation */\n  licenses: Array<License>;\n  /** Get load by id */\n  load?: Maybe<Load>;\n  /** Get all loads */\n  loads: LoadConnection;\n  /** Get the master log entry for a specific day */\n  masterLog?: Maybe<MasterLogEntry>;\n  /** Get Aircrafts for a dropzone */\n  planes?: Maybe<Array<Plane>>;\n  /** Get ticket types for a dropzone */\n  ticketTypes?: Maybe<Array<TicketType>>;\n};\n\n\nexport type QueryActivityArgs = {\n  accessLevels?: InputMaybe<Array<EventAccessLevel>>;\n  actions?: InputMaybe<Array<EventAction>>;\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  createdBy?: InputMaybe<Array<Scalars['ID']>>;\n  dropzone?: InputMaybe<Array<Scalars['ID']>>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  levels?: InputMaybe<Array<EventLevel>>;\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type QueryAvailableRigsArgs = {\n  dropzoneUser: Scalars['Int'];\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  loadId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryDropzoneArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryDropzoneUserArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryDropzoneUsersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  dropzone: Scalars['ID'];\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  licensed?: InputMaybe<Scalars['Boolean']>;\n  permissions?: InputMaybe<Array<Permission>>;\n  search?: InputMaybe<Scalars['String']>;\n};\n\n\nexport type QueryDropzonesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  state?: InputMaybe<Array<DropzoneState>>;\n};\n\n\nexport type QueryExtrasArgs = {\n  dropzone?: InputMaybe<Scalars['ID']>;\n  ticketType?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryGeocodeArgs = {\n  search: Scalars['String'];\n};\n\n\nexport type QueryImageArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryJumpTypesArgs = {\n  dropzoneUsers?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n\nexport type QueryLicensesArgs = {\n  federationId?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryLoadArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type QueryLoadsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  date?: InputMaybe<Scalars['ISO8601Date']>;\n  dropzone: Scalars['ID'];\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type QueryMasterLogArgs = {\n  date: Scalars['ISO8601Date'];\n  dropzone: Scalars['ID'];\n};\n\n\nexport type QueryPlanesArgs = {\n  dropzone: Scalars['ID'];\n};\n\n\nexport type QueryTicketTypesArgs = {\n  allowManifestingSelf?: InputMaybe<Scalars['Boolean']>;\n  dropzone: Scalars['ID'];\n};\n\nexport type Receipt = AnyResource & {\n  __typename?: 'Receipt';\n  amountCents?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  order: Order;\n  transactions: Array<Transaction>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** Autogenerated input type of ReloadWeatherCondition */\nexport type ReloadWeatherConditionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of ReloadWeatherCondition. */\nexport type ReloadWeatherConditionPayload = {\n  __typename?: 'ReloadWeatherConditionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  weatherCondition?: Maybe<WeatherCondition>;\n};\n\n/** Autogenerated input type of RevokePermission */\nexport type RevokePermissionInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  permission: Permission;\n};\n\n/** Autogenerated return type of RevokePermission. */\nexport type RevokePermissionPayload = {\n  __typename?: 'RevokePermissionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Rig = AnyResource & {\n  __typename?: 'Rig';\n  canopySize?: Maybe<Scalars['Int']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone?: Maybe<Dropzone>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isPublic: Scalars['Boolean'];\n  maintainedAt?: Maybe<Scalars['Int']>;\n  make?: Maybe<Scalars['String']>;\n  model?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  owner?: Maybe<User>;\n  packValue?: Maybe<Scalars['Int']>;\n  packingCard?: Maybe<Scalars['String']>;\n  repackExpiresAt?: Maybe<Scalars['Int']>;\n  rigInspections?: Maybe<RigInspection>;\n  rigType?: Maybe<Scalars['String']>;\n  serial?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n\nexport type RigRigInspectionsArgs = {\n  dropzoneId: Scalars['ID'];\n};\n\nexport type RigInput = {\n  canopySize?: InputMaybe<Scalars['Int']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  isPublic?: InputMaybe<Scalars['Boolean']>;\n  maintainedAt?: InputMaybe<Scalars['Int']>;\n  make?: InputMaybe<Scalars['String']>;\n  model?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n  packValue?: InputMaybe<Scalars['Int']>;\n  packingCard?: InputMaybe<Scalars['String']>;\n  repackExpiresAt?: InputMaybe<Scalars['Int']>;\n  /** student / sport / tandem */\n  rigType?: InputMaybe<Scalars['String']>;\n  serial?: InputMaybe<Scalars['String']>;\n  userId?: InputMaybe<Scalars['Int']>;\n};\n\nexport type RigInspection = AnyResource & {\n  __typename?: 'RigInspection';\n  createdAt: Scalars['ISO8601DateTime'];\n  definition: Scalars['String'];\n  dropzoneUser: DropzoneUser;\n  formTemplate: FormTemplate;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  inspectedBy: DropzoneUser;\n  isOk: Scalars['Boolean'];\n  rig?: Maybe<Rig>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type RigInspectionInput = {\n  definition?: InputMaybe<Scalars['String']>;\n  dropzone?: InputMaybe<Scalars['ID']>;\n  isOk?: InputMaybe<Scalars['Boolean']>;\n  rig?: InputMaybe<Scalars['ID']>;\n};\n\nexport type SellableItem = {\n  cost?: Maybe<Scalars['Float']>;\n  title?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of SignUp. */\nexport type SignUpPayload = {\n  __typename?: 'SignUpPayload';\n  authenticatable?: Maybe<User>;\n  /**\n   * Authentication credentials. Null if after signUp resource is not active for\n   * authentication (e.g. Email confirmation required).\n   */\n  credentials?: Maybe<Credential>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type Slot = AnyResource & SellableItem & {\n  __typename?: 'Slot';\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUser?: Maybe<DropzoneUser>;\n  exitWeight: Scalars['Int'];\n  extras?: Maybe<Array<Extra>>;\n  groupNumber: Scalars['Int'];\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  jumpType?: Maybe<JumpType>;\n  load: Load;\n  order?: Maybe<Order>;\n  passengerExitWeight?: Maybe<Scalars['Float']>;\n  passengerName?: Maybe<Scalars['String']>;\n  rig?: Maybe<Rig>;\n  ticketType?: Maybe<TicketType>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  wingLoading?: Maybe<Scalars['Float']>;\n};\n\n/** The connection type for Slot. */\nexport type SlotConnection = {\n  __typename?: 'SlotConnection';\n  /** A list of edges. */\n  edges?: Maybe<Array<Maybe<SlotEdge>>>;\n  /** A list of nodes. */\n  nodes?: Maybe<Array<Maybe<Slot>>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type SlotEdge = {\n  __typename?: 'SlotEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node?: Maybe<Slot>;\n};\n\nexport type SlotInput = {\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  extras?: InputMaybe<Array<Scalars['ID']>>;\n  groupNumber?: InputMaybe<Scalars['Int']>;\n  jumpType?: InputMaybe<Scalars['ID']>;\n  load?: InputMaybe<Scalars['ID']>;\n  passengerExitWeight?: InputMaybe<Scalars['Float']>;\n  passengerName?: InputMaybe<Scalars['String']>;\n  rig?: InputMaybe<Scalars['ID']>;\n  ticketType?: InputMaybe<Scalars['ID']>;\n  userGroup?: InputMaybe<Array<SlotUser>>;\n};\n\nexport type SlotUser = {\n  exitWeight: Scalars['Float'];\n  id: Scalars['Int'];\n  passengerExitWeight?: InputMaybe<Scalars['Float']>;\n  passengerName?: InputMaybe<Scalars['String']>;\n  rig?: InputMaybe<Scalars['ID']>;\n};\n\nexport type Statistics = {\n  __typename?: 'Statistics';\n  activeUserCount: Scalars['Int'];\n  cancelledLoadsCount: Scalars['Int'];\n  dzsoCount: Scalars['Int'];\n  finalizedLoadsCount: Scalars['Int'];\n  gcaCount: Scalars['Int'];\n  id: Scalars['ID'];\n  inactiveUserCount: Scalars['Int'];\n  /** Get the number of loads dispatched per day */\n  loadCountByDay?: Maybe<Array<StatisticsByDate>>;\n  loadsCount: Scalars['Int'];\n  pilotCount: Scalars['Int'];\n  revenueCentsCount: Scalars['Int'];\n  rigInspectorCount: Scalars['Int'];\n  /** Get the number of slots by jump type */\n  slotsByJumpType?: Maybe<Array<StatisticsByName>>;\n  slotsCount: Scalars['Int'];\n  totalUserCount: Scalars['Int'];\n};\n\n\nexport type StatisticsCancelledLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsFinalizedLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsLoadCountByDayArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsLoadsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsRevenueCentsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsSlotsByJumpTypeArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\n\nexport type StatisticsSlotsCountArgs = {\n  timeRange?: InputMaybe<TimeRangeInput>;\n};\n\nexport type StatisticsByDate = {\n  __typename?: 'StatisticsByDate';\n  count: Scalars['Int'];\n  date: Scalars['ISO8601Date'];\n};\n\nexport type StatisticsByName = {\n  __typename?: 'StatisticsByName';\n  count: Scalars['Int'];\n  name: Scalars['String'];\n};\n\nexport type Subscription = {\n  __typename?: 'Subscription';\n  loadUpdated: LoadUpdatedPayload;\n  userUpdated: UserUpdatedPayload;\n};\n\n\nexport type SubscriptionLoadUpdatedArgs = {\n  loadId: Scalars['ID'];\n};\n\n\nexport type SubscriptionUserUpdatedArgs = {\n  dropzoneUserId: Scalars['ID'];\n};\n\nexport type TicketType = AnyResource & SellableItem & {\n  __typename?: 'TicketType';\n  allowManifestingSelf?: Maybe<Scalars['Boolean']>;\n  altitude?: Maybe<Scalars['Int']>;\n  cost: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  currency?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  extras: Array<Extra>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  isTandem?: Maybe<Scalars['Boolean']>;\n  name?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport type TicketTypeInput = {\n  allowManifestingSelf?: InputMaybe<Scalars['Boolean']>;\n  altitude?: InputMaybe<Scalars['Int']>;\n  cost?: InputMaybe<Scalars['Float']>;\n  currency?: InputMaybe<Scalars['String']>;\n  dropzoneId?: InputMaybe<Scalars['Int']>;\n  extraIds?: InputMaybe<Array<Scalars['Int']>>;\n  isTandem?: InputMaybe<Scalars['Boolean']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type TimeRangeInput = {\n  endTime?: InputMaybe<Scalars['ISO8601DateTime']>;\n  startTime?: InputMaybe<Scalars['ISO8601DateTime']>;\n};\n\nexport type Transaction = AnyResource & {\n  __typename?: 'Transaction';\n  amount: Scalars['Float'];\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUser: DropzoneUser;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  message?: Maybe<Scalars['String']>;\n  receipt: Receipt;\n  receiver: Wallet;\n  sender: Wallet;\n  status: TransactionStatus;\n  transactionType: TransactionType;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\nexport enum TransactionStatus {\n  Cancelled = 'cancelled',\n  Completed = 'completed',\n  Reserved = 'reserved'\n}\n\nexport enum TransactionType {\n  Deposit = 'deposit',\n  Purchase = 'purchase',\n  Refund = 'refund',\n  Sale = 'sale',\n  Withdrawal = 'withdrawal'\n}\n\n/** Autogenerated input type of UpdateDropzone */\nexport type UpdateDropzoneInput = {\n  attributes: DropzoneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateDropzone. */\nexport type UpdateDropzonePayload = {\n  __typename?: 'UpdateDropzonePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateDropzoneUser */\nexport type UpdateDropzoneUserInput = {\n  attributes: DropzoneUserInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n};\n\n/** Autogenerated return type of UpdateDropzoneUser. */\nexport type UpdateDropzoneUserPayload = {\n  __typename?: 'UpdateDropzoneUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateExtra */\nexport type UpdateExtraInput = {\n  attributes: ExtraInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateExtra. */\nexport type UpdateExtraPayload = {\n  __typename?: 'UpdateExtraPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  extra?: Maybe<Extra>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateFormTemplate */\nexport type UpdateFormTemplateInput = {\n  attributes: FormTemplateInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateFormTemplate. */\nexport type UpdateFormTemplatePayload = {\n  __typename?: 'UpdateFormTemplatePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  formTemplate?: Maybe<FormTemplate>;\n};\n\n/** Autogenerated input type of UpdateLoad */\nexport type UpdateLoadInput = {\n  attributes: LoadInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateLoad. */\nexport type UpdateLoadPayload = {\n  __typename?: 'UpdateLoadPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  load?: Maybe<Load>;\n};\n\n/** Autogenerated input type of UpdateMasterLog */\nexport type UpdateMasterLogInput = {\n  attributes: MasterLogInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  date: Scalars['ISO8601Date'];\n  dropzone: Scalars['ID'];\n};\n\n/** Autogenerated return type of UpdateMasterLog. */\nexport type UpdateMasterLogPayload = {\n  __typename?: 'UpdateMasterLogPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  masterLog?: Maybe<MasterLogEntry>;\n};\n\n/** Autogenerated input type of UpdateNotification */\nexport type UpdateNotificationInput = {\n  attributes: NotificationInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateNotification. */\nexport type UpdateNotificationPayload = {\n  __typename?: 'UpdateNotificationPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  notification?: Maybe<Notification>;\n};\n\n/** Autogenerated input type of UpdatePlane */\nexport type UpdatePlaneInput = {\n  attributes: PlaneInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdatePlane. */\nexport type UpdatePlanePayload = {\n  __typename?: 'UpdatePlanePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  plane?: Maybe<Plane>;\n};\n\n/** Autogenerated input type of UpdateRig */\nexport type UpdateRigInput = {\n  attributes: RigInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated input type of UpdateRigInspection */\nexport type UpdateRigInspectionInput = {\n  attributes: RigInspectionInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** Autogenerated return type of UpdateRigInspection. */\nexport type UpdateRigInspectionPayload = {\n  __typename?: 'UpdateRigInspectionPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rigInspection?: Maybe<RigInspection>;\n};\n\n/** Autogenerated return type of UpdateRig. */\nexport type UpdateRigPayload = {\n  __typename?: 'UpdateRigPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  rig?: Maybe<Rig>;\n};\n\n/** Autogenerated input type of UpdateRole */\nexport type UpdateRoleInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  enabled: Scalars['Boolean'];\n  id?: InputMaybe<Scalars['Int']>;\n  permission: Scalars['String'];\n};\n\n/** Autogenerated return type of UpdateRole. */\nexport type UpdateRolePayload = {\n  __typename?: 'UpdateRolePayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  role?: Maybe<UserRole>;\n};\n\n/** Autogenerated input type of UpdateSlot */\nexport type UpdateSlotInput = {\n  attributes: SlotInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateSlot. */\nexport type UpdateSlotPayload = {\n  __typename?: 'UpdateSlotPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  slot?: Maybe<Slot>;\n};\n\n/** Autogenerated input type of UpdateTicket */\nexport type UpdateTicketInput = {\n  attributes: TicketTypeInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  id: Scalars['Int'];\n};\n\n/** Autogenerated return type of UpdateTicket. */\nexport type UpdateTicketPayload = {\n  __typename?: 'UpdateTicketPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n  ticketType?: Maybe<TicketType>;\n};\n\n/** Autogenerated input type of UpdateUser */\nexport type UpdateUserInput = {\n  attributes: UserInput;\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzoneUser?: InputMaybe<Scalars['ID']>;\n};\n\n/** Autogenerated return type of UpdateUser. */\nexport type UpdateUserPayload = {\n  __typename?: 'UpdateUserPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzoneUser?: Maybe<DropzoneUser>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\n/** Autogenerated input type of UpdateVisibility */\nexport type UpdateVisibilityInput = {\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: InputMaybe<Scalars['String']>;\n  dropzone: Scalars['ID'];\n  event: DropzoneStateEvent;\n};\n\n/** Autogenerated return type of UpdateVisibility. */\nexport type UpdateVisibilityPayload = {\n  __typename?: 'UpdateVisibilityPayload';\n  /** A unique identifier for the client performing the mutation. */\n  clientMutationId?: Maybe<Scalars['String']>;\n  dropzone?: Maybe<Dropzone>;\n  errors?: Maybe<Array<Scalars['String']>>;\n  fieldErrors?: Maybe<Array<FieldError>>;\n};\n\nexport type User = AnyResource & {\n  __typename?: 'User';\n  apfNumber?: Maybe<Scalars['String']>;\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzoneUsers?: Maybe<Array<DropzoneUser>>;\n  email?: Maybe<Scalars['String']>;\n  exitWeight?: Maybe<Scalars['String']>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  image?: Maybe<Scalars['String']>;\n  licenses?: Maybe<Array<License>>;\n  moderationRole?: Maybe<ModerationRole>;\n  name?: Maybe<Scalars['String']>;\n  nickname?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  pushToken?: Maybe<Scalars['String']>;\n  rigs?: Maybe<Array<Rig>>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  userFederations?: Maybe<Array<UserFederation>>;\n};\n\n/** Autogenerated return type of UserConfirmRegistrationWithToken. */\nexport type UserConfirmRegistrationWithTokenPayload = {\n  __typename?: 'UserConfirmRegistrationWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Null unless user is signed in after confirmation. */\n  credentials?: Maybe<Credential>;\n};\n\nexport type UserFederation = AnyResource & {\n  __typename?: 'UserFederation';\n  federation: Federation;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  license?: Maybe<License>;\n  qualifications?: Maybe<Array<UserQualification>>;\n  /** User Federation ID, e.g APF number */\n  uid?: Maybe<Scalars['String']>;\n  user: User;\n};\n\nexport type UserFederationInput = {\n  federation: Scalars['ID'];\n  license?: InputMaybe<Scalars['ID']>;\n  /** User Federation ID, e.g APF number */\n  uid?: InputMaybe<Scalars['String']>;\n};\n\nexport type UserInput = {\n  email?: InputMaybe<Scalars['String']>;\n  exitWeight?: InputMaybe<Scalars['Float']>;\n  federationNumber?: InputMaybe<Scalars['String']>;\n  image?: InputMaybe<Scalars['String']>;\n  license?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n  nickname?: InputMaybe<Scalars['String']>;\n  phone?: InputMaybe<Scalars['String']>;\n  pushToken?: InputMaybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserLogin. */\nexport type UserLoginPayload = {\n  __typename?: 'UserLoginPayload';\n  authenticatable: User;\n  credentials: Credential;\n};\n\n/** Autogenerated return type of UserLogout. */\nexport type UserLogoutPayload = {\n  __typename?: 'UserLogoutPayload';\n  authenticatable: User;\n};\n\nexport type UserQualification = AnyResource & {\n  __typename?: 'UserQualification';\n  expiresAt?: Maybe<Scalars['Int']>;\n  guid: Scalars['ID'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  uid?: Maybe<Scalars['String']>;\n};\n\n/** Autogenerated return type of UserResendConfirmationWithToken. */\nexport type UserResendConfirmationWithTokenPayload = {\n  __typename?: 'UserResendConfirmationWithTokenPayload';\n  message: Scalars['String'];\n};\n\nexport type UserRole = {\n  __typename?: 'UserRole';\n  createdAt: Scalars['ISO8601DateTime'];\n  dropzone: Dropzone;\n  dropzoneId: Scalars['Int'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  permissions: Array<Scalars['String']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n};\n\n/** Autogenerated return type of UserSendPasswordResetWithToken. */\nexport type UserSendPasswordResetWithTokenPayload = {\n  __typename?: 'UserSendPasswordResetWithTokenPayload';\n  message: Scalars['String'];\n};\n\n/** Autogenerated return type of UserUpdatePasswordWithToken. */\nexport type UserUpdatePasswordWithTokenPayload = {\n  __typename?: 'UserUpdatePasswordWithTokenPayload';\n  authenticatable: User;\n  /** Authentication credentials. Resource must be signed_in for credentials to be returned. */\n  credentials?: Maybe<Credential>;\n};\n\n/** Autogenerated return type of UserUpdated. */\nexport type UserUpdatedPayload = {\n  __typename?: 'UserUpdatedPayload';\n  dropzoneUser?: Maybe<DropzoneUser>;\n};\n\nexport type Wallet = {\n  orders?: Maybe<OrderConnection>;\n  purchases?: Maybe<OrderConnection>;\n  sales?: Maybe<OrderConnection>;\n  walletId: Scalars['ID'];\n};\n\n\nexport type WalletOrdersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  startDate?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type WalletPurchasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\n\nexport type WalletSalesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n};\n\nexport type WeatherCondition = {\n  __typename?: 'WeatherCondition';\n  createdAt: Scalars['ISO8601DateTime'];\n  exitSpotMiles?: Maybe<Scalars['Int']>;\n  id: Scalars['ID'];\n  jumpRun?: Maybe<Scalars['Int']>;\n  offsetDirection?: Maybe<Scalars['Int']>;\n  offsetMiles?: Maybe<Scalars['Int']>;\n  temperature?: Maybe<Scalars['Int']>;\n  updatedAt: Scalars['ISO8601DateTime'];\n  winds?: Maybe<Array<Wind>>;\n};\n\nexport type WeatherConditionInput = {\n  dropzoneId: Scalars['Int'];\n  exitSpotMiles?: InputMaybe<Scalars['Int']>;\n  jumpRun?: InputMaybe<Scalars['Int']>;\n  offsetDirection?: InputMaybe<Scalars['String']>;\n  offsetMiles?: InputMaybe<Scalars['Int']>;\n  temperature?: InputMaybe<Scalars['Int']>;\n  winds?: InputMaybe<Scalars['String']>;\n};\n\nexport type Wind = {\n  __typename?: 'Wind';\n  altitude?: Maybe<Scalars['String']>;\n  direction?: Maybe<Scalars['String']>;\n  speed?: Maybe<Scalars['String']>;\n  temperature?: Maybe<Scalars['String']>;\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneDetailedFragment, DropzoneExtensiveFragment } from 'app/api/operations';\nimport { DropzoneState } from 'app/api/schema.d';\n\nexport type DropzoneFields = Pick<\n  DropzoneDetailedFragment,\n  | 'federation'\n  | 'name'\n  | 'secondaryColor'\n  | 'primaryColor'\n  | 'banner'\n  | 'status'\n  | 'lng'\n  | 'lat'\n  | 'isCreditSystemEnabled'\n>;\n\ninterface IDropzoneEditState {\n  original: DropzoneExtensiveFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof DropzoneFields]-?: {\n      value: DropzoneDetailedFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneEditState = {\n  original: null,\n  open: false,\n  fields: {\n    federation: {\n      value: null,\n      error: null,\n    },\n    lat: {\n      value: null,\n      error: null,\n    },\n    lng: {\n      value: null,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    secondaryColor: {\n      value: '',\n      error: null,\n    },\n    primaryColor: {\n      value: '',\n      error: null,\n    },\n    banner: {\n      value: '',\n      error: null,\n    },\n    isCreditSystemEnabled: {\n      value: false,\n      error: null,\n    },\n    status: {\n      value: DropzoneState.Public,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzone',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[T, IDropzoneEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneEditState['fields']>(\n      state: IDropzoneEditState,\n      action: PayloadAction<[string, string]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields && 'error' in state.fields[field as T]) {\n        state.fields[field as T].error = error;\n      }\n    },\n\n    setOpen: (\n      state: IDropzoneEditState,\n      action: PayloadAction<boolean | DropzoneExtensiveFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        Object.keys(action.payload).forEach((key) => {\n          const payloadKey = key as keyof typeof action.payload;\n          if (payloadKey in state.fields) {\n            const typedKey = payloadKey as keyof typeof initialState['fields'];\n            state.fields[typedKey].value = (action.payload as DropzoneDetailedFragment)[typedKey];\n          }\n        });\n      }\n    },\n\n    setOriginal: (state: IDropzoneEditState, action: PayloadAction<DropzoneExtensiveFragment>) => {\n      state.original = action.payload;\n      state.open = true;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = (action.payload as DropzoneDetailedFragment)[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IDropzoneEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport enum DropzoneWizardStep {\n  Name = 0,\n  Federation = 1,\n  Location = 2,\n  Branding = 3,\n  Aircraft = 4,\n  Tickets = 5,\n}\n\ninterface IDropzoneWizardState {\n  currentIndex: number;\n  completed: {\n    [K in DropzoneWizardStep]: boolean;\n  };\n}\n\nexport const initialState: IDropzoneWizardState = {\n  currentIndex: -1,\n  completed: {\n    [DropzoneWizardStep.Name]: false,\n    [DropzoneWizardStep.Federation]: false,\n    [DropzoneWizardStep.Location]: false,\n    [DropzoneWizardStep.Aircraft]: false,\n    [DropzoneWizardStep.Tickets]: false,\n    [DropzoneWizardStep.Branding]: false,\n  },\n};\n\nexport default createSlice({\n  name: 'screens/dropzoneWizard',\n  initialState,\n  reducers: {\n    setIndex: (state: IDropzoneWizardState, action: PayloadAction<DropzoneWizardStep>) => {\n      state.currentIndex = action.payload;\n    },\n    complete: (\n      state: IDropzoneWizardState,\n      action: PayloadAction<{ [K in DropzoneWizardStep]: boolean } | undefined>\n    ) => {\n      state.completed = {\n        ...state.completed,\n        ...(action.payload || {\n          [DropzoneWizardStep.Name]: true,\n          [DropzoneWizardStep.Federation]: true,\n          [DropzoneWizardStep.Location]: true,\n          [DropzoneWizardStep.Aircraft]: true,\n          [DropzoneWizardStep.Tickets]: true,\n          [DropzoneWizardStep.Branding]: true,\n        }),\n      };\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\ntype Fields = Pick<DropzoneUserEssentialsFragment, 'role' | 'expiresAt'>;\n\ninterface IDropzoneUserEditState {\n  original: DropzoneUserEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: DropzoneUserEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IDropzoneUserEditState = {\n  original: null,\n  open: false,\n  fields: {\n    role: {\n      value: null,\n      error: null,\n    },\n    expiresAt: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/dropzoneUser',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IDropzoneUserEditState['fields']>(\n      state: IDropzoneUserEditState,\n      action: PayloadAction<[T, IDropzoneUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (\n      state: IDropzoneUserEditState,\n      action: PayloadAction<boolean | DropzoneUserEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.role.value = action.payload.role;\n        state.fields.expiresAt.value = action.payload.expiresAt;\n      }\n    },\n\n    reset: (state: IDropzoneUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RigEssentialsFragment } from 'app/api/operations';\n\nexport type RigFields = Pick<\n  RigEssentialsFragment,\n  'make' | 'model' | 'serial' | 'canopySize' | 'repackExpiresAt' | 'rigType' | 'name'\n>;\n\ninterface IRigEditState {\n  original: RigEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof RigFields]-?: {\n      value: RigEssentialsFragment[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IRigEditState = {\n  original: null,\n  open: false,\n  fields: {\n    make: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    model: {\n      value: '',\n      error: null,\n    },\n    serial: {\n      value: '',\n      error: null,\n    },\n    repackExpiresAt: {\n      value: null,\n      error: null,\n    },\n    canopySize: {\n      value: null,\n      error: null,\n    },\n    rigType: {\n      value: 'sport',\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/rig',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IRigEditState['fields']>(\n      state: IRigEditState,\n      action: PayloadAction<[T, IRigEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOpen: (state: IRigEditState, action: PayloadAction<boolean | RigEssentialsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.make.value = action.payload.make;\n        state.fields.name.value = action.payload.name;\n        state.fields.model.value = action.payload.model;\n        state.fields.serial.value = action.payload.serial;\n        state.fields.repackExpiresAt.value = action.payload.repackExpiresAt;\n        state.fields.canopySize.value = action.payload.canopySize;\n        state.fields.rigType.value = action.payload.rigType;\n      }\n    },\n\n    setOriginal: (state: IRigEditState, action: PayloadAction<RigEssentialsFragment>) => {\n      state.original = action.payload;\n      Object.keys(action.payload).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          state.fields[typedKey].value = action.payload[typedKey];\n        }\n      });\n    },\n\n    reset: (state: IRigEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FieldItem } from '../rig_inspection_template/slice';\n\ninterface IRigInspectionEditState {\n  fields: FieldItem[];\n  open: boolean;\n  ok: boolean;\n}\n\nexport const initialState: IRigInspectionEditState = {\n  fields: [],\n  open: false,\n  ok: false,\n};\n\nexport default createSlice({\n  name: 'forms/rigInspection',\n  initialState,\n  reducers: {\n    setOk: (state: IRigInspectionEditState, action: PayloadAction<boolean>) => {\n      state.ok = action.payload;\n    },\n    setField: (state: IRigInspectionEditState, action: PayloadAction<[number, FieldItem]>) => {\n      const [index, item] = action.payload;\n      state.fields = state.fields.map((field, idx) => (idx === index ? item : field));\n    },\n\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<string>) => {\n      try {\n        state.fields = JSON.parse(action.payload);\n      } catch (error) {\n        console.log(action.payload);\n        if (error instanceof Error) {\n          console.error('Failed to read rig inspection template', error.message, action.payload);\n        }\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.ok = initialState.ok;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { FormTemplate } from '../../../api/schema.d';\n\nexport interface FieldItem {\n  label: string;\n  description?: string;\n  isRequired?: boolean;\n  valueType: 'integer' | 'boolean' | 'date' | 'string';\n  value?: number | boolean | string;\n}\n\ninterface IRigInspectionEditState {\n  original: FormTemplate | null;\n  fields: FieldItem[];\n}\n\nexport const initialState: IRigInspectionEditState = {\n  original: null,\n  fields: [],\n};\n\nexport default createSlice({\n  name: 'forms/rigInspectionTemplate',\n  initialState,\n  reducers: {\n    setFields: (state: IRigInspectionEditState, action: PayloadAction<FieldItem[]>) => {\n      state.fields = action.payload;\n    },\n\n    setOpen: (state: IRigInspectionEditState, action: PayloadAction<FormTemplate>) => {\n      state.original = action.payload;\n\n      try {\n        state.fields = JSON.parse(action.payload.definition || '[]');\n      } catch (err) {\n        console.log('Invalid json: ', action.payload.definition);\n      }\n    },\n\n    reset: (state: IRigInspectionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SlotDetailsFragment, SlotExhaustiveFragment } from 'app/api/operations';\n\nexport type ManifestUserFields = Pick<\n  SlotExhaustiveFragment,\n  | 'jumpType'\n  | 'load'\n  | 'ticketType'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'passengerExitWeight'\n  | 'passengerName'\n>;\n\ninterface ISlotEditState {\n  original: SlotDetailsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof ManifestUserFields]-?: {\n      value: ManifestUserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    rig: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    dropzoneUser: {\n      value: null,\n      error: null,\n    },\n    exitWeight: {\n      value: null,\n      error: null,\n    },\n    passengerName: {\n      value: null,\n      error: null,\n    },\n    passengerExitWeight: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifest',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state.fields) {\n        state.fields[field].error = error;\n      }\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | SlotDetailsFragment>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.jumpType.value = action.payload.jumpType;\n        state.fields.extras.value = action.payload.extras;\n        state.fields.rig.value = action.payload.rig;\n        state.fields.ticketType.value = action.payload.ticketType;\n        state.fields.dropzoneUser.value = action.payload.dropzoneUser;\n        state.fields.exitWeight.value = action.payload.exitWeight;\n        state.fields.passengerName.value = action.payload.passengerName;\n        state.fields.passengerExitWeight.value = action.payload.passengerExitWeight;\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DropzoneUserProfileFragment,\n  LoadDetailsFragment,\n  RigEssentialsFragment,\n  SlotDetailsFragment,\n} from 'app/api/operations';\nimport { first, xorBy } from 'lodash';\nimport { SlotUser } from '../../../api/schema.d';\n\nexport type SlotUserWithRig = Omit<SlotUser, 'rig'> & {\n  rigId?: number;\n  rig?: RigEssentialsFragment;\n  avatar?: string;\n  name?: string;\n};\n\ninterface IFields\n  extends Pick<\n    SlotDetailsFragment & { load: LoadDetailsFragment },\n    'jumpType' | 'load' | 'ticketType' | 'extras' | 'groupNumber'\n  > {\n  users: SlotUserWithRig[];\n}\n\ninterface ISlotEditState {\n  original: IFields | null;\n  open: boolean;\n  fields: {\n    [K in keyof IFields]-?: {\n      value: IFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: ISlotEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpType: {\n      value: null,\n      error: null,\n    },\n    groupNumber: {\n      value: null,\n      error: null,\n    },\n    extras: {\n      value: [],\n      error: null,\n    },\n    load: {\n      value: null,\n      error: null,\n    },\n    ticketType: {\n      value: null,\n      error: null,\n    },\n    users: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/manifestGroup',\n  initialState,\n  reducers: {\n    setField: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISlotEditState['fields']>(\n      state: ISlotEditState,\n      action: PayloadAction<[T, ISlotEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setFromSlots: (\n      state: ISlotEditState,\n      action: PayloadAction<{ load: LoadDetailsFragment; slots: SlotDetailsFragment[] }>\n    ) => {\n      state.fields.users.value = action.payload.slots.map((slot) => ({\n        id: Number(slot.dropzoneUser?.id),\n        rigId: Number(slot.rig?.id),\n        rig: slot.rig,\n        exitWeight: Number(slot.exitWeight),\n      })) as SlotUserWithRig[];\n\n      state.fields.jumpType.value = action.payload.slots.find((i) => i)?.jumpType;\n      state.fields.groupNumber.value = action.payload.slots.find((i) => i)?.groupNumber || null;\n      state.fields.load.value = action.payload.load;\n      state.fields.extras.value = action.payload.slots.find((i) => i)?.extras;\n    },\n\n    setDropzoneUsers: (\n      state: ISlotEditState,\n      action: PayloadAction<DropzoneUserProfileFragment[]>\n    ) => {\n      state.fields.users.value = xorBy(\n        state.fields.users.value,\n        action.payload?.map((dzUser) => {\n          const autoSelectedRig = dzUser?.user?.rigs?.length\n            ? first(dzUser.user.rigs)\n            : first(dzUser.availableRigs);\n          return {\n            id: Number(dzUser.id),\n            rigId: autoSelectedRig?.id ? Number(autoSelectedRig.id) : null,\n            rig: autoSelectedRig,\n            name: dzUser.user.name,\n            avatar: dzUser.user.image,\n            exitWeight: Number(dzUser?.user?.exitWeight),\n          };\n        }) as SlotUserWithRig[],\n        'id'\n      );\n    },\n\n    setOpen: (state: ISlotEditState, action: PayloadAction<boolean | IFields>) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.fields.extras.value = action.payload.extras;\n        state.fields.jumpType.value = action.payload.jumpType;\n        state.fields.load.value = action.payload.load;\n        state.fields.users.value = action.payload.users;\n        state.fields.ticketType.value = action.payload.ticketType;\n      }\n    },\n\n    reset: (state: ISlotEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  CurrentUserDetailedFragment,\n  DropzoneUserDetailsFragment,\n  FederationEssentialsFragment,\n  LicenseDetailsFragment,\n  UserDetailedFragment,\n} from 'app/api/operations';\n\nexport type UserFields = Pick<\n  UserDetailedFragment & { license?: LicenseDetailsFragment },\n  | 'exitWeight'\n  | 'rigs'\n  | 'name'\n  | 'phone'\n  | 'email'\n  | 'apfNumber'\n  | 'nickname'\n  | 'license'\n  | 'image'\n>;\n\ninterface IUserEditState {\n  original: DropzoneUserDetailsFragment | CurrentUserDetailedFragment | null;\n  open: boolean;\n  federation: {\n    value: FederationEssentialsFragment | null;\n    error: null;\n  };\n  fields: {\n    [K in keyof UserFields]-?: {\n      value: UserFields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IUserEditState = {\n  original: null,\n  open: false,\n  federation: {\n    value: null,\n    error: null,\n  },\n  fields: {\n    exitWeight: {\n      value: '',\n      error: null,\n    },\n    image: {\n      value: null,\n      error: null,\n    },\n    apfNumber: {\n      value: '',\n      error: null,\n    },\n    email: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    name: {\n      value: null,\n      error: null,\n    },\n    nickname: {\n      value: null,\n      error: null,\n    },\n    rigs: {\n      value: [],\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/user',\n  initialState,\n  reducers: {\n    setFederation: (state: IUserEditState, action: PayloadAction<FederationEssentialsFragment>) => {\n      state.federation.value = action.payload;\n    },\n    setField: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof IUserEditState['fields']>(\n      state: IUserEditState,\n      action: PayloadAction<[T, IUserEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    setOriginal: (\n      state: IUserEditState,\n      action: PayloadAction<DropzoneUserDetailsFragment | CurrentUserDetailedFragment>\n    ) => {\n      state.original = action.payload;\n      Object.keys(action.payload.user).forEach((key) => {\n        const payloadKey = key as keyof typeof action.payload;\n        if (payloadKey in state.fields) {\n          const typedKey = payloadKey as keyof typeof initialState['fields'];\n          if (typedKey in action.payload) {\n            state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n              typedKey\n            ];\n          } else if (typedKey in action.payload.user) {\n            state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n              typedKey\n            ];\n          }\n        }\n      });\n      state.federation.value =\n        action.payload.license?.federation ||\n        action.payload?.user?.userFederations?.find((i) => i)?.federation ||\n        null;\n      if (\n        state.federation.value &&\n        action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        )?.uid\n      ) {\n        const userFederation = action.payload.user?.userFederations?.find(\n          ({ federation }) => federation.id === state.federation.value?.id\n        );\n        state.fields.apfNumber.value = userFederation?.uid;\n        state.fields.license.value =\n          state.fields.license.value || userFederation?.license || state?.original?.license;\n        console.debug('SET APF NUMBER TO ', state.fields.apfNumber.value);\n      }\n    },\n\n    setOpen: (\n      state: IUserEditState,\n      action: PayloadAction<boolean | DropzoneUserDetailsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        state.federation.value = action.payload.license?.federation || null;\n        state.fields.license.value = action.payload.license || null;\n\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload.user).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n\n              if (typedKey === 'license') {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment)[\n                  typedKey\n                ];\n              } else {\n                state.fields[typedKey].value = (action.payload as DropzoneUserDetailsFragment).user[\n                  typedKey\n                ];\n              }\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IUserEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { WeatherConditionEssentialsFragment } from 'app/api/operations';\n\ntype Fields = Pick<\n  WeatherConditionEssentialsFragment,\n  'winds' | 'exitSpotMiles' | 'jumpRun' | 'offsetDirection' | 'temperature'\n>;\n\ninterface IWeatherConditionEditState {\n  original: WeatherConditionEssentialsFragment | null;\n  open: boolean;\n  fields: {\n    [K in keyof Fields]-?: {\n      value: Fields[K] | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState: IWeatherConditionEditState = {\n  original: null,\n  open: false,\n  fields: {\n    jumpRun: {\n      value: null,\n      error: null,\n    },\n    temperature: {\n      value: null,\n      error: null,\n    },\n    exitSpotMiles: {\n      value: null,\n      error: null,\n    },\n    offsetDirection: {\n      value: null,\n      error: null,\n    },\n    winds: {\n      value: [],\n      error: null,\n    },\n  },\n};\n\nexport default createSlice({\n  name: 'forms/weather',\n  initialState,\n  reducers: {\n    setField: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n      if (field in state.fields) {\n        state.fields[field].value = value;\n        state.fields[field].error = null;\n      }\n    },\n    setFieldError: <T extends keyof IWeatherConditionEditState['fields']>(\n      state: IWeatherConditionEditState,\n      action: PayloadAction<[T, IWeatherConditionEditState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      if (field in state && 'error' in state.fields[field]) {\n        state.fields[field].error = error;\n      } else {\n        console.error('Cannot set error on ', field);\n      }\n    },\n\n    setOpen: (\n      state: IWeatherConditionEditState,\n      action: PayloadAction<boolean | WeatherConditionEssentialsFragment>\n    ) => {\n      if (typeof action.payload === 'boolean') {\n        state.open = action.payload;\n        state.original = null;\n        state.fields = initialState.fields;\n      } else {\n        state.original = action.payload;\n        state.open = true;\n        if (typeof action.payload !== 'boolean') {\n          Object.keys(action.payload).forEach((key) => {\n            const payloadKey = key as keyof typeof action.payload;\n            if (payloadKey in state.fields) {\n              const typedKey = payloadKey as keyof typeof initialState['fields'];\n              state.fields[typedKey].value = (action.payload as WeatherConditionEssentialsFragment)[\n                typedKey\n              ];\n            }\n          });\n        }\n      }\n    },\n\n    reset: (state: IWeatherConditionEditState) => {\n      state.fields = initialState.fields;\n      state.original = null;\n    },\n  },\n});\n","import * as dropzone from './dropzone/slice';\nimport * as dropzoneUser from './dropzone_user/slice';\nimport * as rig from './rig/slice';\nimport * as rigInspection from './rig_inspection/slice';\nimport * as rigInspectionTemplate from './rig_inspection_template/slice';\nimport * as manifest from './manifest/slice';\nimport * as manifestGroup from './manifest_group/slice';\nimport * as user from './user/slice';\nimport * as weather from './weather_conditions/slice';\n\nexport const initialState = {\n  dropzone: dropzone.initialState,\n  dropzoneUser: dropzoneUser.initialState,\n  rig: rig.initialState,\n  rigInspection: rigInspection.initialState,\n  rigInspectionTemplate: rigInspectionTemplate.initialState,\n  manifest: manifest.initialState,\n  manifestGroup: manifestGroup.initialState,\n  user: user.initialState,\n  weather: weather.initialState,\n};\nexport const reducers = {\n  dropzone: dropzone.default,\n  dropzoneUser: dropzoneUser.default,\n  rig: rig.default,\n  rigInspection: rigInspection.default,\n  rigInspectionTemplate: rigInspectionTemplate.default,\n  manifest: manifest.default,\n  manifestGroup: manifestGroup.default,\n  user: user.default,\n  weather: weather.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserScreenState {\n  isSearchVisible: boolean;\n  searchText: string;\n}\n\nexport const initialState: IUserScreenState = {\n  isSearchVisible: false,\n  searchText: '',\n};\n\nexport default createSlice({\n  name: 'screens/user',\n  initialState,\n  reducers: {\n    setSearchText: (state: IUserScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IUserScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    reset: (state: IUserScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\ninterface ILoginScreenState {\n  fields: {\n    email: {\n      value: string;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n  },\n} as ILoginScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setEmail: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.value = action.payload;\n    },\n    setPassword: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.value = action.payload;\n    },\n    setEmailError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.email.error = action.payload;\n    },\n    setPasswordError: (state: ILoginScreenState, action: PayloadAction<string>) => {\n      state.fields.password.error = action.payload;\n    },\n    reset: (state: ILoginScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\ninterface IManifestScreenState {\n  isSearchVisible: boolean;\n  selectedUsers: DropzoneUserEssentialsFragment[];\n  searchText: string;\n  display: 'list' | 'cards';\n}\n\nexport const initialState: IManifestScreenState = {\n  isSearchVisible: false,\n  selectedUsers: [],\n  searchText: '',\n  display: 'cards',\n};\n\nexport default createSlice({\n  name: 'manifestScreen',\n  initialState,\n  reducers: {\n    setSelected: (\n      state: IManifestScreenState,\n      action: PayloadAction<DropzoneUserEssentialsFragment[]>\n    ) => {\n      state.selectedUsers = action.payload;\n    },\n    setSearchText: (state: IManifestScreenState, action: PayloadAction<string>) => {\n      state.searchText = action.payload;\n    },\n\n    setSearchVisible: (state: IManifestScreenState, action: PayloadAction<boolean>) => {\n      state.isSearchVisible = action.payload;\n    },\n\n    setDisplayStyle: (state: IManifestScreenState, action: PayloadAction<'cards' | 'list'>) => {\n      state.display = action.payload;\n    },\n\n    reset: (state: IManifestScreenState) => {\n      state.isSearchVisible = initialState.isSearchVisible;\n      state.searchText = initialState.searchText;\n    },\n  },\n});\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Federation, License } from '../../../api/schema.d';\n\nexport interface ISignUpScreenState {\n  federation?: Federation | null;\n  fields: {\n    name: {\n      value: string;\n      error: string | null;\n    };\n    phone: {\n      value: string;\n      error: string | null;\n    };\n    email: {\n      value: string;\n      error: string | null;\n    };\n    exitWeight: {\n      value: number;\n      error: string | null;\n    };\n    password: {\n      value: string;\n      error: string | null;\n    };\n    passwordConfirmation: {\n      value: string;\n      error: string | null;\n    };\n    license: {\n      value: License | null;\n      error: string | null;\n    };\n  };\n}\n\nexport const initialState = {\n  federation: null,\n  fields: {\n    email: {\n      value: '',\n      error: null,\n    },\n    password: {\n      value: '',\n      error: null,\n    },\n    passwordConfirmation: {\n      value: '',\n      error: null,\n    },\n    exitWeight: {\n      value: 50,\n      error: null,\n    },\n    name: {\n      value: '',\n      error: null,\n    },\n    phone: {\n      value: '',\n      error: null,\n    },\n    license: {\n      value: null,\n      error: null,\n    },\n  },\n} as ISignUpScreenState;\n\nexport default createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    setFederation: (state: ISignUpScreenState, action: PayloadAction<Federation>) => {\n      state.federation = action.payload;\n    },\n    setField: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['value']]>\n    ) => {\n      const [field, value] = action.payload;\n\n      state.fields[field].value = value;\n      state.fields[field].error = null;\n    },\n    setFieldError: <T extends keyof ISignUpScreenState['fields']>(\n      state: ISignUpScreenState,\n      action: PayloadAction<[T, ISignUpScreenState['fields'][T]['error']]>\n    ) => {\n      const [field, error] = action.payload;\n\n      state.fields[field].error = error;\n    },\n\n    reset: (state: ISignUpScreenState) => {\n      state.fields = initialState.fields;\n    },\n  },\n});\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserWizardState {\n  skipRigSetup: boolean;\n}\n\nexport const initialState: IUserWizardState = {\n  skipRigSetup: false,\n};\n\nexport default createSlice({\n  name: 'screens/userWizard',\n  initialState,\n  reducers: {\n    skipRigSetup: (state: IUserWizardState, action: PayloadAction<boolean>) => {\n      state.skipRigSetup = action.payload;\n    },\n  },\n});\n","import * as users from './authenticated/user/user_list/slice';\nimport * as login from './unauthenticated/login/slice';\nimport * as manifest from './authenticated/dropzone/manifest/slice';\nimport * as signup from './unauthenticated/signup/slice';\nimport * as dropzoneWizard from './wizards/dropzone_wizard/slice';\nimport * as userWizard from './wizards/user_wizard/slice';\n\nexport const initialState = {\n  manifest: manifest.initialState,\n  users: users.initialState,\n  login: login.initialState,\n  signup: signup.initialState,\n  dropzoneWizard: dropzoneWizard.initialState,\n  userWizard: userWizard.initialState,\n};\nexport const reducers = {\n  manifest: manifest.default,\n  users: users.default,\n  login: login.default,\n  signup: signup.default,\n  dropzoneWizard: dropzoneWizard.default,\n  userWizard: userWizard.default,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IImageViewer {\n  open: boolean;\n  image: string | null;\n}\n\nexport const initialState: IImageViewer = {\n  open: false,\n  image: null,\n};\n\nexport default createSlice({\n  name: 'dialog/imageViewer',\n  initialState,\n  reducers: {\n    setOpen: (state: IImageViewer, action: PayloadAction<string>) => {\n      state.open = true;\n      state.image = action.payload;\n    },\n    close: (state: IImageViewer) => {\n      state.open = false;\n    },\n  },\n});\n","export const tintColorLight = '#2f95dc';\nexport const tintColorDark = '#fff';\nexport const successColor = '#00C851';\nexport const errorColor = '#ff4444';\nexport const warningColor = '#FF8800';\nexport const infoColor = '#0099CC';\n\nexport const primaryColor = '#FF1414';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n    success: successColor,\n    error: errorColor,\n    warning: warningColor,\n    info: infoColor,\n  },\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { DarkTheme as PaperDarkTheme, DefaultTheme as PaperDefaultTheme } from 'react-native-paper';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\nimport color from 'color';\nimport { primaryColor } from 'app/constants/Colors';\nimport merge from 'lodash/merge';\nimport { DropzoneExtensiveFragment, UserDetailedFragment } from '../api/operations';\nimport { Credential } from '../api/schema.d';\n\nconst CombinedDefaultTheme: Theme = {\n  ...PaperDefaultTheme,\n  ...NavigationDefaultTheme,\n\n  fonts: {\n    light: { fontFamily: 'Roboto_300Light', fontWeight: '300' },\n    thin: { fontFamily: 'Roboto_100Thin', fontWeight: '100' },\n    medium: { fontFamily: 'Roboto_500Medium', fontWeight: '500' },\n    regular: { fontFamily: 'Roboto_400Regular', fontWeight: '400' },\n  },\n  colors: {\n    ...PaperDefaultTheme.colors,\n    ...NavigationDefaultTheme.colors,\n\n    primary: primaryColor,\n  },\n};\nconst CombinedDarkTheme: Theme = {\n  ...PaperDarkTheme,\n  ...NavigationDarkTheme,\n\n  fonts: {\n    light: { fontFamily: 'Roboto_300Light', fontWeight: '300' as const },\n    thin: { fontFamily: 'Roboto_100Thin', fontWeight: '100' as const },\n    medium: { fontFamily: 'Roboto_500Medium', fontWeight: '500' as const },\n    regular: { fontFamily: 'Roboto_400Regular', fontWeight: '400' as const },\n  },\n  colors: {\n    ...PaperDarkTheme.colors,\n    ...NavigationDarkTheme.colors,\n    primary: primaryColor,\n  },\n};\n\ninterface IGlobalState {\n  authenticated: boolean;\n  currentDropzoneId: number | null;\n  // @deprecated\n  currentUser: UserDetailedFragment | null;\n  credentials: Credential | null;\n  // @deprecated\n  currentDropzone: DropzoneExtensiveFragment | null;\n  permissions: string[];\n\n  expoPushToken: string | null;\n  currentRouteName: string;\n  palette: Omit<typeof CombinedDefaultTheme.colors, 'primary' | 'accent'> & {\n    primary: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n    accent: {\n      light: string;\n      main: string;\n      dark: string;\n    };\n  };\n\n  theme: typeof CombinedDarkTheme | typeof CombinedDefaultTheme;\n  isDarkMode: boolean;\n}\n\nexport const initialState: IGlobalState = {\n  currentUser: null,\n  currentDropzone: null,\n  currentDropzoneId: null,\n  permissions: [],\n  credentials: null,\n  authenticated: false,\n  expoPushToken: null,\n  currentRouteName: '',\n  theme: CombinedDefaultTheme,\n  palette: {\n    ...CombinedDefaultTheme.colors,\n    primary: {\n      main: '#FF1414',\n      dark: '#991414',\n      light: '#FFAAAA',\n    },\n    accent: {\n      main: '#FFFFFF',\n      dark: '#FFFFFF',\n      light: '#FFFFFF',\n    },\n  },\n  isDarkMode: false,\n};\nexport default createSlice({\n  name: 'global',\n  initialState,\n  reducers: {\n    setCredentials: (state: IGlobalState, action: PayloadAction<Credential>) => {\n      console.debug('[Redux::Global]: Setting credentials', action.payload);\n      state.credentials = action.payload;\n    },\n    setAuthenticated: (state: IGlobalState, action: PayloadAction<boolean>) => {\n      state.authenticated = action.payload;\n    },\n    setUser: (state: IGlobalState, action: PayloadAction<UserDetailedFragment>) => {\n      state.currentUser = action.payload;\n    },\n    setExpoPushToken: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.expoPushToken = action.payload;\n    },\n    setCurrentRouteName: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.currentRouteName = action.payload;\n    },\n    setPermissions: (state: IGlobalState, action: PayloadAction<string[]>) => {\n      state.permissions = action.payload;\n    },\n    setPrimaryColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.primary = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAccentColor: (state: IGlobalState, action: PayloadAction<string>) => {\n      state.theme.colors.accent = action.payload;\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.8).hex(),\n        },\n      };\n    },\n    setDropzone: (state: IGlobalState, action: PayloadAction<DropzoneExtensiveFragment | null>) => {\n      state.currentDropzone = action.payload;\n      state.currentDropzoneId = action.payload?.id ? Number(action.payload?.id) : null;\n      console.debug('Setting id', action?.payload?.id);\n\n      if (state.currentDropzone?.primaryColor) {\n        state.theme.colors.primary = state.currentDropzone?.primaryColor;\n      }\n\n      if (state.currentDropzone?.secondaryColor) {\n        state.theme.colors.accent = state.currentDropzone?.secondaryColor;\n      }\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n    },\n    setAppearance: (state: IGlobalState, action: PayloadAction<'light' | 'dark'>): IGlobalState => {\n      const current = state.isDarkMode ? 'dark' : 'light';\n      state.isDarkMode = action.payload === 'dark';\n\n      console.log('Setting appearance to', action.payload);\n      if (current === action.payload) {\n        return state;\n      }\n      state.theme = merge(\n        {},\n        action.payload === 'dark' ? CombinedDarkTheme : CombinedDefaultTheme,\n        {\n          colors: {\n            primary: state.currentDropzone?.primaryColor || CombinedDarkTheme.colors.primary,\n            accent: state.currentDropzone?.secondaryColor || CombinedDarkTheme.colors.accent,\n          },\n        }\n      );\n\n      state.palette = {\n        ...state.theme.colors,\n        primary: {\n          dark: color(state.theme.colors.primary).darken(0.4).hex(),\n          main: state.theme.colors.primary,\n          light: color(state.theme.colors.primary).lighten(0.6).hex(),\n        },\n        accent: {\n          dark: color(state.theme.colors.accent).darken(0.4).hex(),\n          main: state.theme.colors.accent,\n          light: color(state.theme.colors.accent).lighten(0.6).hex(),\n        },\n      };\n      return state;\n    },\n    logout: (state: IGlobalState) => {\n      console.debug('Logout called?');\n      Object.keys(initialState).forEach((key) => {\n        const payloadKey = key as keyof Required<IGlobalState>;\n        if (payloadKey in state) {\n          const typedKey = payloadKey as keyof typeof initialState;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore We know this is right\n          state[payloadKey] = initialState[typedKey];\n        }\n      });\n    },\n  },\n});\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { Platform } from 'react-native';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { reducers as forms, initialState as initialStateForms } from '../components/forms/slice';\nimport { reducers as screens, initialState as initialStateScreens } from '../screens/slice';\nimport imageViewerSlice, {\n  initialState as imageViewerState,\n} from '../components/dialogs/ImageViewer/slice';\n\nimport globalSlice, { initialState as initialStateGlobal } from './global';\n\nexport const initialState = {\n  forms: initialStateForms,\n  screens: initialStateScreens,\n  global: initialStateGlobal,\n  imageViewer: imageViewerState,\n} as RootState;\n\nconst persistConfig = {\n  key: 'open-manifest.0.9.1',\n  storage:\n    // eslint-disable-next-line @typescript-eslint/no-var-requires,global-require\n    Platform.OS === 'web' || false ? require('redux-persist/lib/storage').default : AsyncStorage,\n  whitelist: ['global'],\n};\n\ntype ScreenReducers = {\n  [K in keyof typeof screens]: typeof screens[K]['reducer'];\n};\n\ntype FormReducers = {\n  [K in keyof typeof forms]: typeof forms[K]['reducer'];\n};\n\ntype ScreenActions = {\n  [K in keyof typeof screens]: typeof screens[K]['actions'];\n};\n\ntype FormActions = {\n  [K in keyof typeof forms]: typeof forms[K]['actions'];\n};\n\n// eslint-disable\nconst screenReducers = Object.keys(screens).reduce(\n  // eslint-disable-next-line max-len\n  (obj, key) =>\n    !screens || !(key in screens)\n      ? obj\n      : { ...obj, [key]: screens[key as keyof typeof screens].reducer },\n  {}\n) as ScreenReducers;\n\nconst formReducers = Object.keys(forms).reduce(\n  (obj, key) =>\n    !forms || !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].reducer },\n  {}\n) as FormReducers;\nexport const screenActions = Object.keys(screens).reduce(\n  (obj, key) =>\n    !(key in screens) ? obj : { ...obj, [key]: screens[key as keyof typeof screens].actions },\n  {}\n) as ScreenActions;\nexport const formActions = Object.keys(forms).reduce(\n  (obj, key) =>\n    !(key in forms) ? obj : { ...obj, [key]: forms[key as keyof typeof forms].actions },\n  {}\n) as FormActions;\n// eslint-enable\n\nexport const actions = {\n  forms: formActions,\n  screens: screenActions,\n  global: globalSlice.actions,\n  imageViewer: imageViewerSlice.actions,\n};\n\nexport const rootReducer = combineReducers({\n  global: globalSlice.reducer,\n  imageViewer: imageViewerSlice.reducer,\n  screens: combineReducers(screenReducers),\n  forms: combineReducers(formReducers),\n});\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST'],\n    },\n    immutableCheck: false,\n  }),\n});\n\nexport const persistor = persistStore(store);\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import config from 'app/constants/expo';\n\nexport function getServerUrl(): string {\n  if (!config?.url) {\n    throw new Error('No server url found in config');\n  }\n  console.debug({ URL: config?.url });\n  return config?.url;\n}\n","import { createConsumer } from '@rails/actioncable';\nimport ActionCableLink from 'graphql-ruby-client/subscriptions/ActionCableLink';\nimport URI from 'urijs';\nimport { getServerUrl } from '../utils/getServerUrl';\n\nexport const hasSubscriptionOperation = ({ query: { definitions } }) => {\n  return definitions.some(\n    ({ kind, operation }) => kind === 'OperationDefinition' && operation === 'subscription'\n  );\n};\n\nexport function createWebsocketsLink() {\n  const cable = createConsumer(\n    [\n      new URI(getServerUrl()).scheme() === 'https' ? 'wss://' : 'ws://',\n      new URI(getServerUrl()).host(),\n      '/subscriptions',\n    ].join('')\n  );\n\n  return new ActionCableLink({\n    cable,\n    connectionParams: (a) => {\n      const { authHeaders } = a.getContext();\n      return authHeaders;\n    },\n  });\n}\n","import { ApolloLink } from '@apollo/client';\nimport { BatchHttpLink } from '@apollo/client/link/batch-http';\nimport { getServerUrl } from '../utils/getServerUrl';\nimport { createWebsocketsLink, hasSubscriptionOperation } from './websockets';\n\nexport const abortController = new AbortController();\nexport const httpLink = new BatchHttpLink({\n  batchDebounce: true,\n  batchMax: 10,\n  uri: getServerUrl(),\n  fetchOptions: {\n    mode: 'cors',\n    method: 'POST',\n    signal: abortController.signal,\n  },\n});\n\nexport function createHttpLink() {\n  ApolloLink.split(hasSubscriptionOperation, createWebsocketsLink(), httpLink);\n}\n","import { noop } from 'lodash';\nimport * as React from 'react';\n\nexport interface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'info';\n  createdAt: number;\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\ninterface INotificationContext {\n  success(message: INotification['message'], action?: INotification['action']): void;\n  error(message: INotification['message'], action?: INotification['action']): void;\n  info(message: INotification['message'], action?: INotification['action']): void;\n}\n\nexport const NotificationContext = React.createContext<INotificationContext>({\n  success: noop,\n  error: noop,\n  info: noop,\n});\n\nexport function useNotifications() {\n  return React.useContext(NotificationContext);\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Toast from 'react-native-toast-message';\nimport LottieView from 'app/components/LottieView';\nimport { isEqual, last } from 'lodash';\nimport lottieDoneAnimation from '../../../assets/images/finished-2.json';\nimport { NotificationContext } from './context';\n\ninterface INotification {\n  message: string;\n  variant?: 'error' | 'success' | 'info';\n  action?: {\n    label: string;\n    onPress: () => void;\n  };\n}\n\nenum AnimationState {\n  opening,\n  waiting,\n  closed,\n}\n\nexport function NotificationsProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [queue, setQueue] = React.useState<INotification[]>([]);\n\n  const successAnimation = React.useRef<LottieView>(null);\n  const [animationState, setAnimationState] = React.useState<AnimationState>(AnimationState.closed);\n\n  const notification = React.useMemo(() => queue?.[0], [queue]);\n  React.useEffect(() => {\n    if (animationState === AnimationState.closed && notification?.variant === 'success') {\n      setAnimationState(AnimationState.opening);\n    }\n  }, [animationState, notification?.variant]);\n\n  const notify = React.useCallback(\n    (newNotification: INotification) => {\n      if (!isEqual(last(queue), newNotification)) {\n        setQueue([...queue, newNotification]);\n      }\n    },\n    [queue]\n  );\n\n  const onHide = React.useCallback(() => {\n    const [, ...newQueue] = queue;\n    setQueue(newQueue);\n  }, [queue]);\n\n  const success = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'success', action });\n    },\n    [notify]\n  );\n\n  const error = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'error', action });\n    },\n    [notify]\n  );\n\n  const info = React.useCallback(\n    (message: string, action?: { label: string; onPress: () => void }) => {\n      notify({ message, variant: 'info', action });\n    },\n    [notify]\n  );\n\n  const onAnimationFinish = React.useCallback(() => {\n    setAnimationState(AnimationState.waiting);\n    setTimeout(() => {\n      onHide();\n      setAnimationState(AnimationState.closed);\n    }, 200);\n  }, [onHide]);\n\n  React.useEffect(() => {\n    if (notification) {\n      Toast.show({\n        onHide,\n        text1: notification.message,\n        type: notification.variant || 'success',\n      });\n      if (notification.variant === 'error') {\n        console.error(notification.message);\n      }\n    }\n  }, [notification, onHide]);\n\n  const context = React.useMemo(\n    () => ({ notify, success, error, info }),\n    [error, info, notify, success]\n  );\n\n  return (\n    <NotificationContext.Provider value={context}>\n      {children}\n      {animationState === AnimationState.opening && (\n        <View\n          style={{\n            ...StyleSheet.absoluteFillObject,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n          pointerEvents=\"none\"\n        >\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            {...{ onAnimationFinish }}\n            ref={successAnimation}\n            style={styles.animation}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      )}\n      <Toast autoHide visibilityTime={4000} position=\"bottom\" type=\"success\" />\n    </NotificationContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  animation: {\n    height: 300,\n    width: 300,\n  },\n});\n","import LottieView from 'react-native-web-lottie';\n\nexport default LottieView;\n","import { onError } from '@apollo/client/link/error';\nimport * as React from 'react';\nimport { useNotifications } from 'app/providers/notifications';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nexport const defaultErrorLink = onError(({ graphQLErrors, networkError, operation }) => {\n  if (graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR')) {\n    console.error('[Apollo::Links::Errors::Default]: Authentication Error');\n    return;\n  }\n\n  if (graphQLErrors && process.env.EXPO_ENV === 'development') {\n    graphQLErrors.forEach((err) => {\n      const { message, locations, path, name, nodes } = err;\n      console.error(\n        `[Apollo::Links::Errors::Default]: ${message}, ${JSON.stringify(\n          locations\n        )}, ${path}, ${name}, ${nodes}`\n      );\n      console.log(operation);\n    });\n  }\n  if (networkError && process.env.EXPO_ENV === 'development') {\n    console.error(`[Apollo::Links::Errors::Default::Network] ${networkError}`);\n  }\n});\n\nexport function useErrorLink() {\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const { authenticated } = useAppSelector((root) => root.global);\n  // Log any GraphQL errors or network error that occurred\n  return React.useMemo(\n    () =>\n      onError(({ graphQLErrors, networkError, operation }) => {\n        if (graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR')) {\n          notify.info(`Session expired`);\n          if (authenticated) {\n            console.debug(\n              '[Apollo::Links::Errors]: Received authentication error, logging out',\n              graphQLErrors\n            );\n            dispatch(actions.global.logout());\n          }\n          return;\n        }\n\n        if (graphQLErrors && process.env.EXPO_ENV === 'development') {\n          graphQLErrors.forEach((err) => {\n            const { message, locations, path, name, nodes } = err;\n            notify.error(`[GraphQL error]: ${message}, ${JSON.stringify(locations)}, ${path}`);\n            console.error(\n              `[GraphQL error]: ${message}, ${JSON.stringify(\n                locations\n              )}, ${path}, ${name}, ${nodes}`\n            );\n            // console.log(JSON.stringify(err));\n            console.log(operation);\n          });\n        }\n        if (networkError && process.env.EXPO_ENV === 'development') {\n          notify.error(`[Network error]: ${networkError}`);\n        }\n      }),\n    [dispatch, notify, authenticated]\n  );\n}\n","import Appsignal from '@appsignal/javascript';\nimport Constants from 'expo-constants';\nimport ExpoManifest from 'app/constants/expo';\nimport { Platform } from 'react-native';\n\nconst AppSignalClient = new Appsignal({\n  key: ExpoManifest?.extra?.appSignalApiKey,\n  namespace: Platform.OS,\n  revision: Constants.expoConfig?.version,\n  ignoreErrors: [],\n});\n\nexport default AppSignalClient;\n","import Appsignal from '@appsignal/javascript';\nimport noop from 'lodash/noop';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport AppSignalClient from './AppSignalClient';\n\nexport interface IAppSignalDefaultTags {\n  platform: string;\n  currentDropzoneId: string;\n  currentUserId: string;\n  currentDropzone: string;\n  currentUser: string;\n}\nexport interface IAppSignalContext {\n  appSignal: Appsignal;\n  tags: { [key: string]: string } & IAppSignalDefaultTags;\n  setTags(tags: Partial<IAppSignalDefaultTags> | { [key: string]: string }): void;\n}\n\nexport const INITIAL_TAGS = {\n  platform: Platform.OS,\n  currentDropzoneId: 'Unknown',\n  currentDropzone: 'Unknown',\n  currentUserId: 'Unknown',\n  currentUser: 'Unknown',\n};\n\nexport const INITIAL_CONTEXT: IAppSignalContext = {\n  appSignal: AppSignalClient,\n  tags: INITIAL_TAGS,\n  setTags: noop,\n};\n\nconst AppSignalContext = React.createContext(INITIAL_CONTEXT);\n\nexport function useAppSignalContext() {\n  return React.useContext(AppSignalContext);\n}\n\nexport default AppSignalContext;\n","import * as React from 'react';\n\ninterface IDefaultErrorBoundaryProps {\n  fallback: React.ComponentType<{ error?: Error | null }>;\n  children: React.ReactNode;\n}\n\ninterface IDefaultErrorBoundaryState {\n  error?: Error;\n}\nexport default class ErrorBoundary extends React.Component<\n  IDefaultErrorBoundaryProps,\n  IDefaultErrorBoundaryState\n> {\n  constructor(props) {\n    super(props);\n    this.state = { error: undefined };\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    // Update state so the next render will show the fallback UI.\n    return { error };\n  }\n\n  public componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // eslint-disable-next-line no-console\n    console.error(error, errorInfo);\n  }\n\n  public render() {\n    const { fallback: Fallback, children } = this.props;\n    const { error } = this.state;\n    if (error) {\n      return <Fallback {...{ error }} />;\n    }\n    return children;\n  }\n}\n","import * as React from 'react';\nimport { reloadAsync } from 'expo-updates';\nimport { Button, Card, HelperText } from 'react-native-paper';\nimport { Platform, SafeAreaView, useWindowDimensions } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport LottieView from '../LottieView';\nimport twigBreakAnimation from '../../../assets/images/error-twig-break.json';\n\ninterface IErrorScreenProps {\n  error?: Error | null;\n}\nexport default function ErrorScreen(props: IErrorScreenProps) {\n  const { error } = props;\n  const [isDetailsVisible, setDetailsVisible] = React.useState(false);\n  const [reloading, setReloading] = React.useState(false);\n  const onToggleDetails = React.useCallback(\n    () => setDetailsVisible(!isDetailsVisible),\n    [isDetailsVisible]\n  );\n\n  const onReloadApp = React.useCallback(async () => {\n    try {\n      setReloading(true);\n\n      if (Platform.OS === 'web') {\n        window.location.reload();\n      } else {\n        await reloadAsync();\n      }\n    } finally {\n      setReloading(false);\n    }\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n\n  return (\n    <SafeAreaView\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height,\n        width,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Card style={{ width: '100%', minHeight: 250, maxWidth: 450, marginHorizontal: 16 }}>\n        <Card.Title\n          title=\"That's a bug\"\n          subtitle=\"This error has been uploaded for review\"\n          titleStyle={{ textAlign: 'center' }}\n          subtitleStyle={{ textAlign: 'center' }}\n        />\n        <Card.Content style={{ alignItems: 'center' }}>\n          <LottieView\n            // eslint-disable-next-line global-require\n            source={twigBreakAnimation}\n            autoPlay\n            loop={false}\n            style={{\n              height: Platform.OS === 'web' ? 300 : 150,\n              width: Platform.OS === 'web' ? 300 : 150,\n            }}\n          />\n          {!error ? null : (\n            <>\n              <HelperText type=\"error\">{error?.message}</HelperText>\n              {isDetailsVisible ? (\n                <ScrollView style={{ maxHeight: 300 }}>\n                  <HelperText type=\"error\">{error.stack}</HelperText>\n                </ScrollView>\n              ) : null}\n            </>\n          )}\n        </Card.Content>\n        <Card.Actions style={{ justifyContent: 'space-between' }}>\n          <Button compact onPress={onToggleDetails}>\n            {isDetailsVisible ? 'Hide' : 'Show'} details\n          </Button>\n          <Button\n            disabled={reloading}\n            loading={reloading}\n            compact\n            mode=\"outlined\"\n            onPress={onReloadApp}\n          >\n            Reload\n          </Button>\n        </Card.Actions>\n      </Card>\n    </SafeAreaView>\n  );\n}\n","import * as React from 'react';\nimport { ErrorBoundary } from '@appsignal/react';\nimport { useAppSignalContext } from './AppSignalContext';\nimport DefaultErrorBoundary from './AppSignalFallbackBoundary';\nimport ErrorScreen from './ErrorScreen';\n\nfunction AppSignalBoundary(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const { appSignal: instance, tags } = useAppSignalContext();\n\n  const errorBoundaryRef = React.useRef<ErrorBoundary>(null);\n  // Render children until we have an instance ready and use a\n  // default error boundary to catch it in the meantime and still\n  // display the fallback page\n  if (!instance) {\n    return <DefaultErrorBoundary fallback={ErrorScreen}>{children}</DefaultErrorBoundary>;\n  }\n  return (\n    <ErrorBoundary\n      {...{ instance, tags }}\n      fallback={() => (\n        <ErrorScreen error={errorBoundaryRef.current?.state?.error as Error | undefined} />\n      )}\n      ref={errorBoundaryRef}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n}\n\nexport default AppSignalBoundary;\n","import { plugin as AppSignalCurrentPath } from '@appsignal/plugin-path-decorator';\nimport { plugin as AppSignalWindowEvents } from '@appsignal/plugin-window-events';\nimport * as React from 'react';\nimport type { JSSpan } from '@appsignal/types';\nimport isEqual from 'lodash/isEqual';\nimport AppSignalClient from './AppSignalClient';\nimport AppSignalBoundary from './AppSignalBoundary';\nimport AppSignalContext, {\n  IAppSignalContext,\n  IAppSignalDefaultTags,\n  INITIAL_CONTEXT,\n  INITIAL_TAGS,\n} from './AppSignalContext';\n\nexport default function AppSignalProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [tags, setTags] = React.useState<IAppSignalDefaultTags & { [key: string]: string }>(\n    INITIAL_CONTEXT.tags\n  );\n  React.useEffect(() => {\n    AppSignalClient.use(AppSignalWindowEvents);\n    AppSignalClient.use(AppSignalCurrentPath);\n  }, []);\n\n  const onUpdateTags = React.useCallback(\n    (newTags: Partial<IAppSignalDefaultTags>) => {\n      setTags({ ...tags, ...newTags });\n    },\n    [tags]\n  );\n\n  const value: IAppSignalContext = React.useMemo(\n    () => ({ appSignal: AppSignalClient, tags, setTags: onUpdateTags }),\n    [tags, onUpdateTags]\n  );\n\n  const onTagsChanged = React.useCallback(\n    (span: JSSpan) => {\n      if (isEqual(tags, INITIAL_TAGS)) {\n        return span;\n      }\n      return span.setTags(tags);\n    },\n    [tags]\n  );\n\n  React.useEffect(() => {\n    AppSignalClient?.addDecorator(onTagsChanged);\n  }, [onTagsChanged]);\n\n  return (\n    <AppSignalContext.Provider {...{ value }}>\n      <AppSignalBoundary>{children}</AppSignalBoundary>\n    </AppSignalContext.Provider>\n  );\n}\n","/* eslint-disable no-console */\nimport * as React from 'react';\nimport isEqual from 'lodash/isEqual';\nimport difference from 'lodash/difference';\nimport { FieldError } from '../schema.d';\n\nexport type InferArguments<Func> = Func extends (arg: infer Argument) => unknown ? Argument : never;\ntype CRUDHook<Args extends object, Value extends object> = (args: Args) => Value;\ntype InferHookArguments<Hook> = Hook extends CRUDHook<infer Arguments, object> ? Arguments : never;\n\nexport const uninitializedHandler = async (args?: unknown) => undefined as unknown;\n\n// Streamline mutation results\nexport interface IMutationSuccessResponse<T> {\n  note: T;\n}\n\nexport interface IMutationFailureResponse {\n  fieldErrors?: FieldError[];\n  error?: string;\n}\n\nexport type TMutationResponse<MutationSuccessResponse extends { [key: string]: object }> =\n  | MutationSuccessResponse\n  | IMutationFailureResponse;\n\nconst DEBUG_PROVIDERS = false;\n/**\n * Create a context for the CRUD operations\n * to allow using it further down the tree without\n * remounting the same hooks\n *\n * Usage:\n * createCRUDContext<typeof useHook>({ onUpdate: noop, onDelete: noop })\n */\nexport default function createCRUDContext<\n  Args extends object,\n  Value extends object,\n  Hook extends CRUDHook<Args, Value>\n>(useHook: Hook, INITIAL_STATE: ReturnType<Hook>) {\n  const Context = React.createContext<ReturnType<Hook>>(INITIAL_STATE);\n\n  function Provider(props: React.PropsWithChildren<InferHookArguments<Hook>>) {\n    const { children, ...rest } = props;\n    const value = useHook(rest as InferHookArguments<Hook>) as ReturnType<Hook>;\n    const old = React.useRef<typeof value>(value);\n\n    // Leaving these in for debugging if needed later,\n    // just flip DEBUG_PROVIDERS to true\n    React.useEffect(() => {\n      if (DEBUG_PROVIDERS) {\n        console.debug(useHook.name, 'mounted');\n        return () => {\n          console.debug(useHook.name, 'unmounted');\n        };\n      }\n      return undefined;\n    }, []);\n\n    // Print debugging information\n    React.useEffect(() => {\n      if (DEBUG_PROVIDERS) {\n        if (JSON.stringify(value) !== JSON.stringify(old.current)) {\n          console.debug(useHook.name, '[CRUD Hook] Re-rendering because of state change: ', {\n            old: old.current,\n            new: value,\n          });\n          console.debug(useHook.name, '[CRUD Hook] Previous: ', old.current);\n          console.debug(useHook.name, '[CRUD Hook] Current: ', value);\n          difference(Object.values(old.current), Object.values(value)).forEach((key) => {\n            console.debug('DIFF IN ', key);\n          });\n          old.current = value;\n        }\n      }\n    }, [value]);\n\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext() {\n    return React.useContext(Context);\n  }\n\n  return { Provider: React.memo(Provider, isEqual), useContext, Context, INITIAL_STATE };\n}\n","import * as React from 'react';\nimport noop from 'lodash/noop';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport { useDropzone } from 'app/api/crud/useDropzone';\nimport type { IPlaneDialogProps } from 'app/forms/aircraft/Dialog';\nimport type { ITicketTypeDialog } from 'app/forms/ticket_type/Dialog';\nimport type { ITicketTypeAddonDialog } from 'app/forms/ticket_type_addon/Dialog';\nimport type { ICreateGhostDialog } from 'app/forms/create_user/Dialog';\nimport type { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface IDropzoneContext {\n  dropzone: ReturnType<typeof useDropzone>;\n  dialogs: {\n    aircraft: IDialogContextSubstate<Pick<IPlaneDialogProps, 'initial' | 'original'>>;\n    ticketType: IDialogContextSubstate<Pick<ITicketTypeDialog, 'initial' | 'original'>>;\n    ticketTypeAddon: IDialogContextSubstate<Pick<ITicketTypeAddonDialog, 'initial' | 'original'>>;\n    createUser: IDialogContextSubstate<Pick<ICreateGhostDialog, 'initial' | 'original'>>;\n  };\n}\n\nexport const INITIAL_CONTEXT: IDropzoneContext = {\n  dropzone: {\n    permissions: [],\n    called: false,\n    loading: false,\n    dropzone: null,\n    currentUser: undefined,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n  },\n  dialogs: {\n    aircraft: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n    createUser: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n    ticketType: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n    ticketTypeAddon: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n  },\n};\n\nexport const DropzoneContext = React.createContext<IDropzoneContext>(INITIAL_CONTEXT);\n\nexport function useDropzoneContext() {\n  return React.useContext(DropzoneContext);\n}\n","import * as React from 'react';\nimport pick from 'lodash/pick';\nimport isEqual from 'lodash/isEqual';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from 'app/state';\nimport { Platform } from 'react-native';\nimport { useAppSignalContext, INITIAL_TAGS } from './AppSignalContext';\n\nfunction AppSignalSessionTagProvider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n\n  // This can be undefined here because this bondary\n  // is rendered at the top of the app to catch errors\n  // outside of GraphQL as wele\n  const {\n    dropzone: { dropzone, currentUser: currentDropzoneUser },\n  } = useDropzoneContext();\n  const { currentRouteName, currentUser, currentDropzoneId } = useAppSelector(\n    (state) => state.global\n  );\n  const { tags, setTags } = useAppSignalContext();\n\n  const sessionTags: { [key: string]: string } = React.useMemo(\n    () => ({\n      ...INITIAL_TAGS,\n      currentDropzoneId: (dropzone?.id || currentDropzoneId || 'Unknown')?.toString(),\n      currentDropzone: dropzone?.name || 'Unknown',\n      currentRouteName: currentRouteName || 'Unknown',\n      currentUser: (currentDropzoneUser?.id || currentUser?.id || 'Unknown')?.toString(),\n      platform: Platform.OS as string,\n    }),\n    [\n      currentDropzoneId,\n      currentDropzoneUser?.id,\n      currentRouteName,\n      currentUser?.id,\n      dropzone?.id,\n      dropzone?.name,\n    ]\n  );\n\n  React.useEffect(() => {\n    // Update tags only if they're different\n    const currentSessionTags = pick(tags, Object.keys(sessionTags));\n    if (!isEqual(currentSessionTags, sessionTags)) {\n      // Prevent this component from resetting tags when the GraphQL store\n      // gets wiped on an error:\n      if (isEqual(tags, INITIAL_TAGS) || !isEqual({ ...tags, ...sessionTags }, INITIAL_TAGS)) {\n        setTags(sessionTags);\n      }\n    }\n  }, [sessionTags, setTags, tags]);\n\n  return children as JSX.Element;\n}\n\nexport default AppSignalSessionTagProvider;\n","import { ApolloLink, FetchResult, NextLink, Operation, ServerError } from '@apollo/client';\nimport { ErrorResponse, onError as createErrorLink } from '@apollo/client/link/error';\nimport { Observable } from 'zen-observable-ts';\nimport AppSignal from '@appsignal/javascript';\nimport type { Breadcrumb } from '@appsignal/types';\nimport { GraphQLError, OperationDefinitionNode, print } from 'graphql';\nimport { omit } from 'lodash';\n\nexport interface IAppSignalLinkOptions {\n  breadcrumbs: {\n    includeQuery?: boolean;\n    includeResponse?: boolean;\n    includeVariables?: boolean;\n  };\n  excludeOperation?(operation: Operation): boolean;\n  excludeError?(error: GraphQLError): boolean;\n  ignore?(errors: ErrorResponse): boolean;\n}\n\nconst DEFAULT_OPTIONS: IAppSignalLinkOptions = {\n  breadcrumbs: {\n    includeQuery: false,\n    includeResponse: false,\n    includeVariables: false,\n  },\n  excludeOperation: () => false,\n  excludeError: () => false,\n};\n\nfunction isServerError(error: unknown): error is ServerError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'response' in error &&\n    'result' in error &&\n    'statusCode' in error\n  );\n}\n\nfunction getDefinition(operation: Operation): OperationDefinitionNode {\n  return operation.query.definitions.find(\n    (q) => q.kind === 'OperationDefinition'\n  ) as OperationDefinitionNode;\n}\n\nfunction createBreadCrumb(operation: Operation): Breadcrumb {\n  const definition = getDefinition(operation);\n  const operationName = definition.name?.value;\n  return {\n    message: operationName,\n    category: `graphql.${definition.operation}`,\n    action: operation.operationName,\n    timestamp: Math.floor(new Date().getTime() / 1000),\n    metadata: {},\n  };\n}\n\nfunction createAppSignalErrorLink(\n  client: AppSignal,\n  options: IAppSignalLinkOptions = DEFAULT_OPTIONS\n): ApolloLink {\n  return createErrorLink((errors) => {\n    const { graphQLErrors, operation, response } = errors;\n    if (options?.ignore?.(errors)) {\n      return;\n    }\n\n    if (graphQLErrors) {\n      const filteredErrors = graphQLErrors.filter((err) => !options?.excludeError?.(err));\n\n      // Rethrow errors not in the whitelist\n      if (filteredErrors.length) {\n        const breadcrumb = createBreadCrumb(operation);\n        breadcrumb.metadata ??= {};\n        const definition = getDefinition(operation);\n        // Always include query, variables and response on errors\n        const query = definition.loc?.source?.body ?? print(definition);\n        const { variables } = operation;\n        breadcrumb.metadata.query = query;\n        breadcrumb.metadata.variables = JSON.stringify(variables, null, 2);\n\n        if (isServerError(response)) {\n          const { result } = response;\n\n          breadcrumb.metadata.statusCode = response?.response?.status;\n          breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n        }\n\n        client?.addBreadcrumb(breadcrumb);\n\n        try {\n          client?.sendError(new Error(filteredErrors.map((err) => err.message).join(', ')));\n        } catch (e) {\n          console.debug('Error', e);\n        }\n      } else {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        response.errors = null;\n      }\n    }\n  });\n}\nexport class AppSignalBreadcrumbLink extends ApolloLink {\n  private readonly options: IAppSignalLinkOptions;\n\n  private readonly client?: AppSignal;\n\n  constructor(client: AppSignal, options: IAppSignalLinkOptions) {\n    super();\n    this.client = client;\n    this.options = { ...DEFAULT_OPTIONS, ...(options || {}) };\n  }\n\n  request(operation: Operation, forward: NextLink): Observable<FetchResult> | null {\n    const { options } = this;\n\n    // If this operation should be excluded, continue\n    if (options.excludeOperation?.(operation) ?? false) {\n      return forward(operation);\n    }\n\n    const breadcrumb = createBreadCrumb(operation);\n\n    // While this could be done more simplistically by simply subscribing,\n    // wrapping the observer in our own observer ensures we get the results\n    // before they are passed along to other observers. This guarantees we\n    // get to run our instrumentation before others observers potentially\n    // throw and thus flush the results to Sentry.\n    return new Observable<FetchResult>((originalObserver) => {\n      const subscription = forward(operation).subscribe({\n        next: (result) => {\n          breadcrumb.metadata ??= {};\n          if (options?.breadcrumbs?.includeResponse) {\n            // We must have a breadcrumb if attachBreadcrumbs was set\n            breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n          }\n\n          if (options?.breadcrumbs?.includeQuery) {\n            const definition = getDefinition(operation);\n            // Always include query, variables and response on errors\n            breadcrumb.metadata.query = definition.loc?.source?.body ?? print(definition);\n          }\n\n          if (options?.breadcrumbs?.includeVariables) {\n            // Always include query, variables and response on errors\n            breadcrumb.metadata.variables = JSON.stringify(\n              omit(operation.variables || {}, ['password']),\n              null,\n              2\n            );\n          }\n\n          originalObserver.next(result);\n        },\n        complete: () => {\n          this.client?.addBreadcrumb(breadcrumb);\n          originalObserver.complete();\n        },\n        error: (error) => {\n          breadcrumb.metadata ??= {};\n          const definition = getDefinition(operation);\n          // Always include query, variables and response on errors\n          const query = definition.loc?.source?.body ?? print(definition);\n          const { variables } = operation;\n          breadcrumb.metadata.query = query;\n          breadcrumb.metadata.variables = JSON.stringify(variables, null, 2);\n\n          if (isServerError(error)) {\n            const { result, response } = error;\n\n            breadcrumb.metadata.statusCode = response?.status;\n            breadcrumb.metadata.response = JSON.stringify(result, null, 2);\n          }\n\n          this.client?.addBreadcrumb(breadcrumb);\n\n          originalObserver.error(error);\n        },\n      });\n\n      return () => {\n        subscription.unsubscribe();\n      };\n    });\n  }\n}\n\nexport default function createAppSignalLink(\n  client: AppSignal,\n  options: IAppSignalLinkOptions\n): ApolloLink {\n  return ApolloLink.from([\n    new AppSignalBreadcrumbLink(client, options),\n    createAppSignalErrorLink(client, options),\n  ]);\n}\n","import * as React from 'react';\nimport { createAppSignalLink, useAppSignal } from 'app/components/app_signal';\n\nconst ERROR_CODE_WHITELIST = ['INSUFFICIENT_PERMISSIONS'];\n\nexport function useAppSignalLink() {\n  const { appSignal } = useAppSignal();\n  return React.useMemo(\n    () =>\n      createAppSignalLink(appSignal, {\n        breadcrumbs: {\n          includeQuery: true,\n          includeVariables: true,\n          includeResponse: false,\n        },\n        ignore: ({ graphQLErrors }) =>\n          graphQLErrors?.some((err) => err.extensions?.code === 'AUTHENTICATION_ERROR') || false,\n        excludeError: (err) => ERROR_CODE_WHITELIST.includes(err.extensions?.code as string),\n      }),\n    [appSignal]\n  );\n}\n","import { ApolloLink } from '@apollo/client';\nimport React from 'react';\nimport { useAuthenticationLink } from './authentication';\nimport { useErrorLink, defaultErrorLink } from './errors';\nimport { createHttpLink, httpLink } from './http';\nimport { useAppSignalLink } from './appSignal';\n\nexport const defaultLink = ApolloLink.from([defaultErrorLink, httpLink]);\nexport function useLink() {\n  const authLink = useAuthenticationLink();\n  const errorLink = useErrorLink();\n  const appSignalLink = useAppSignalLink();\n\n  const links = React.useMemo(\n    () => [appSignalLink, errorLink, authLink, createHttpLink()].filter(Boolean) as ApolloLink[],\n    [appSignalLink, authLink, errorLink]\n  );\n  return React.useMemo(() => ApolloLink.from(links), [links]);\n}\n","import { setContext } from '@apollo/client/link/context';\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport isEmpty from 'lodash/isEmpty';\n\nexport function useAuthenticationLink() {\n  const credentials = useAppSelector((root) => root.global.credentials);\n  const authHeaders = React.useMemo(() => {\n    if (!credentials?.accessToken) return {};\n    return {\n      Authorization: `Bearer ${credentials.accessToken}`,\n      'access-token': credentials.accessToken,\n      'token-type': credentials.tokenType,\n      ...credentials,\n    };\n  }, [credentials]);\n\n  console.debug('[Apollo::Link::Authentication]: Current: ', { authHeaders, credentials });\n  return React.useMemo(() => {\n    if (isEmpty(authHeaders)) {\n      console.debug('[Apollo::Link::Authentication]: No headers to set', authHeaders);\n      return undefined;\n    }\n\n    return setContext((_, { headers }) => {\n      console.debug('[Apollo::Link::Authentication]: Headers: ', {\n        ...headers,\n        ...authHeaders,\n      });\n      return {\n        authHeaders,\n        headers: {\n          ...headers,\n          ...authHeaders,\n        },\n      };\n    });\n  }, [authHeaders]);\n}\n","import { InMemoryCache } from '@apollo/client';\nimport { relayStylePagination } from '@apollo/client/utilities';\n\nexport const cache = new InMemoryCache({\n  typePolicies: {\n    Event: relayStylePagination(),\n    DropzoneUsers: relayStylePagination(),\n    Loads: relayStylePagination(),\n  },\n});\n","import { ApolloClient } from '@apollo/client';\nimport * as React from 'react';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { defaultLink, useLink } from './links';\nimport { cache } from './cache';\n\nconst client = new ApolloClient({\n  link: defaultLink,\n  cache,\n});\n\nexport default function useApolloClient() {\n  const link = useLink();\n  const dispatch = useAppDispatch();\n  const { credentials, authenticated } = useAppSelector((root) => root?.global);\n\n  React.useEffect(() => {\n    console.debug('[Apollo::Link]: Replacing Apollo Client Link');\n    // abortController.abort();\n    const isAuthenticated = !!credentials?.accessToken;\n    const authStateChanged = isAuthenticated !== authenticated;\n    if (authStateChanged) {\n      console.debug('[Apollo::Link]: Authentication state changed to ', isAuthenticated);\n      dispatch(actions.global.setAuthenticated(!!credentials?.accessToken));\n    }\n    console.debug('[Apollo::Link]: Replacing Apollo Client Link');\n    client.setLink(link);\n\n    if (authStateChanged) {\n      console.debug('[Apollo::Link]: Refetching queries after authentication state change');\n      // client.reFetchObservableQueries();\n    }\n  }, [authenticated, credentials?.accessToken, dispatch, link]);\n\n  return client;\n}\n","import { ApolloProvider } from '@apollo/client/react';\nimport * as React from 'react';\nimport useApolloClient from './client/client';\n\nexport default function Apollo({ children }: { children: React.ReactNode }) {\n  const client = useApolloClient();\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport default function EntrypointWrapper(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  return <View style={StyleSheet.absoluteFill}>{children}</View>;\n}\n","/* eslint-disable */\nimport * as Operation from './operations';\nimport { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nconst defaultOptions = {} as const;\nexport const RoleEssentialsFragmentDoc = gql`\n    fragment roleEssentials on UserRole {\n  id\n  name\n  dropzoneId\n}\n    `;\nexport const LicenseEssentialsFragmentDoc = gql`\n    fragment licenseEssentials on License {\n  id\n  name\n}\n    `;\nexport const UserEssentialsFragmentDoc = gql`\n    fragment userEssentials on User {\n  id\n  name\n  nickname\n  phone\n  email\n  exitWeight\n  moderationRole\n  image\n  apfNumber\n}\n    `;\nexport const DropzoneUserEssentialsFragmentDoc = gql`\n    fragment dropzoneUserEssentials on DropzoneUser {\n  id\n  walletId\n  expiresAt\n  hasCredits\n  hasMembership\n  hasLicense\n  hasExitWeight\n  role {\n    ...roleEssentials\n  }\n  license {\n    ...licenseEssentials\n  }\n  user {\n    ...userEssentials\n  }\n}\n    ${RoleEssentialsFragmentDoc}\n${LicenseEssentialsFragmentDoc}\n${UserEssentialsFragmentDoc}`;\nexport const ActivityEssentialsFragmentDoc = gql`\n    fragment activityEssentials on Event {\n  action\n  id\n  level\n  message\n  details\n  createdAt\n  createdBy {\n    ...dropzoneUserEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport const DropzoneEssentialsFragmentDoc = gql`\n    fragment dropzoneEssentials on Dropzone {\n  id\n  walletId\n  lat\n  lng\n  name\n  status: state\n  primaryColor\n  secondaryColor\n  banner\n  isCreditSystemEnabled\n  createdAt\n}\n    `;\nexport const LoadEssentialsFragmentDoc = gql`\n    fragment loadEssentials on Load {\n  id\n  name\n  createdAt\n  dispatchAt\n  hasLanded\n  loadNumber\n  isFull\n  state\n  isOpen\n  weight\n  maxSlots\n  availableSlots\n  occupiedSlots\n}\n    `;\nexport const TicketTypeEssentialsFragmentDoc = gql`\n    fragment ticketTypeEssentials on TicketType {\n  id\n  name\n  altitude\n  cost\n  isTandem\n  allowManifestingSelf\n}\n    `;\nexport const TicketTypeAddonEssentialsFragmentDoc = gql`\n    fragment ticketTypeAddonEssentials on Extra {\n  id\n  name\n  cost\n}\n    `;\nexport const TicketTypeDetailsFragmentDoc = gql`\n    fragment ticketTypeDetails on TicketType {\n  ...ticketTypeEssentials\n  extras {\n    ...ticketTypeAddonEssentials\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}\n${TicketTypeAddonEssentialsFragmentDoc}`;\nexport const JumpTypeEssentialsFragmentDoc = gql`\n    fragment jumpTypeEssentials on JumpType {\n  id\n  name\n}\n    `;\nexport const SlotEssentialsFragmentDoc = gql`\n    fragment slotEssentials on Slot {\n  id\n  createdAt\n  exitWeight\n  passengerName\n  passengerExitWeight\n  wingLoading\n  groupNumber\n  cost\n  ticketType {\n    ...ticketTypeDetails\n  }\n  jumpType {\n    ...jumpTypeEssentials\n  }\n  extras {\n    id\n    name\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}\n${JumpTypeEssentialsFragmentDoc}`;\nexport const RigEssentialsFragmentDoc = gql`\n    fragment rigEssentials on Rig {\n  id\n  name\n  make\n  model\n  serial\n  canopySize\n  repackExpiresAt\n  packValue\n  maintainedAt\n  rigType\n  packingCard\n  isPublic\n  owner {\n    id\n    name\n  }\n  dropzone {\n    id\n  }\n}\n    `;\nexport const PlaneEssentialsFragmentDoc = gql`\n    fragment planeEssentials on Plane {\n  id\n  minSlots\n  maxSlots\n  name\n  registration\n}\n    `;\nexport const ActivityDetailsFragmentDoc = gql`\n    fragment activityDetails on Event {\n  ...activityEssentials\n  resource {\n    ... on Dropzone {\n      ...dropzoneEssentials\n    }\n    ... on DropzoneUser {\n      ...dropzoneUserEssentials\n    }\n    ... on Load {\n      ...loadEssentials\n    }\n    ... on Slot {\n      ...slotEssentials\n    }\n    ... on Rig {\n      ...rigEssentials\n    }\n    ... on Plane {\n      ...planeEssentials\n    }\n  }\n}\n    ${ActivityEssentialsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${LoadEssentialsFragmentDoc}\n${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${PlaneEssentialsFragmentDoc}`;\nexport const FederationEssentialsFragmentDoc = gql`\n    fragment federationEssentials on Federation {\n  id\n  name\n  slug\n}\n    `;\nexport const LicenseDetailsFragmentDoc = gql`\n    fragment licenseDetails on License {\n  ...licenseEssentials\n  federation {\n    ...federationEssentials\n  }\n}\n    ${LicenseEssentialsFragmentDoc}\n${FederationEssentialsFragmentDoc}`;\nexport const UserFederationEssentialsFragmentDoc = gql`\n    fragment userFederationEssentials on UserFederation {\n  id\n  uid\n  federation {\n    ...federationEssentials\n  }\n  license {\n    ...licenseEssentials\n  }\n}\n    ${FederationEssentialsFragmentDoc}\n${LicenseEssentialsFragmentDoc}`;\nexport const UserRigDetailedFragmentDoc = gql`\n    fragment userRigDetailed on Rig {\n  ...rigEssentials\n  owner {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport const UserDetailedFragmentDoc = gql`\n    fragment userDetailed on User {\n  ...userEssentials\n  userFederations {\n    ...userFederationEssentials\n  }\n  rigs {\n    ...userRigDetailed\n  }\n}\n    ${UserEssentialsFragmentDoc}\n${UserFederationEssentialsFragmentDoc}\n${UserRigDetailedFragmentDoc}`;\nexport const DropzoneUserDetailsFragmentDoc = gql`\n    fragment dropzoneUserDetails on DropzoneUser {\n  ...dropzoneUserEssentials\n  credits\n  license {\n    ...licenseDetails\n  }\n  user {\n    ...userDetailed\n  }\n  availableRigs {\n    ...rigEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}\n${LicenseDetailsFragmentDoc}\n${UserDetailedFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const RigInspectionEssentialsFragmentDoc = gql`\n    fragment rigInspectionEssentials on RigInspection {\n  id\n  isOk\n  definition\n  inspectedBy {\n    ...dropzoneUserEssentials\n  }\n  rig {\n    ...rigEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const TransactionEssentialsFragmentDoc = gql`\n    fragment transactionEssentials on Transaction {\n  id\n  transactionType\n  amount\n  status\n  createdAt\n  message\n  sender {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n  receiver {\n    ... on DropzoneUser {\n      id\n      user {\n        id\n        name\n      }\n    }\n    ... on Dropzone {\n      id\n      name\n    }\n  }\n}\n    `;\nexport const ReceiptEssentialsFragmentDoc = gql`\n    fragment receiptEssentials on Receipt {\n  id\n  amountCents\n  createdAt\n  updatedAt\n  transactions {\n    ...transactionEssentials\n  }\n}\n    ${TransactionEssentialsFragmentDoc}`;\nexport const OrderEssentialsFragmentDoc = gql`\n    fragment orderEssentials on Order {\n  id\n  state\n  amount\n  title\n  orderNumber\n  createdAt\n  buyer {\n    ... on DropzoneUser {\n      ...dropzoneUserDetails\n    }\n    ... on Dropzone {\n      id\n      name\n      banner\n    }\n  }\n  seller {\n    ... on DropzoneUser {\n      ...dropzoneUserDetails\n    }\n    ... on Dropzone {\n      ...dropzoneEssentials\n    }\n  }\n  item {\n    title\n    cost\n    ... on Slot {\n      id\n      ticketType {\n        id\n        name\n        cost\n      }\n      extras {\n        id\n        name\n        cost\n      }\n    }\n    ... on TicketType {\n      id\n    }\n    ... on Extra {\n      id\n      name\n    }\n  }\n  receipts {\n    ...receiptEssentials\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}\n${ReceiptEssentialsFragmentDoc}`;\nexport const SlotDetailsFragmentDoc = gql`\n    fragment slotDetails on Slot {\n  ...slotEssentials\n  rig {\n    ...rigEssentials\n  }\n  dropzoneUser {\n    ...dropzoneUserEssentials\n  }\n}\n    ${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}`;\nexport const UserSlotDetailsFragmentDoc = gql`\n    fragment userSlotDetails on Slot {\n  ...slotDetails\n  load {\n    ...loadEssentials\n  }\n}\n    ${SlotDetailsFragmentDoc}\n${LoadEssentialsFragmentDoc}`;\nexport const DropzoneUserProfileFragmentDoc = gql`\n    fragment dropzoneUserProfile on DropzoneUser {\n  ...dropzoneUserDetails\n  permissions\n  rigInspections {\n    ...rigInspectionEssentials\n  }\n  orders {\n    edges {\n      node {\n        ...orderEssentials\n      }\n    }\n  }\n  slots {\n    edges {\n      node {\n        ...userSlotDetails\n      }\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}\n${OrderEssentialsFragmentDoc}\n${UserSlotDetailsFragmentDoc}`;\nexport const DropzoneStatisticsEssentialsFragmentDoc = gql`\n    fragment dropzoneStatisticsEssentials on Statistics {\n  id\n  activeUserCount\n  totalUserCount\n  slotsByJumpType(timeRange: $timeRange) {\n    name\n    count\n  }\n  slotsCount(timeRange: $timeRange)\n  cancelledLoadsCount(timeRange: $timeRange)\n  dzsoCount\n  finalizedLoadsCount(timeRange: $timeRange)\n  gcaCount\n  pilotCount\n  inactiveUserCount\n  loadsCount(timeRange: $timeRange)\n  loadCountByDay(timeRange: $timeRange) {\n    date\n    count\n  }\n  revenueCentsCount(timeRange: $timeRange)\n  rigInspectorCount\n}\n    `;\nexport const DropzoneStatisticsFragmentDoc = gql`\n    fragment dropzoneStatistics on Dropzone {\n  ...dropzoneEssentials\n  statistics {\n    ...dropzoneStatisticsEssentials\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${DropzoneStatisticsEssentialsFragmentDoc}`;\nexport const WeatherConditionEssentialsFragmentDoc = gql`\n    fragment weatherConditionEssentials on WeatherCondition {\n  id\n  jumpRun\n  temperature\n  offsetDirection\n  offsetMiles\n  createdAt\n  exitSpotMiles\n  winds {\n    temperature\n    altitude\n    speed\n    direction\n  }\n}\n    `;\nexport const DropzoneDetailedFragmentDoc = gql`\n    fragment dropzoneDetailed on Dropzone {\n  ...dropzoneEssentials\n  federation {\n    id\n    name\n    slug\n  }\n  currentConditions {\n    ...weatherConditionEssentials\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${WeatherConditionEssentialsFragmentDoc}`;\nexport const CurrentUserEssentialsFragmentDoc = gql`\n    fragment currentUserEssentials on DropzoneUser {\n  id\n  walletId\n  credits\n  hasCredits\n  hasExitWeight\n  hasMembership\n  hasReserveInDate\n  hasRigInspection\n  hasLicense\n  permissions\n  expiresAt\n  role {\n    ...roleEssentials\n  }\n}\n    ${RoleEssentialsFragmentDoc}`;\nexport const CurrentUserFragmentDoc = gql`\n    fragment currentUser on User {\n  ...userDetailed\n  dropzoneUsers {\n    ...dropzoneUserDetails\n  }\n  pushToken\n}\n    ${UserDetailedFragmentDoc}\n${DropzoneUserDetailsFragmentDoc}`;\nexport const CurrentUserDetailedFragmentDoc = gql`\n    fragment currentUserDetailed on DropzoneUser {\n  ...currentUserEssentials\n  rigInspections {\n    ...rigInspectionEssentials\n  }\n  orders {\n    edges {\n      node {\n        ...orderEssentials\n      }\n    }\n  }\n  availableRigs {\n    ...rigEssentials\n  }\n  license {\n    ...licenseDetails\n  }\n  user {\n    ...currentUser\n  }\n}\n    ${CurrentUserEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}\n${OrderEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${LicenseDetailsFragmentDoc}\n${CurrentUserFragmentDoc}`;\nexport const DropzoneExtensiveFragmentDoc = gql`\n    fragment dropzoneExtensive on Dropzone {\n  ...dropzoneDetailed\n  currentUser {\n    ...currentUserDetailed\n  }\n}\n    ${DropzoneDetailedFragmentDoc}\n${CurrentUserDetailedFragmentDoc}`;\nexport const TicketTypeExtraEssentialsFragmentDoc = gql`\n    fragment ticketTypeExtraEssentials on Extra {\n  id\n  name\n  createdAt\n  cost\n}\n    `;\nexport const TicketTypeExtraDetailedFragmentDoc = gql`\n    fragment ticketTypeExtraDetailed on Extra {\n  ...ticketTypeExtraEssentials\n  ticketTypes {\n    ...ticketTypeEssentials\n  }\n}\n    ${TicketTypeExtraEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\nexport const MasterLogUserFragmentDoc = gql`\n    fragment masterLogUser on MasterLogUser {\n  id\n  email\n  name\n  nickname\n  phone\n}\n    `;\nexport const MasterLogAircraftFragmentDoc = gql`\n    fragment masterLogAircraft on MasterLogAircraft {\n  id\n  name\n  registration\n}\n    `;\nexport const MasterLogSlotFragmentDoc = gql`\n    fragment masterLogSlot on MasterLogSlot {\n  id\n  altitude\n  jumpType\n  name\n}\n    `;\nexport const MasterLogLoadFragmentDoc = gql`\n    fragment masterLogLoad on MasterLogLoad {\n  id\n  loadNumber\n  dispatchAt\n  aircraft {\n    ...masterLogAircraft\n  }\n  gca {\n    ...masterLogUser\n  }\n  pilot {\n    ...masterLogUser\n  }\n  loadMaster {\n    ...masterLogUser\n  }\n  slots {\n    ...masterLogSlot\n  }\n}\n    ${MasterLogAircraftFragmentDoc}\n${MasterLogUserFragmentDoc}\n${MasterLogSlotFragmentDoc}`;\nexport const LocationFragmentDoc = gql`\n    fragment location on GeocodedLocation {\n  id\n  lat\n  lng\n  formattedString\n}\n    `;\nexport const MasterLogEntryFragmentDoc = gql`\n    fragment masterLogEntry on MasterLogEntry {\n  id\n  date\n  notes\n  downloadUrl\n  dzso {\n    ...masterLogUser\n  }\n  loads {\n    ...masterLogLoad\n  }\n  location {\n    ...location\n  }\n}\n    ${MasterLogUserFragmentDoc}\n${MasterLogLoadFragmentDoc}\n${LocationFragmentDoc}`;\nexport const RigInspectionDetailedFragmentDoc = gql`\n    fragment rigInspectionDetailed on RigInspection {\n  ...rigInspectionEssentials\n  rig {\n    ...userRigDetailed\n  }\n}\n    ${RigInspectionEssentialsFragmentDoc}\n${UserRigDetailedFragmentDoc}`;\nexport const RigInspectionMutationEssentialsFragmentDoc = gql`\n    fragment rigInspectionMutationEssentials on RigInspection {\n  ...rigInspectionDetailed\n  formTemplate {\n    id\n    definition\n  }\n  dropzoneUser {\n    ...dropzoneUserEssentials\n    rigInspections {\n      ...rigInspectionEssentials\n    }\n  }\n}\n    ${RigInspectionDetailedFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}`;\nexport const RoleDetailedFragmentDoc = gql`\n    fragment roleDetailed on UserRole {\n  ...roleEssentials\n  permissions\n}\n    ${RoleEssentialsFragmentDoc}`;\nexport const LoadDetailsFragmentDoc = gql`\n    fragment loadDetails on Load {\n  ...loadEssentials\n  plane {\n    ...planeEssentials\n  }\n  gca {\n    ...dropzoneUserEssentials\n  }\n  pilot {\n    ...dropzoneUserEssentials\n  }\n  loadMaster {\n    ...dropzoneUserEssentials\n  }\n  slots {\n    ...slotDetails\n  }\n}\n    ${LoadEssentialsFragmentDoc}\n${PlaneEssentialsFragmentDoc}\n${DropzoneUserEssentialsFragmentDoc}\n${SlotDetailsFragmentDoc}`;\nexport const SlotExhaustiveFragmentDoc = gql`\n    fragment slotExhaustive on Slot {\n  ...slotDetails\n  dropzoneUser {\n    ...dropzoneUserDetails\n  }\n  load {\n    ...loadDetails\n  }\n  rig {\n    ...rigEssentials\n  }\n}\n    ${SlotDetailsFragmentDoc}\n${DropzoneUserDetailsFragmentDoc}\n${LoadDetailsFragmentDoc}\n${RigEssentialsFragmentDoc}`;\nexport const TicketTypeAddonDetailsFragmentDoc = gql`\n    fragment ticketTypeAddonDetails on Extra {\n  ...ticketTypeAddonEssentials\n  ticketTypes {\n    ...ticketTypeEssentials\n  }\n}\n    ${TicketTypeAddonEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\nexport const ArchivePlaneDocument = gql`\n    mutation ArchivePlane($id: Int!) {\n  deletePlane(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    plane {\n      ...planeEssentials\n    }\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type ArchivePlaneMutationFn = Apollo.MutationFunction<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>;\n\n/**\n * __useArchivePlaneMutation__\n *\n * To run a mutation, you first call `useArchivePlaneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchivePlaneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archivePlaneMutation, { data, loading, error }] = useArchivePlaneMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchivePlaneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>(ArchivePlaneDocument, options);\n      }\nexport type ArchivePlaneMutationHookResult = ReturnType<typeof useArchivePlaneMutation>;\nexport type ArchivePlaneMutationResult = Apollo.MutationResult<Operation.ArchivePlaneMutation>;\nexport type ArchivePlaneMutationOptions = Apollo.BaseMutationOptions<Operation.ArchivePlaneMutation, Operation.ArchivePlaneMutationVariables>;\nexport const ArchiveRigDocument = gql`\n    mutation ArchiveRig($id: Int!) {\n  archiveRig(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    rig {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\nexport type ArchiveRigMutationFn = Apollo.MutationFunction<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>;\n\n/**\n * __useArchiveRigMutation__\n *\n * To run a mutation, you first call `useArchiveRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveRigMutation, { data, loading, error }] = useArchiveRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>(ArchiveRigDocument, options);\n      }\nexport type ArchiveRigMutationHookResult = ReturnType<typeof useArchiveRigMutation>;\nexport type ArchiveRigMutationResult = Apollo.MutationResult<Operation.ArchiveRigMutation>;\nexport type ArchiveRigMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveRigMutation, Operation.ArchiveRigMutationVariables>;\nexport const ArchiveTicketTypeDocument = gql`\n    mutation ArchiveTicketType($id: Int!) {\n  archiveTicketType(input: {id: $id}) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    ticketType {\n      ...ticketTypeEssentials\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}`;\nexport type ArchiveTicketTypeMutationFn = Apollo.MutationFunction<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>;\n\n/**\n * __useArchiveTicketTypeMutation__\n *\n * To run a mutation, you first call `useArchiveTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveTicketTypeMutation, { data, loading, error }] = useArchiveTicketTypeMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>(ArchiveTicketTypeDocument, options);\n      }\nexport type ArchiveTicketTypeMutationHookResult = ReturnType<typeof useArchiveTicketTypeMutation>;\nexport type ArchiveTicketTypeMutationResult = Apollo.MutationResult<Operation.ArchiveTicketTypeMutation>;\nexport type ArchiveTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveTicketTypeMutation, Operation.ArchiveTicketTypeMutationVariables>;\nexport const ArchiveUserDocument = gql`\n    mutation ArchiveUser($id: Int!) {\n  deleteUser(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserEssentials\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type ArchiveUserMutationFn = Apollo.MutationFunction<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>;\n\n/**\n * __useArchiveUserMutation__\n *\n * To run a mutation, you first call `useArchiveUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useArchiveUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [archiveUserMutation, { data, loading, error }] = useArchiveUserMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useArchiveUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>(ArchiveUserDocument, options);\n      }\nexport type ArchiveUserMutationHookResult = ReturnType<typeof useArchiveUserMutation>;\nexport type ArchiveUserMutationResult = Apollo.MutationResult<Operation.ArchiveUserMutation>;\nexport type ArchiveUserMutationOptions = Apollo.BaseMutationOptions<Operation.ArchiveUserMutation, Operation.ArchiveUserMutationVariables>;\nexport const ConfirmUserDocument = gql`\n    mutation ConfirmUser($token: String!) {\n  userConfirmRegistrationWithToken(confirmationToken: $token) {\n    authenticatable {\n      id\n      apfNumber\n      phone\n      pushToken\n      email\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    `;\nexport type ConfirmUserMutationFn = Apollo.MutationFunction<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\n\n/**\n * __useConfirmUserMutation__\n *\n * To run a mutation, you first call `useConfirmUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useConfirmUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [confirmUserMutation, { data, loading, error }] = useConfirmUserMutation({\n *   variables: {\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useConfirmUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>(ConfirmUserDocument, options);\n      }\nexport type ConfirmUserMutationHookResult = ReturnType<typeof useConfirmUserMutation>;\nexport type ConfirmUserMutationResult = Apollo.MutationResult<Operation.ConfirmUserMutation>;\nexport type ConfirmUserMutationOptions = Apollo.BaseMutationOptions<Operation.ConfirmUserMutation, Operation.ConfirmUserMutationVariables>;\nexport const CreateAircraftDocument = gql`\n    mutation CreateAircraft($attributes: PlaneInput!) {\n  createPlane(input: {attributes: $attributes}) {\n    plane {\n      ...planeEssentials\n      dropzone {\n        id\n        planes {\n          ...planeEssentials\n        }\n      }\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type CreateAircraftMutationFn = Apollo.MutationFunction<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>;\n\n/**\n * __useCreateAircraftMutation__\n *\n * To run a mutation, you first call `useCreateAircraftMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateAircraftMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createAircraftMutation, { data, loading, error }] = useCreateAircraftMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateAircraftMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>(CreateAircraftDocument, options);\n      }\nexport type CreateAircraftMutationHookResult = ReturnType<typeof useCreateAircraftMutation>;\nexport type CreateAircraftMutationResult = Apollo.MutationResult<Operation.CreateAircraftMutation>;\nexport type CreateAircraftMutationOptions = Apollo.BaseMutationOptions<Operation.CreateAircraftMutation, Operation.CreateAircraftMutationVariables>;\nexport const CreateDropzoneDocument = gql`\n    mutation CreateDropzone($name: String!, $banner: String, $federation: Int!, $lat: Float, $lng: Float, $primaryColor: String, $secondaryColor: String) {\n  createDropzone(\n    input: {attributes: {name: $name, banner: $banner, federation: $federation, primaryColor: $primaryColor, secondaryColor: $secondaryColor, lat: $lat, lng: $lng}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    dropzone {\n      ...dropzoneExtensive\n    }\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\nexport type CreateDropzoneMutationFn = Apollo.MutationFunction<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>;\n\n/**\n * __useCreateDropzoneMutation__\n *\n * To run a mutation, you first call `useCreateDropzoneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateDropzoneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createDropzoneMutation, { data, loading, error }] = useCreateDropzoneMutation({\n *   variables: {\n *      name: // value for 'name'\n *      banner: // value for 'banner'\n *      federation: // value for 'federation'\n *      lat: // value for 'lat'\n *      lng: // value for 'lng'\n *      primaryColor: // value for 'primaryColor'\n *      secondaryColor: // value for 'secondaryColor'\n *   },\n * });\n */\nexport function useCreateDropzoneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>(CreateDropzoneDocument, options);\n      }\nexport type CreateDropzoneMutationHookResult = ReturnType<typeof useCreateDropzoneMutation>;\nexport type CreateDropzoneMutationResult = Apollo.MutationResult<Operation.CreateDropzoneMutation>;\nexport type CreateDropzoneMutationOptions = Apollo.BaseMutationOptions<Operation.CreateDropzoneMutation, Operation.CreateDropzoneMutationVariables>;\nexport const CreateLoadDocument = gql`\n    mutation CreateLoad($name: String, $pilot: Int, $gca: Int, $maxSlots: Int, $plane: Int, $state: LoadState) {\n  createLoad(\n    input: {attributes: {name: $name, pilot: $pilot, gca: $gca, maxSlots: $maxSlots, plane: $plane, state: $state}}\n  ) {\n    load {\n      ...loadDetails\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type CreateLoadMutationFn = Apollo.MutationFunction<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>;\n\n/**\n * __useCreateLoadMutation__\n *\n * To run a mutation, you first call `useCreateLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createLoadMutation, { data, loading, error }] = useCreateLoadMutation({\n *   variables: {\n *      name: // value for 'name'\n *      pilot: // value for 'pilot'\n *      gca: // value for 'gca'\n *      maxSlots: // value for 'maxSlots'\n *      plane: // value for 'plane'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useCreateLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>(CreateLoadDocument, options);\n      }\nexport type CreateLoadMutationHookResult = ReturnType<typeof useCreateLoadMutation>;\nexport type CreateLoadMutationResult = Apollo.MutationResult<Operation.CreateLoadMutation>;\nexport type CreateLoadMutationOptions = Apollo.BaseMutationOptions<Operation.CreateLoadMutation, Operation.CreateLoadMutationVariables>;\nexport const CreateOrderDocument = gql`\n    mutation CreateOrder($buyer: ID!, $seller: ID!, $dropzone: ID!, $title: String, $amount: Float!) {\n  createOrder(\n    input: {attributes: {dropzone: $dropzone, title: $title, buyer: $buyer, seller: $seller, amount: $amount}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    order {\n      ...orderEssentials\n    }\n  }\n}\n    ${OrderEssentialsFragmentDoc}`;\nexport type CreateOrderMutationFn = Apollo.MutationFunction<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\n\n/**\n * __useCreateOrderMutation__\n *\n * To run a mutation, you first call `useCreateOrderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateOrderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createOrderMutation, { data, loading, error }] = useCreateOrderMutation({\n *   variables: {\n *      buyer: // value for 'buyer'\n *      seller: // value for 'seller'\n *      dropzone: // value for 'dropzone'\n *      title: // value for 'title'\n *      amount: // value for 'amount'\n *   },\n * });\n */\nexport function useCreateOrderMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>(CreateOrderDocument, options);\n      }\nexport type CreateOrderMutationHookResult = ReturnType<typeof useCreateOrderMutation>;\nexport type CreateOrderMutationResult = Apollo.MutationResult<Operation.CreateOrderMutation>;\nexport type CreateOrderMutationOptions = Apollo.BaseMutationOptions<Operation.CreateOrderMutation, Operation.CreateOrderMutationVariables>;\nexport const CreateRigDocument = gql`\n    mutation CreateRig($make: String, $name: String, $model: String, $serial: String, $rigType: String, $canopySize: Int, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  createRig(\n    input: {attributes: {name: $name, make: $make, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type CreateRigMutationFn = Apollo.MutationFunction<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\n\n/**\n * __useCreateRigMutation__\n *\n * To run a mutation, you first call `useCreateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigMutation, { data, loading, error }] = useCreateRigMutation({\n *   variables: {\n *      make: // value for 'make'\n *      name: // value for 'name'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCreateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>(CreateRigDocument, options);\n      }\nexport type CreateRigMutationHookResult = ReturnType<typeof useCreateRigMutation>;\nexport type CreateRigMutationResult = Apollo.MutationResult<Operation.CreateRigMutation>;\nexport type CreateRigMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigMutation, Operation.CreateRigMutationVariables>;\nexport const CreateRigInspectionDocument = gql`\n    mutation CreateRigInspection($dropzone: ID, $rig: ID, $isOk: Boolean, $definition: String) {\n  createRigInspection(\n    input: {attributes: {dropzone: $dropzone, rig: $rig, isOk: $isOk, definition: $definition}}\n  ) {\n    rigInspection {\n      ...rigInspectionMutationEssentials\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${RigInspectionMutationEssentialsFragmentDoc}`;\nexport type CreateRigInspectionMutationFn = Apollo.MutationFunction<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>;\n\n/**\n * __useCreateRigInspectionMutation__\n *\n * To run a mutation, you first call `useCreateRigInspectionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateRigInspectionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createRigInspectionMutation, { data, loading, error }] = useCreateRigInspectionMutation({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      rig: // value for 'rig'\n *      isOk: // value for 'isOk'\n *      definition: // value for 'definition'\n *   },\n * });\n */\nexport function useCreateRigInspectionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>(CreateRigInspectionDocument, options);\n      }\nexport type CreateRigInspectionMutationHookResult = ReturnType<typeof useCreateRigInspectionMutation>;\nexport type CreateRigInspectionMutationResult = Apollo.MutationResult<Operation.CreateRigInspectionMutation>;\nexport type CreateRigInspectionMutationOptions = Apollo.BaseMutationOptions<Operation.CreateRigInspectionMutation, Operation.CreateRigInspectionMutationVariables>;\nexport const CreateTicketAddonDocument = gql`\n    mutation CreateTicketAddon($attributes: ExtraInput!) {\n  createExtra(input: {attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    extra {\n      ...ticketTypeAddonDetails\n      dropzone {\n        id\n        extras {\n          ...ticketTypeAddonDetails\n        }\n      }\n    }\n  }\n}\n    ${TicketTypeAddonDetailsFragmentDoc}`;\nexport type CreateTicketAddonMutationFn = Apollo.MutationFunction<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>;\n\n/**\n * __useCreateTicketAddonMutation__\n *\n * To run a mutation, you first call `useCreateTicketAddonMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateTicketAddonMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createTicketAddonMutation, { data, loading, error }] = useCreateTicketAddonMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateTicketAddonMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>(CreateTicketAddonDocument, options);\n      }\nexport type CreateTicketAddonMutationHookResult = ReturnType<typeof useCreateTicketAddonMutation>;\nexport type CreateTicketAddonMutationResult = Apollo.MutationResult<Operation.CreateTicketAddonMutation>;\nexport type CreateTicketAddonMutationOptions = Apollo.BaseMutationOptions<Operation.CreateTicketAddonMutation, Operation.CreateTicketAddonMutationVariables>;\nexport const CreateTicketTypeDocument = gql`\n    mutation CreateTicketType($attributes: TicketTypeInput!) {\n  createTicketType(input: {attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    ticketType {\n      id\n      name\n      altitude\n      cost\n      allowManifestingSelf\n      extras {\n        id\n        name\n        cost\n      }\n      dropzone {\n        id\n        ticketTypes {\n          id\n          name\n          altitude\n          cost\n          allowManifestingSelf\n          extras {\n            id\n            name\n            cost\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type CreateTicketTypeMutationFn = Apollo.MutationFunction<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>;\n\n/**\n * __useCreateTicketTypeMutation__\n *\n * To run a mutation, you first call `useCreateTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createTicketTypeMutation, { data, loading, error }] = useCreateTicketTypeMutation({\n *   variables: {\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useCreateTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>(CreateTicketTypeDocument, options);\n      }\nexport type CreateTicketTypeMutationHookResult = ReturnType<typeof useCreateTicketTypeMutation>;\nexport type CreateTicketTypeMutationResult = Apollo.MutationResult<Operation.CreateTicketTypeMutation>;\nexport type CreateTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.CreateTicketTypeMutation, Operation.CreateTicketTypeMutationVariables>;\nexport const CreateGhostDocument = gql`\n    mutation CreateGhost($name: String!, $phone: String, $email: String!, $federationNumber: String, $role: Int!, $license: Int, $dropzone: Int!, $exitWeight: Float!) {\n  createGhost(\n    input: {attributes: {role: $role, federationNumber: $federationNumber, name: $name, phone: $phone, email: $email, dropzone: $dropzone, license: $license, exitWeight: $exitWeight}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    user {\n      ...userDetailed\n    }\n  }\n}\n    ${UserDetailedFragmentDoc}`;\nexport type CreateGhostMutationFn = Apollo.MutationFunction<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>;\n\n/**\n * __useCreateGhostMutation__\n *\n * To run a mutation, you first call `useCreateGhostMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateGhostMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createGhostMutation, { data, loading, error }] = useCreateGhostMutation({\n *   variables: {\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      email: // value for 'email'\n *      federationNumber: // value for 'federationNumber'\n *      role: // value for 'role'\n *      license: // value for 'license'\n *      dropzone: // value for 'dropzone'\n *      exitWeight: // value for 'exitWeight'\n *   },\n * });\n */\nexport function useCreateGhostMutation(baseOptions?: Apollo.MutationHookOptions<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>(CreateGhostDocument, options);\n      }\nexport type CreateGhostMutationHookResult = ReturnType<typeof useCreateGhostMutation>;\nexport type CreateGhostMutationResult = Apollo.MutationResult<Operation.CreateGhostMutation>;\nexport type CreateGhostMutationOptions = Apollo.BaseMutationOptions<Operation.CreateGhostMutation, Operation.CreateGhostMutationVariables>;\nexport const DeleteSlotDocument = gql`\n    mutation DeleteSlot($id: Int!) {\n  deleteSlot(input: {id: $id}) {\n    slot {\n      ...slotExhaustive\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${SlotExhaustiveFragmentDoc}`;\nexport type DeleteSlotMutationFn = Apollo.MutationFunction<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>;\n\n/**\n * __useDeleteSlotMutation__\n *\n * To run a mutation, you first call `useDeleteSlotMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useDeleteSlotMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [deleteSlotMutation, { data, loading, error }] = useDeleteSlotMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDeleteSlotMutation(baseOptions?: Apollo.MutationHookOptions<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>(DeleteSlotDocument, options);\n      }\nexport type DeleteSlotMutationHookResult = ReturnType<typeof useDeleteSlotMutation>;\nexport type DeleteSlotMutationResult = Apollo.MutationResult<Operation.DeleteSlotMutation>;\nexport type DeleteSlotMutationOptions = Apollo.BaseMutationOptions<Operation.DeleteSlotMutation, Operation.DeleteSlotMutationVariables>;\nexport const FinalizeLoadDocument = gql`\n    mutation FinalizeLoad($id: Int!, $state: LoadState!) {\n  finalizeLoad(input: {id: $id, state: $state}) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type FinalizeLoadMutationFn = Apollo.MutationFunction<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\n\n/**\n * __useFinalizeLoadMutation__\n *\n * To run a mutation, you first call `useFinalizeLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useFinalizeLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [finalizeLoadMutation, { data, loading, error }] = useFinalizeLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useFinalizeLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>(FinalizeLoadDocument, options);\n      }\nexport type FinalizeLoadMutationHookResult = ReturnType<typeof useFinalizeLoadMutation>;\nexport type FinalizeLoadMutationResult = Apollo.MutationResult<Operation.FinalizeLoadMutation>;\nexport type FinalizeLoadMutationOptions = Apollo.BaseMutationOptions<Operation.FinalizeLoadMutation, Operation.FinalizeLoadMutationVariables>;\nexport const GrantPermissionDocument = gql`\n    mutation GrantPermission($dropzoneUserId: ID!, $permissionName: Permission!) {\n  grantPermission(\n    input: {dropzoneUser: $dropzoneUserId, permission: $permissionName}\n  ) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    dropzoneUser {\n      ...dropzoneUserEssentials\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type GrantPermissionMutationFn = Apollo.MutationFunction<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>;\n\n/**\n * __useGrantPermissionMutation__\n *\n * To run a mutation, you first call `useGrantPermissionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useGrantPermissionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [grantPermissionMutation, { data, loading, error }] = useGrantPermissionMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      permissionName: // value for 'permissionName'\n *   },\n * });\n */\nexport function useGrantPermissionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>(GrantPermissionDocument, options);\n      }\nexport type GrantPermissionMutationHookResult = ReturnType<typeof useGrantPermissionMutation>;\nexport type GrantPermissionMutationResult = Apollo.MutationResult<Operation.GrantPermissionMutation>;\nexport type GrantPermissionMutationOptions = Apollo.BaseMutationOptions<Operation.GrantPermissionMutation, Operation.GrantPermissionMutationVariables>;\nexport const JoinFederationDocument = gql`\n    mutation JoinFederation($federation: ID!, $uid: String, $license: ID) {\n  joinFederation(\n    input: {attributes: {federation: $federation, uid: $uid, license: $license}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    userFederation {\n      id\n      uid\n      qualifications {\n        id\n        name\n        uid\n        expiresAt\n      }\n      license {\n        id\n        name\n      }\n      user {\n        id\n        name\n        nickname\n        userFederations {\n          federation {\n            id\n            name\n            slug\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n}\n    `;\nexport type JoinFederationMutationFn = Apollo.MutationFunction<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\n\n/**\n * __useJoinFederationMutation__\n *\n * To run a mutation, you first call `useJoinFederationMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useJoinFederationMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [joinFederationMutation, { data, loading, error }] = useJoinFederationMutation({\n *   variables: {\n *      federation: // value for 'federation'\n *      uid: // value for 'uid'\n *      license: // value for 'license'\n *   },\n * });\n */\nexport function useJoinFederationMutation(baseOptions?: Apollo.MutationHookOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>(JoinFederationDocument, options);\n      }\nexport type JoinFederationMutationHookResult = ReturnType<typeof useJoinFederationMutation>;\nexport type JoinFederationMutationResult = Apollo.MutationResult<Operation.JoinFederationMutation>;\nexport type JoinFederationMutationOptions = Apollo.BaseMutationOptions<Operation.JoinFederationMutation, Operation.JoinFederationMutationVariables>;\nexport const LoginDocument = gql`\n    mutation Login($email: String!, $password: String!) {\n  userLogin(email: $email, password: $password) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginMutationFn = Apollo.MutationFunction<Operation.LoginMutation, Operation.LoginMutationVariables>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useLoginMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginMutation, Operation.LoginMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginMutation, Operation.LoginMutationVariables>(LoginDocument, options);\n      }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = Apollo.MutationResult<Operation.LoginMutation>;\nexport type LoginMutationOptions = Apollo.BaseMutationOptions<Operation.LoginMutation, Operation.LoginMutationVariables>;\nexport const LoginWithAppleDocument = gql`\n    mutation LoginWithApple($token: String!, $userIdentity: String!, $pushToken: String) {\n  loginWithApple(\n    token: $token\n    userIdentity: $userIdentity\n    pushToken: $pushToken\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginWithAppleMutationFn = Apollo.MutationFunction<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>;\n\n/**\n * __useLoginWithAppleMutation__\n *\n * To run a mutation, you first call `useLoginWithAppleMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginWithAppleMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginWithAppleMutation, { data, loading, error }] = useLoginWithAppleMutation({\n *   variables: {\n *      token: // value for 'token'\n *      userIdentity: // value for 'userIdentity'\n *      pushToken: // value for 'pushToken'\n *   },\n * });\n */\nexport function useLoginWithAppleMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>(LoginWithAppleDocument, options);\n      }\nexport type LoginWithAppleMutationHookResult = ReturnType<typeof useLoginWithAppleMutation>;\nexport type LoginWithAppleMutationResult = Apollo.MutationResult<Operation.LoginWithAppleMutation>;\nexport type LoginWithAppleMutationOptions = Apollo.BaseMutationOptions<Operation.LoginWithAppleMutation, Operation.LoginWithAppleMutationVariables>;\nexport const LoginWithFacebookDocument = gql`\n    mutation LoginWithFacebook($token: String!, $pushToken: String) {\n  loginWithFacebook(\n    token: $token\n    pushToken: $pushToken\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    authenticatable {\n      id\n      email\n      name\n      phone\n      createdAt\n      updatedAt\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type LoginWithFacebookMutationFn = Apollo.MutationFunction<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>;\n\n/**\n * __useLoginWithFacebookMutation__\n *\n * To run a mutation, you first call `useLoginWithFacebookMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginWithFacebookMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginWithFacebookMutation, { data, loading, error }] = useLoginWithFacebookMutation({\n *   variables: {\n *      token: // value for 'token'\n *      pushToken: // value for 'pushToken'\n *   },\n * });\n */\nexport function useLoginWithFacebookMutation(baseOptions?: Apollo.MutationHookOptions<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>(LoginWithFacebookDocument, options);\n      }\nexport type LoginWithFacebookMutationHookResult = ReturnType<typeof useLoginWithFacebookMutation>;\nexport type LoginWithFacebookMutationResult = Apollo.MutationResult<Operation.LoginWithFacebookMutation>;\nexport type LoginWithFacebookMutationOptions = Apollo.BaseMutationOptions<Operation.LoginWithFacebookMutation, Operation.LoginWithFacebookMutationVariables>;\nexport const ManifestGroupDocument = gql`\n    mutation ManifestGroup($jumpType: ID, $extras: [ID!], $load: ID, $ticketType: ID, $groupNumber: Int, $userGroup: [SlotUser!]!) {\n  createSlots(\n    input: {attributes: {jumpType: $jumpType, groupNumber: $groupNumber, extras: $extras, load: $load, ticketType: $ticketType, userGroup: $userGroup}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type ManifestGroupMutationFn = Apollo.MutationFunction<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>;\n\n/**\n * __useManifestGroupMutation__\n *\n * To run a mutation, you first call `useManifestGroupMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useManifestGroupMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [manifestGroupMutation, { data, loading, error }] = useManifestGroupMutation({\n *   variables: {\n *      jumpType: // value for 'jumpType'\n *      extras: // value for 'extras'\n *      load: // value for 'load'\n *      ticketType: // value for 'ticketType'\n *      groupNumber: // value for 'groupNumber'\n *      userGroup: // value for 'userGroup'\n *   },\n * });\n */\nexport function useManifestGroupMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>(ManifestGroupDocument, options);\n      }\nexport type ManifestGroupMutationHookResult = ReturnType<typeof useManifestGroupMutation>;\nexport type ManifestGroupMutationResult = Apollo.MutationResult<Operation.ManifestGroupMutation>;\nexport type ManifestGroupMutationOptions = Apollo.BaseMutationOptions<Operation.ManifestGroupMutation, Operation.ManifestGroupMutationVariables>;\nexport const ManifestUserDocument = gql`\n    mutation ManifestUser($jumpType: ID, $extras: [ID!], $load: ID, $rig: ID, $ticketType: ID, $dropzoneUser: ID, $exitWeight: Float, $passengerName: String, $groupNumber: Int, $passengerExitWeight: Float) {\n  createSlot(\n    input: {attributes: {jumpType: $jumpType, extras: $extras, load: $load, rig: $rig, groupNumber: $groupNumber, ticketType: $ticketType, dropzoneUser: $dropzoneUser, exitWeight: $exitWeight, passengerExitWeight: $passengerExitWeight, passengerName: $passengerName}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    slot {\n      ...slotExhaustive\n    }\n  }\n}\n    ${SlotExhaustiveFragmentDoc}`;\nexport type ManifestUserMutationFn = Apollo.MutationFunction<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>;\n\n/**\n * __useManifestUserMutation__\n *\n * To run a mutation, you first call `useManifestUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useManifestUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [manifestUserMutation, { data, loading, error }] = useManifestUserMutation({\n *   variables: {\n *      jumpType: // value for 'jumpType'\n *      extras: // value for 'extras'\n *      load: // value for 'load'\n *      rig: // value for 'rig'\n *      ticketType: // value for 'ticketType'\n *      dropzoneUser: // value for 'dropzoneUser'\n *      exitWeight: // value for 'exitWeight'\n *      passengerName: // value for 'passengerName'\n *      groupNumber: // value for 'groupNumber'\n *      passengerExitWeight: // value for 'passengerExitWeight'\n *   },\n * });\n */\nexport function useManifestUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>(ManifestUserDocument, options);\n      }\nexport type ManifestUserMutationHookResult = ReturnType<typeof useManifestUserMutation>;\nexport type ManifestUserMutationResult = Apollo.MutationResult<Operation.ManifestUserMutation>;\nexport type ManifestUserMutationOptions = Apollo.BaseMutationOptions<Operation.ManifestUserMutation, Operation.ManifestUserMutationVariables>;\nexport const MoveSlotDocument = gql`\n    mutation MoveSlot($sourceSlot: Int!, $targetSlot: Int, $targetLoad: Int!) {\n  moveSlot(\n    input: {sourceSlot: $sourceSlot, targetSlot: $targetSlot, targetLoad: $targetLoad}\n  ) {\n    loads {\n      ...loadDetails\n    }\n    errors\n    fieldErrors {\n      field\n      message\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type MoveSlotMutationFn = Apollo.MutationFunction<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>;\n\n/**\n * __useMoveSlotMutation__\n *\n * To run a mutation, you first call `useMoveSlotMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useMoveSlotMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [moveSlotMutation, { data, loading, error }] = useMoveSlotMutation({\n *   variables: {\n *      sourceSlot: // value for 'sourceSlot'\n *      targetSlot: // value for 'targetSlot'\n *      targetLoad: // value for 'targetLoad'\n *   },\n * });\n */\nexport function useMoveSlotMutation(baseOptions?: Apollo.MutationHookOptions<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>(MoveSlotDocument, options);\n      }\nexport type MoveSlotMutationHookResult = ReturnType<typeof useMoveSlotMutation>;\nexport type MoveSlotMutationResult = Apollo.MutationResult<Operation.MoveSlotMutation>;\nexport type MoveSlotMutationOptions = Apollo.BaseMutationOptions<Operation.MoveSlotMutation, Operation.MoveSlotMutationVariables>;\nexport const RecoverPasswordDocument = gql`\n    mutation RecoverPassword($email: String!, $redirectUrl: String!) {\n  userSendPasswordResetWithToken(email: $email, redirectUrl: $redirectUrl) {\n    message\n  }\n}\n    `;\nexport type RecoverPasswordMutationFn = Apollo.MutationFunction<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\n\n/**\n * __useRecoverPasswordMutation__\n *\n * To run a mutation, you first call `useRecoverPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRecoverPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [recoverPasswordMutation, { data, loading, error }] = useRecoverPasswordMutation({\n *   variables: {\n *      email: // value for 'email'\n *      redirectUrl: // value for 'redirectUrl'\n *   },\n * });\n */\nexport function useRecoverPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>(RecoverPasswordDocument, options);\n      }\nexport type RecoverPasswordMutationHookResult = ReturnType<typeof useRecoverPasswordMutation>;\nexport type RecoverPasswordMutationResult = Apollo.MutationResult<Operation.RecoverPasswordMutation>;\nexport type RecoverPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.RecoverPasswordMutation, Operation.RecoverPasswordMutationVariables>;\nexport const ReloadWeatherDocument = gql`\n    mutation ReloadWeather($id: Int!) {\n  reloadWeatherCondition(input: {id: $id}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    weatherCondition {\n      createdAt\n      exitSpotMiles\n      id\n      jumpRun\n      offsetDirection\n      offsetMiles\n      temperature\n      updatedAt\n      winds {\n        altitude\n        direction\n        speed\n        temperature\n      }\n    }\n  }\n}\n    `;\nexport type ReloadWeatherMutationFn = Apollo.MutationFunction<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\n\n/**\n * __useReloadWeatherMutation__\n *\n * To run a mutation, you first call `useReloadWeatherMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useReloadWeatherMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [reloadWeatherMutation, { data, loading, error }] = useReloadWeatherMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useReloadWeatherMutation(baseOptions?: Apollo.MutationHookOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>(ReloadWeatherDocument, options);\n      }\nexport type ReloadWeatherMutationHookResult = ReturnType<typeof useReloadWeatherMutation>;\nexport type ReloadWeatherMutationResult = Apollo.MutationResult<Operation.ReloadWeatherMutation>;\nexport type ReloadWeatherMutationOptions = Apollo.BaseMutationOptions<Operation.ReloadWeatherMutation, Operation.ReloadWeatherMutationVariables>;\nexport const RevokePermissionDocument = gql`\n    mutation RevokePermission($dropzoneUserId: ID!, $permissionName: Permission!) {\n  revokePermission(\n    input: {dropzoneUser: $dropzoneUserId, permission: $permissionName}\n  ) {\n    fieldErrors {\n      message\n      field\n    }\n    errors\n    dropzoneUser {\n      ...dropzoneUserEssentials\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\nexport type RevokePermissionMutationFn = Apollo.MutationFunction<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>;\n\n/**\n * __useRevokePermissionMutation__\n *\n * To run a mutation, you first call `useRevokePermissionMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRevokePermissionMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [revokePermissionMutation, { data, loading, error }] = useRevokePermissionMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      permissionName: // value for 'permissionName'\n *   },\n * });\n */\nexport function useRevokePermissionMutation(baseOptions?: Apollo.MutationHookOptions<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>(RevokePermissionDocument, options);\n      }\nexport type RevokePermissionMutationHookResult = ReturnType<typeof useRevokePermissionMutation>;\nexport type RevokePermissionMutationResult = Apollo.MutationResult<Operation.RevokePermissionMutation>;\nexport type RevokePermissionMutationOptions = Apollo.BaseMutationOptions<Operation.RevokePermissionMutation, Operation.RevokePermissionMutationVariables>;\nexport const UpdateAircraftDocument = gql`\n    mutation UpdateAircraft($id: Int!, $attributes: PlaneInput!) {\n  updatePlane(input: {id: $id, attributes: $attributes}) {\n    plane {\n      ...planeEssentials\n      dropzone {\n        id\n        name\n        planes {\n          id\n          name\n          registration\n          minSlots\n          maxSlots\n          hours\n          nextMaintenanceHours\n        }\n      }\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\nexport type UpdateAircraftMutationFn = Apollo.MutationFunction<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>;\n\n/**\n * __useUpdateAircraftMutation__\n *\n * To run a mutation, you first call `useUpdateAircraftMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateAircraftMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateAircraftMutation, { data, loading, error }] = useUpdateAircraftMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateAircraftMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>(UpdateAircraftDocument, options);\n      }\nexport type UpdateAircraftMutationHookResult = ReturnType<typeof useUpdateAircraftMutation>;\nexport type UpdateAircraftMutationResult = Apollo.MutationResult<Operation.UpdateAircraftMutation>;\nexport type UpdateAircraftMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateAircraftMutation, Operation.UpdateAircraftMutationVariables>;\nexport const UpdateDropzoneDocument = gql`\n    mutation UpdateDropzone($id: Int!, $name: String!, $requestPublication: Boolean, $banner: String, $federation: Int!, $lat: Float, $lng: Float, $primaryColor: String, $secondaryColor: String, $isCreditSystemEnabled: Boolean, $isPublic: Boolean) {\n  updateDropzone(\n    input: {id: $id, attributes: {name: $name, banner: $banner, lat: $lat, lng: $lng, requestPublication: $requestPublication, federation: $federation, primaryColor: $primaryColor, secondaryColor: $secondaryColor, isCreditSystemEnabled: $isCreditSystemEnabled, isPublic: $isPublic}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    dropzone {\n      ...dropzoneExtensive\n    }\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\nexport type UpdateDropzoneMutationFn = Apollo.MutationFunction<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>;\n\n/**\n * __useUpdateDropzoneMutation__\n *\n * To run a mutation, you first call `useUpdateDropzoneMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateDropzoneMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateDropzoneMutation, { data, loading, error }] = useUpdateDropzoneMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      requestPublication: // value for 'requestPublication'\n *      banner: // value for 'banner'\n *      federation: // value for 'federation'\n *      lat: // value for 'lat'\n *      lng: // value for 'lng'\n *      primaryColor: // value for 'primaryColor'\n *      secondaryColor: // value for 'secondaryColor'\n *      isCreditSystemEnabled: // value for 'isCreditSystemEnabled'\n *      isPublic: // value for 'isPublic'\n *   },\n * });\n */\nexport function useUpdateDropzoneMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>(UpdateDropzoneDocument, options);\n      }\nexport type UpdateDropzoneMutationHookResult = ReturnType<typeof useUpdateDropzoneMutation>;\nexport type UpdateDropzoneMutationResult = Apollo.MutationResult<Operation.UpdateDropzoneMutation>;\nexport type UpdateDropzoneMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateDropzoneMutation, Operation.UpdateDropzoneMutationVariables>;\nexport const UpdateDropzoneUserDocument = gql`\n    mutation UpdateDropzoneUser($dropzoneUserId: ID!, $attributes: DropzoneUserInput!) {\n  updateDropzoneUser(\n    input: {dropzoneUser: $dropzoneUserId, attributes: $attributes}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\nexport type UpdateDropzoneUserMutationFn = Apollo.MutationFunction<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>;\n\n/**\n * __useUpdateDropzoneUserMutation__\n *\n * To run a mutation, you first call `useUpdateDropzoneUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateDropzoneUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateDropzoneUserMutation, { data, loading, error }] = useUpdateDropzoneUserMutation({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateDropzoneUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>(UpdateDropzoneUserDocument, options);\n      }\nexport type UpdateDropzoneUserMutationHookResult = ReturnType<typeof useUpdateDropzoneUserMutation>;\nexport type UpdateDropzoneUserMutationResult = Apollo.MutationResult<Operation.UpdateDropzoneUserMutation>;\nexport type UpdateDropzoneUserMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateDropzoneUserMutation, Operation.UpdateDropzoneUserMutationVariables>;\nexport const UpdateLoadDocument = gql`\n    mutation UpdateLoad($id: Int!, $pilot: Int, $gca: Int, $plane: Int, $loadMaster: Int, $dispatchAt: ISO8601DateTime) {\n  updateLoad(\n    input: {id: $id, attributes: {pilot: $pilot, gca: $gca, plane: $plane, loadMaster: $loadMaster, dispatchAt: $dispatchAt}}\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\nexport type UpdateLoadMutationFn = Apollo.MutationFunction<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>;\n\n/**\n * __useUpdateLoadMutation__\n *\n * To run a mutation, you first call `useUpdateLoadMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateLoadMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateLoadMutation, { data, loading, error }] = useUpdateLoadMutation({\n *   variables: {\n *      id: // value for 'id'\n *      pilot: // value for 'pilot'\n *      gca: // value for 'gca'\n *      plane: // value for 'plane'\n *      loadMaster: // value for 'loadMaster'\n *      dispatchAt: // value for 'dispatchAt'\n *   },\n * });\n */\nexport function useUpdateLoadMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>(UpdateLoadDocument, options);\n      }\nexport type UpdateLoadMutationHookResult = ReturnType<typeof useUpdateLoadMutation>;\nexport type UpdateLoadMutationResult = Apollo.MutationResult<Operation.UpdateLoadMutation>;\nexport type UpdateLoadMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateLoadMutation, Operation.UpdateLoadMutationVariables>;\nexport const UpdateLostPasswordDocument = gql`\n    mutation UpdateLostPassword($password: String!, $passwordConfirmation: String!, $token: String!) {\n  userUpdatePasswordWithToken(\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    resetPasswordToken: $token\n  ) {\n    authenticatable {\n      ...userEssentials\n    }\n    credentials {\n      accessToken\n      client\n      expiry\n      tokenType\n      uid\n    }\n  }\n}\n    ${UserEssentialsFragmentDoc}`;\nexport type UpdateLostPasswordMutationFn = Apollo.MutationFunction<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\n\n/**\n * __useUpdateLostPasswordMutation__\n *\n * To run a mutation, you first call `useUpdateLostPasswordMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateLostPasswordMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateLostPasswordMutation, { data, loading, error }] = useUpdateLostPasswordMutation({\n *   variables: {\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      token: // value for 'token'\n *   },\n * });\n */\nexport function useUpdateLostPasswordMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>(UpdateLostPasswordDocument, options);\n      }\nexport type UpdateLostPasswordMutationHookResult = ReturnType<typeof useUpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationResult = Apollo.MutationResult<Operation.UpdateLostPasswordMutation>;\nexport type UpdateLostPasswordMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateLostPasswordMutation, Operation.UpdateLostPasswordMutationVariables>;\nexport const UpdateMasterLogDocument = gql`\n    mutation UpdateMasterLog($date: ISO8601Date!, $dropzone: ID!, $attributes: MasterLogInput!) {\n  updateMasterLog(\n    input: {dropzone: $dropzone, date: $date, attributes: $attributes}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    masterLog {\n      ...masterLogEntry\n    }\n  }\n}\n    ${MasterLogEntryFragmentDoc}`;\nexport type UpdateMasterLogMutationFn = Apollo.MutationFunction<Operation.UpdateMasterLogMutation, Operation.UpdateMasterLogMutationVariables>;\n\n/**\n * __useUpdateMasterLogMutation__\n *\n * To run a mutation, you first call `useUpdateMasterLogMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateMasterLogMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateMasterLogMutation, { data, loading, error }] = useUpdateMasterLogMutation({\n *   variables: {\n *      date: // value for 'date'\n *      dropzone: // value for 'dropzone'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateMasterLogMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateMasterLogMutation, Operation.UpdateMasterLogMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateMasterLogMutation, Operation.UpdateMasterLogMutationVariables>(UpdateMasterLogDocument, options);\n      }\nexport type UpdateMasterLogMutationHookResult = ReturnType<typeof useUpdateMasterLogMutation>;\nexport type UpdateMasterLogMutationResult = Apollo.MutationResult<Operation.UpdateMasterLogMutation>;\nexport type UpdateMasterLogMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateMasterLogMutation, Operation.UpdateMasterLogMutationVariables>;\nexport const UpdateRigDocument = gql`\n    mutation UpdateRig($id: Int!, $name: String, $make: String, $model: String, $serial: String, $isPublic: Boolean, $rigType: String, $canopySize: Int, $packingCard: String, $repackExpiresAt: Int, $userId: Int, $dropzoneId: Int) {\n  updateRig(\n    input: {id: $id, attributes: {name: $name, make: $make, packingCard: $packingCard, isPublic: $isPublic, model: $model, serial: $serial, repackExpiresAt: $repackExpiresAt, dropzoneId: $dropzoneId, userId: $userId, canopySize: $canopySize, rigType: $rigType}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    rig {\n      ...userRigDetailed\n    }\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\nexport type UpdateRigMutationFn = Apollo.MutationFunction<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\n\n/**\n * __useUpdateRigMutation__\n *\n * To run a mutation, you first call `useUpdateRigMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigMutation, { data, loading, error }] = useUpdateRigMutation({\n *   variables: {\n *      id: // value for 'id'\n *      name: // value for 'name'\n *      make: // value for 'make'\n *      model: // value for 'model'\n *      serial: // value for 'serial'\n *      isPublic: // value for 'isPublic'\n *      rigType: // value for 'rigType'\n *      canopySize: // value for 'canopySize'\n *      packingCard: // value for 'packingCard'\n *      repackExpiresAt: // value for 'repackExpiresAt'\n *      userId: // value for 'userId'\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useUpdateRigMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>(UpdateRigDocument, options);\n      }\nexport type UpdateRigMutationHookResult = ReturnType<typeof useUpdateRigMutation>;\nexport type UpdateRigMutationResult = Apollo.MutationResult<Operation.UpdateRigMutation>;\nexport type UpdateRigMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigMutation, Operation.UpdateRigMutationVariables>;\nexport const UpdateRigInspectionTemplateDocument = gql`\n    mutation UpdateRigInspectionTemplate($dropzoneId: Int, $formId: Int, $definition: String) {\n  updateFormTemplate(\n    input: {id: $formId, attributes: {dropzoneId: $dropzoneId, definition: $definition}}\n  ) {\n    formTemplate {\n      id\n      name\n      definition\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    `;\nexport type UpdateRigInspectionTemplateMutationFn = Apollo.MutationFunction<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>;\n\n/**\n * __useUpdateRigInspectionTemplateMutation__\n *\n * To run a mutation, you first call `useUpdateRigInspectionTemplateMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRigInspectionTemplateMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRigInspectionTemplateMutation, { data, loading, error }] = useUpdateRigInspectionTemplateMutation({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      formId: // value for 'formId'\n *      definition: // value for 'definition'\n *   },\n * });\n */\nexport function useUpdateRigInspectionTemplateMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>(UpdateRigInspectionTemplateDocument, options);\n      }\nexport type UpdateRigInspectionTemplateMutationHookResult = ReturnType<typeof useUpdateRigInspectionTemplateMutation>;\nexport type UpdateRigInspectionTemplateMutationResult = Apollo.MutationResult<Operation.UpdateRigInspectionTemplateMutation>;\nexport type UpdateRigInspectionTemplateMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRigInspectionTemplateMutation, Operation.UpdateRigInspectionTemplateMutationVariables>;\nexport const UpdateRoleDocument = gql`\n    mutation UpdateRole($roleId: Int!, $permissionName: String!, $enabled: Boolean!) {\n  updateRole(input: {id: $roleId, permission: $permissionName, enabled: $enabled}) {\n    role {\n      id\n      name\n      permissions\n    }\n    fieldErrors {\n      field\n      message\n    }\n    errors\n  }\n}\n    `;\nexport type UpdateRoleMutationFn = Apollo.MutationFunction<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>;\n\n/**\n * __useUpdateRoleMutation__\n *\n * To run a mutation, you first call `useUpdateRoleMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRoleMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRoleMutation, { data, loading, error }] = useUpdateRoleMutation({\n *   variables: {\n *      roleId: // value for 'roleId'\n *      permissionName: // value for 'permissionName'\n *      enabled: // value for 'enabled'\n *   },\n * });\n */\nexport function useUpdateRoleMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>(UpdateRoleDocument, options);\n      }\nexport type UpdateRoleMutationHookResult = ReturnType<typeof useUpdateRoleMutation>;\nexport type UpdateRoleMutationResult = Apollo.MutationResult<Operation.UpdateRoleMutation>;\nexport type UpdateRoleMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateRoleMutation, Operation.UpdateRoleMutationVariables>;\nexport const UpdateTicketAddonDocument = gql`\n    mutation UpdateTicketAddon($id: Int!, $attributes: ExtraInput!) {\n  updateExtra(input: {id: $id, attributes: $attributes}) {\n    errors\n    fieldErrors {\n      message\n      field\n    }\n    extra {\n      ...ticketTypeExtraDetailed\n    }\n  }\n}\n    ${TicketTypeExtraDetailedFragmentDoc}`;\nexport type UpdateTicketAddonMutationFn = Apollo.MutationFunction<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>;\n\n/**\n * __useUpdateTicketAddonMutation__\n *\n * To run a mutation, you first call `useUpdateTicketAddonMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateTicketAddonMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateTicketAddonMutation, { data, loading, error }] = useUpdateTicketAddonMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateTicketAddonMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>(UpdateTicketAddonDocument, options);\n      }\nexport type UpdateTicketAddonMutationHookResult = ReturnType<typeof useUpdateTicketAddonMutation>;\nexport type UpdateTicketAddonMutationResult = Apollo.MutationResult<Operation.UpdateTicketAddonMutation>;\nexport type UpdateTicketAddonMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateTicketAddonMutation, Operation.UpdateTicketAddonMutationVariables>;\nexport const UpdateTicketTypeDocument = gql`\n    mutation UpdateTicketType($id: Int!, $attributes: TicketTypeInput!) {\n  updateTicketType(input: {id: $id, attributes: $attributes}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    ticketType {\n      ...ticketTypeEssentials\n      id\n      name\n      altitude\n      cost\n      allowManifestingSelf\n      extras {\n        id\n        name\n        cost\n      }\n      dropzone {\n        ...dropzoneEssentials\n        ticketTypes {\n          ...ticketTypeEssentials\n        }\n      }\n    }\n  }\n}\n    ${TicketTypeEssentialsFragmentDoc}\n${DropzoneEssentialsFragmentDoc}`;\nexport type UpdateTicketTypeMutationFn = Apollo.MutationFunction<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>;\n\n/**\n * __useUpdateTicketTypeMutation__\n *\n * To run a mutation, you first call `useUpdateTicketTypeMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateTicketTypeMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateTicketTypeMutation, { data, loading, error }] = useUpdateTicketTypeMutation({\n *   variables: {\n *      id: // value for 'id'\n *      attributes: // value for 'attributes'\n *   },\n * });\n */\nexport function useUpdateTicketTypeMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>(UpdateTicketTypeDocument, options);\n      }\nexport type UpdateTicketTypeMutationHookResult = ReturnType<typeof useUpdateTicketTypeMutation>;\nexport type UpdateTicketTypeMutationResult = Apollo.MutationResult<Operation.UpdateTicketTypeMutation>;\nexport type UpdateTicketTypeMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateTicketTypeMutation, Operation.UpdateTicketTypeMutationVariables>;\nexport const UpdateUserDocument = gql`\n    mutation UpdateUser($dropzoneUser: ID, $name: String, $phone: String, $email: String, $image: String, $pushToken: String, $nickname: String, $license: Int, $exitWeight: Float) {\n  updateUser(\n    input: {dropzoneUser: $dropzoneUser, attributes: {pushToken: $pushToken, name: $name, phone: $phone, email: $email, image: $image, nickname: $nickname, license: $license, exitWeight: $exitWeight}}\n  ) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\nexport type UpdateUserMutationFn = Apollo.MutationFunction<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>;\n\n/**\n * __useUpdateUserMutation__\n *\n * To run a mutation, you first call `useUpdateUserMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateUserMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateUserMutation, { data, loading, error }] = useUpdateUserMutation({\n *   variables: {\n *      dropzoneUser: // value for 'dropzoneUser'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      email: // value for 'email'\n *      image: // value for 'image'\n *      pushToken: // value for 'pushToken'\n *      nickname: // value for 'nickname'\n *      license: // value for 'license'\n *      exitWeight: // value for 'exitWeight'\n *   },\n * });\n */\nexport function useUpdateUserMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>(UpdateUserDocument, options);\n      }\nexport type UpdateUserMutationHookResult = ReturnType<typeof useUpdateUserMutation>;\nexport type UpdateUserMutationResult = Apollo.MutationResult<Operation.UpdateUserMutation>;\nexport type UpdateUserMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateUserMutation, Operation.UpdateUserMutationVariables>;\nexport const UpdateVisibilityDocument = gql`\n    mutation UpdateVisibility($dropzone: ID!, $event: DropzoneStateEvent!) {\n  updateVisibility(input: {dropzone: $dropzone, event: $event}) {\n    errors\n    fieldErrors {\n      field\n      message\n    }\n    dropzone {\n      ...dropzoneDetailed\n    }\n  }\n}\n    ${DropzoneDetailedFragmentDoc}`;\nexport type UpdateVisibilityMutationFn = Apollo.MutationFunction<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>;\n\n/**\n * __useUpdateVisibilityMutation__\n *\n * To run a mutation, you first call `useUpdateVisibilityMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateVisibilityMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateVisibilityMutation, { data, loading, error }] = useUpdateVisibilityMutation({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      event: // value for 'event'\n *   },\n * });\n */\nexport function useUpdateVisibilityMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>(UpdateVisibilityDocument, options);\n      }\nexport type UpdateVisibilityMutationHookResult = ReturnType<typeof useUpdateVisibilityMutation>;\nexport type UpdateVisibilityMutationResult = Apollo.MutationResult<Operation.UpdateVisibilityMutation>;\nexport type UpdateVisibilityMutationOptions = Apollo.BaseMutationOptions<Operation.UpdateVisibilityMutation, Operation.UpdateVisibilityMutationVariables>;\nexport const UserSignUpDocument = gql`\n    mutation UserSignUp($email: String!, $password: String!, $passwordConfirmation: String!, $name: String!, $phone: String!, $pushToken: String, $exitWeight: Float!, $licenseId: Int) {\n  userRegister(\n    email: $email\n    password: $password\n    passwordConfirmation: $passwordConfirmation\n    exitWeight: $exitWeight\n    name: $name\n    phone: $phone\n    pushToken: $pushToken\n    licenseId: $licenseId\n    confirmUrl: \"https://openmanifest.org/confirm/\"\n  ) {\n    fieldErrors {\n      field\n      message\n    }\n    errors\n    authenticatable {\n      createdAt\n      email\n      id\n      name\n      phone\n    }\n    credentials {\n      accessToken\n      tokenType\n      client\n      expiry\n      uid\n    }\n  }\n}\n    `;\nexport type UserSignUpMutationFn = Apollo.MutationFunction<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\n\n/**\n * __useUserSignUpMutation__\n *\n * To run a mutation, you first call `useUserSignUpMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUserSignUpMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [userSignUpMutation, { data, loading, error }] = useUserSignUpMutation({\n *   variables: {\n *      email: // value for 'email'\n *      password: // value for 'password'\n *      passwordConfirmation: // value for 'passwordConfirmation'\n *      name: // value for 'name'\n *      phone: // value for 'phone'\n *      pushToken: // value for 'pushToken'\n *      exitWeight: // value for 'exitWeight'\n *      licenseId: // value for 'licenseId'\n *   },\n * });\n */\nexport function useUserSignUpMutation(baseOptions?: Apollo.MutationHookOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useMutation<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>(UserSignUpDocument, options);\n      }\nexport type UserSignUpMutationHookResult = ReturnType<typeof useUserSignUpMutation>;\nexport type UserSignUpMutationResult = Apollo.MutationResult<Operation.UserSignUpMutation>;\nexport type UserSignUpMutationOptions = Apollo.BaseMutationOptions<Operation.UserSignUpMutation, Operation.UserSignUpMutationVariables>;\nexport const ActivityDocument = gql`\n    query Activity($dropzone: [ID!], $levels: [EventLevel!], $actions: [EventAction!], $accessLevels: [EventAccessLevel!], $timeRange: TimeRangeInput, $createdBy: [ID!]) {\n  activity(\n    dropzone: $dropzone\n    timeRange: $timeRange\n    accessLevels: $accessLevels\n    levels: $levels\n    actions: $actions\n    createdBy: $createdBy\n  ) {\n    edges {\n      node {\n        ...activityEssentials\n      }\n    }\n  }\n}\n    ${ActivityEssentialsFragmentDoc}`;\n\n/**\n * __useActivityQuery__\n *\n * To run a query within a React component, call `useActivityQuery` and pass it any options that fit your needs.\n * When your component renders, `useActivityQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useActivityQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      levels: // value for 'levels'\n *      actions: // value for 'actions'\n *      accessLevels: // value for 'accessLevels'\n *      timeRange: // value for 'timeRange'\n *      createdBy: // value for 'createdBy'\n *   },\n * });\n */\nexport function useActivityQuery(baseOptions?: Apollo.QueryHookOptions<Operation.ActivityQuery, Operation.ActivityQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.ActivityQuery, Operation.ActivityQueryVariables>(ActivityDocument, options);\n      }\nexport function useActivityLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.ActivityQuery, Operation.ActivityQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.ActivityQuery, Operation.ActivityQueryVariables>(ActivityDocument, options);\n        }\nexport type ActivityQueryHookResult = ReturnType<typeof useActivityQuery>;\nexport type ActivityLazyQueryHookResult = ReturnType<typeof useActivityLazyQuery>;\nexport type ActivityQueryResult = Apollo.QueryResult<Operation.ActivityQuery, Operation.ActivityQueryVariables>;\nexport const ActivityDetailsDocument = gql`\n    query ActivityDetails($dropzone: [ID!], $levels: [EventLevel!], $actions: [EventAction!], $accessLevels: [EventAccessLevel!], $timeRange: TimeRangeInput, $createdBy: [ID!], $after: String) {\n  activity(\n    dropzone: $dropzone\n    timeRange: $timeRange\n    accessLevels: $accessLevels\n    levels: $levels\n    actions: $actions\n    createdBy: $createdBy\n    after: $after\n  ) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    edges {\n      node {\n        ...activityDetails\n      }\n    }\n  }\n}\n    ${ActivityDetailsFragmentDoc}`;\n\n/**\n * __useActivityDetailsQuery__\n *\n * To run a query within a React component, call `useActivityDetailsQuery` and pass it any options that fit your needs.\n * When your component renders, `useActivityDetailsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useActivityDetailsQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      levels: // value for 'levels'\n *      actions: // value for 'actions'\n *      accessLevels: // value for 'accessLevels'\n *      timeRange: // value for 'timeRange'\n *      createdBy: // value for 'createdBy'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useActivityDetailsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>(ActivityDetailsDocument, options);\n      }\nexport function useActivityDetailsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>(ActivityDetailsDocument, options);\n        }\nexport type ActivityDetailsQueryHookResult = ReturnType<typeof useActivityDetailsQuery>;\nexport type ActivityDetailsLazyQueryHookResult = ReturnType<typeof useActivityDetailsLazyQuery>;\nexport type ActivityDetailsQueryResult = Apollo.QueryResult<Operation.ActivityDetailsQuery, Operation.ActivityDetailsQueryVariables>;\nexport const CurrentUserDocument = gql`\n    query CurrentUser {\n  currentUser {\n    ...currentUser\n  }\n}\n    ${CurrentUserFragmentDoc}`;\n\n/**\n * __useCurrentUserQuery__\n *\n * To run a query within a React component, call `useCurrentUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCurrentUserQuery(baseOptions?: Apollo.QueryHookOptions<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>(CurrentUserDocument, options);\n      }\nexport function useCurrentUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>(CurrentUserDocument, options);\n        }\nexport type CurrentUserQueryHookResult = ReturnType<typeof useCurrentUserQuery>;\nexport type CurrentUserLazyQueryHookResult = ReturnType<typeof useCurrentUserLazyQuery>;\nexport type CurrentUserQueryResult = Apollo.QueryResult<Operation.CurrentUserQuery, Operation.CurrentUserQueryVariables>;\nexport const DropzoneDocument = gql`\n    query Dropzone($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneExtensive\n  }\n}\n    ${DropzoneExtensiveFragmentDoc}`;\n\n/**\n * __useDropzoneQuery__\n *\n * To run a query within a React component, call `useDropzoneQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useDropzoneQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>(DropzoneDocument, options);\n      }\nexport function useDropzoneLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>(DropzoneDocument, options);\n        }\nexport type DropzoneQueryHookResult = ReturnType<typeof useDropzoneQuery>;\nexport type DropzoneLazyQueryHookResult = ReturnType<typeof useDropzoneLazyQuery>;\nexport type DropzoneQueryResult = Apollo.QueryResult<Operation.DropzoneQuery, Operation.DropzoneQueryVariables>;\nexport const DropzoneStatisticsDocument = gql`\n    query DropzoneStatistics($dropzoneId: ID!, $timeRange: TimeRangeInput) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneStatistics\n  }\n}\n    ${DropzoneStatisticsFragmentDoc}`;\n\n/**\n * __useDropzoneStatisticsQuery__\n *\n * To run a query within a React component, call `useDropzoneStatisticsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneStatisticsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneStatisticsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      timeRange: // value for 'timeRange'\n *   },\n * });\n */\nexport function useDropzoneStatisticsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>(DropzoneStatisticsDocument, options);\n      }\nexport function useDropzoneStatisticsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>(DropzoneStatisticsDocument, options);\n        }\nexport type DropzoneStatisticsQueryHookResult = ReturnType<typeof useDropzoneStatisticsQuery>;\nexport type DropzoneStatisticsLazyQueryHookResult = ReturnType<typeof useDropzoneStatisticsLazyQuery>;\nexport type DropzoneStatisticsQueryResult = Apollo.QueryResult<Operation.DropzoneStatisticsQuery, Operation.DropzoneStatisticsQueryVariables>;\nexport const DropzonesStatisticsDocument = gql`\n    query DropzonesStatistics($timeRange: TimeRangeInput, $after: String) {\n  dropzones(after: $after) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        ...dropzoneStatistics\n      }\n    }\n  }\n}\n    ${DropzoneStatisticsFragmentDoc}`;\n\n/**\n * __useDropzonesStatisticsQuery__\n *\n * To run a query within a React component, call `useDropzonesStatisticsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonesStatisticsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonesStatisticsQuery({\n *   variables: {\n *      timeRange: // value for 'timeRange'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzonesStatisticsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>(DropzonesStatisticsDocument, options);\n      }\nexport function useDropzonesStatisticsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>(DropzonesStatisticsDocument, options);\n        }\nexport type DropzonesStatisticsQueryHookResult = ReturnType<typeof useDropzonesStatisticsQuery>;\nexport type DropzonesStatisticsLazyQueryHookResult = ReturnType<typeof useDropzonesStatisticsLazyQuery>;\nexport type DropzonesStatisticsQueryResult = Apollo.QueryResult<Operation.DropzonesStatisticsQuery, Operation.DropzonesStatisticsQueryVariables>;\nexport const DropzoneRigsDocument = gql`\n    query DropzoneRigs($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    rigs {\n      ...rigEssentials\n    }\n  }\n}\n    ${RigEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneRigsQuery__\n *\n * To run a query within a React component, call `useDropzoneRigsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneRigsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneRigsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useDropzoneRigsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>(DropzoneRigsDocument, options);\n      }\nexport function useDropzoneRigsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>(DropzoneRigsDocument, options);\n        }\nexport type DropzoneRigsQueryHookResult = ReturnType<typeof useDropzoneRigsQuery>;\nexport type DropzoneRigsLazyQueryHookResult = ReturnType<typeof useDropzoneRigsLazyQuery>;\nexport type DropzoneRigsQueryResult = Apollo.QueryResult<Operation.DropzoneRigsQuery, Operation.DropzoneRigsQueryVariables>;\nexport const DropzonePermissionsDocument = gql`\n    query DropzonePermissions($id: ID!) {\n  dropzone(id: $id) {\n    ...dropzoneEssentials\n    roles {\n      ...roleDetailed\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}\n${RoleDetailedFragmentDoc}`;\n\n/**\n * __useDropzonePermissionsQuery__\n *\n * To run a query within a React component, call `useDropzonePermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonePermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonePermissionsQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzonePermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>(DropzonePermissionsDocument, options);\n      }\nexport function useDropzonePermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>(DropzonePermissionsDocument, options);\n        }\nexport type DropzonePermissionsQueryHookResult = ReturnType<typeof useDropzonePermissionsQuery>;\nexport type DropzonePermissionsLazyQueryHookResult = ReturnType<typeof useDropzonePermissionsLazyQuery>;\nexport type DropzonePermissionsQueryResult = Apollo.QueryResult<Operation.DropzonePermissionsQuery, Operation.DropzonePermissionsQueryVariables>;\nexport const DropzoneTransactionsDocument = gql`\n    query DropzoneTransactions($dropzoneId: ID!, $after: String) {\n  dropzone(id: $dropzoneId) {\n    ...dropzoneEssentials\n    orders(after: $after) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneTransactionsQuery__\n *\n * To run a query within a React component, call `useDropzoneTransactionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneTransactionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneTransactionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      after: // value for 'after'\n *   },\n * });\n */\nexport function useDropzoneTransactionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n      }\nexport function useDropzoneTransactionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>(DropzoneTransactionsDocument, options);\n        }\nexport type DropzoneTransactionsQueryHookResult = ReturnType<typeof useDropzoneTransactionsQuery>;\nexport type DropzoneTransactionsLazyQueryHookResult = ReturnType<typeof useDropzoneTransactionsLazyQuery>;\nexport type DropzoneTransactionsQueryResult = Apollo.QueryResult<Operation.DropzoneTransactionsQuery, Operation.DropzoneTransactionsQueryVariables>;\nexport const DropzoneUsersDocument = gql`\n    query DropzoneUsers($dropzoneId: ID!, $search: String, $permissions: [Permission!], $first: Int, $after: String, $licensed: Boolean) {\n  dropzoneUsers(\n    dropzone: $dropzoneId\n    licensed: $licensed\n    search: $search\n    permissions: $permissions\n    first: $first\n    after: $after\n  ) {\n    edges {\n      cursor\n      node {\n        ...dropzoneUserEssentials\n      }\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUsersQuery__\n *\n * To run a query within a React component, call `useDropzoneUsersQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUsersQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUsersQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      search: // value for 'search'\n *      permissions: // value for 'permissions'\n *      first: // value for 'first'\n *      after: // value for 'after'\n *      licensed: // value for 'licensed'\n *   },\n * });\n */\nexport function useDropzoneUsersQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>(DropzoneUsersDocument, options);\n      }\nexport function useDropzoneUsersLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>(DropzoneUsersDocument, options);\n        }\nexport type DropzoneUsersQueryHookResult = ReturnType<typeof useDropzoneUsersQuery>;\nexport type DropzoneUsersLazyQueryHookResult = ReturnType<typeof useDropzoneUsersLazyQuery>;\nexport type DropzoneUsersQueryResult = Apollo.QueryResult<Operation.DropzoneUsersQuery, Operation.DropzoneUsersQueryVariables>;\nexport const DropzoneUsersDetailedDocument = gql`\n    query DropzoneUsersDetailed($dropzoneId: ID!, $search: String, $permissions: [Permission!], $first: Int, $after: String, $licensed: Boolean) {\n  dropzoneUsers(\n    dropzone: $dropzoneId\n    licensed: $licensed\n    search: $search\n    permissions: $permissions\n    first: $first\n    after: $after\n  ) {\n    edges {\n      cursor\n      node {\n        ...dropzoneUserEssentials\n      }\n    }\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUsersDetailedQuery__\n *\n * To run a query within a React component, call `useDropzoneUsersDetailedQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUsersDetailedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUsersDetailedQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      search: // value for 'search'\n *      permissions: // value for 'permissions'\n *      first: // value for 'first'\n *      after: // value for 'after'\n *      licensed: // value for 'licensed'\n *   },\n * });\n */\nexport function useDropzoneUsersDetailedQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>(DropzoneUsersDetailedDocument, options);\n      }\nexport function useDropzoneUsersDetailedLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>(DropzoneUsersDetailedDocument, options);\n        }\nexport type DropzoneUsersDetailedQueryHookResult = ReturnType<typeof useDropzoneUsersDetailedQuery>;\nexport type DropzoneUsersDetailedLazyQueryHookResult = ReturnType<typeof useDropzoneUsersDetailedLazyQuery>;\nexport type DropzoneUsersDetailedQueryResult = Apollo.QueryResult<Operation.DropzoneUsersDetailedQuery, Operation.DropzoneUsersDetailedQueryVariables>;\nexport const DropzoneUserDocument = gql`\n    query DropzoneUser($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserEssentials\n  }\n}\n    ${DropzoneUserEssentialsFragmentDoc}`;\n\n/**\n * __useDropzoneUserQuery__\n *\n * To run a query within a React component, call `useDropzoneUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>(DropzoneUserDocument, options);\n      }\nexport function useDropzoneUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>(DropzoneUserDocument, options);\n        }\nexport type DropzoneUserQueryHookResult = ReturnType<typeof useDropzoneUserQuery>;\nexport type DropzoneUserLazyQueryHookResult = ReturnType<typeof useDropzoneUserLazyQuery>;\nexport type DropzoneUserQueryResult = Apollo.QueryResult<Operation.DropzoneUserQuery, Operation.DropzoneUserQueryVariables>;\nexport const DropzoneUserDetailedDocument = gql`\n    query DropzoneUserDetailed($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserDetails\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\n\n/**\n * __useDropzoneUserDetailedQuery__\n *\n * To run a query within a React component, call `useDropzoneUserDetailedQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserDetailedQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserDetailedQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserDetailedQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>(DropzoneUserDetailedDocument, options);\n      }\nexport function useDropzoneUserDetailedLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>(DropzoneUserDetailedDocument, options);\n        }\nexport type DropzoneUserDetailedQueryHookResult = ReturnType<typeof useDropzoneUserDetailedQuery>;\nexport type DropzoneUserDetailedLazyQueryHookResult = ReturnType<typeof useDropzoneUserDetailedLazyQuery>;\nexport type DropzoneUserDetailedQueryResult = Apollo.QueryResult<Operation.DropzoneUserDetailedQuery, Operation.DropzoneUserDetailedQueryVariables>;\nexport const DropzoneUserProfileDocument = gql`\n    query DropzoneUserProfile($id: ID!) {\n  dropzoneUser(id: $id) {\n    ...dropzoneUserProfile\n  }\n}\n    ${DropzoneUserProfileFragmentDoc}`;\n\n/**\n * __useDropzoneUserProfileQuery__\n *\n * To run a query within a React component, call `useDropzoneUserProfileQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzoneUserProfileQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzoneUserProfileQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useDropzoneUserProfileQuery(baseOptions: Apollo.QueryHookOptions<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>(DropzoneUserProfileDocument, options);\n      }\nexport function useDropzoneUserProfileLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>(DropzoneUserProfileDocument, options);\n        }\nexport type DropzoneUserProfileQueryHookResult = ReturnType<typeof useDropzoneUserProfileQuery>;\nexport type DropzoneUserProfileLazyQueryHookResult = ReturnType<typeof useDropzoneUserProfileLazyQuery>;\nexport type DropzoneUserProfileQueryResult = Apollo.QueryResult<Operation.DropzoneUserProfileQuery, Operation.DropzoneUserProfileQueryVariables>;\nexport const DropzonesDocument = gql`\n    query Dropzones($state: [DropzoneState!]) {\n  dropzones(state: $state) {\n    edges {\n      node {\n        ...dropzoneEssentials\n      }\n    }\n  }\n}\n    ${DropzoneEssentialsFragmentDoc}`;\n\n/**\n * __useDropzonesQuery__\n *\n * To run a query within a React component, call `useDropzonesQuery` and pass it any options that fit your needs.\n * When your component renders, `useDropzonesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useDropzonesQuery({\n *   variables: {\n *      state: // value for 'state'\n *   },\n * });\n */\nexport function useDropzonesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>(DropzonesDocument, options);\n      }\nexport function useDropzonesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>(DropzonesDocument, options);\n        }\nexport type DropzonesQueryHookResult = ReturnType<typeof useDropzonesQuery>;\nexport type DropzonesLazyQueryHookResult = ReturnType<typeof useDropzonesLazyQuery>;\nexport type DropzonesQueryResult = Apollo.QueryResult<Operation.DropzonesQuery, Operation.DropzonesQueryVariables>;\nexport const TicketTypeExtrasDocument = gql`\n    query TicketTypeExtras($dropzoneId: ID!) {\n  extras(dropzone: $dropzoneId) {\n    ...ticketTypeExtraDetailed\n  }\n}\n    ${TicketTypeExtraDetailedFragmentDoc}`;\n\n/**\n * __useTicketTypeExtrasQuery__\n *\n * To run a query within a React component, call `useTicketTypeExtrasQuery` and pass it any options that fit your needs.\n * When your component renders, `useTicketTypeExtrasQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTicketTypeExtrasQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useTicketTypeExtrasQuery(baseOptions: Apollo.QueryHookOptions<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>(TicketTypeExtrasDocument, options);\n      }\nexport function useTicketTypeExtrasLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>(TicketTypeExtrasDocument, options);\n        }\nexport type TicketTypeExtrasQueryHookResult = ReturnType<typeof useTicketTypeExtrasQuery>;\nexport type TicketTypeExtrasLazyQueryHookResult = ReturnType<typeof useTicketTypeExtrasLazyQuery>;\nexport type TicketTypeExtrasQueryResult = Apollo.QueryResult<Operation.TicketTypeExtrasQuery, Operation.TicketTypeExtrasQueryVariables>;\nexport const FederationsDocument = gql`\n    query Federations {\n  federations {\n    ...federationEssentials\n  }\n}\n    ${FederationEssentialsFragmentDoc}`;\n\n/**\n * __useFederationsQuery__\n *\n * To run a query within a React component, call `useFederationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useFederationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useFederationsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useFederationsQuery(baseOptions?: Apollo.QueryHookOptions<Operation.FederationsQuery, Operation.FederationsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.FederationsQuery, Operation.FederationsQueryVariables>(FederationsDocument, options);\n      }\nexport function useFederationsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.FederationsQuery, Operation.FederationsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.FederationsQuery, Operation.FederationsQueryVariables>(FederationsDocument, options);\n        }\nexport type FederationsQueryHookResult = ReturnType<typeof useFederationsQuery>;\nexport type FederationsLazyQueryHookResult = ReturnType<typeof useFederationsLazyQuery>;\nexport type FederationsQueryResult = Apollo.QueryResult<Operation.FederationsQuery, Operation.FederationsQueryVariables>;\nexport const AddressToLocationDocument = gql`\n    query AddressToLocation($search: String!) {\n  geocode(search: $search) {\n    formattedString\n    id\n    lat\n    lng\n  }\n}\n    `;\n\n/**\n * __useAddressToLocationQuery__\n *\n * To run a query within a React component, call `useAddressToLocationQuery` and pass it any options that fit your needs.\n * When your component renders, `useAddressToLocationQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAddressToLocationQuery({\n *   variables: {\n *      search: // value for 'search'\n *   },\n * });\n */\nexport function useAddressToLocationQuery(baseOptions: Apollo.QueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n      }\nexport function useAddressToLocationLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>(AddressToLocationDocument, options);\n        }\nexport type AddressToLocationQueryHookResult = ReturnType<typeof useAddressToLocationQuery>;\nexport type AddressToLocationLazyQueryHookResult = ReturnType<typeof useAddressToLocationLazyQuery>;\nexport type AddressToLocationQueryResult = Apollo.QueryResult<Operation.AddressToLocationQuery, Operation.AddressToLocationQueryVariables>;\nexport const JumpTypesDocument = gql`\n    query JumpTypes($allowedForDropzoneUserIds: [Int!]) {\n  jumpTypes(dropzoneUsers: $allowedForDropzoneUserIds) {\n    ...jumpTypeEssentials\n  }\n}\n    ${JumpTypeEssentialsFragmentDoc}`;\n\n/**\n * __useJumpTypesQuery__\n *\n * To run a query within a React component, call `useJumpTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useJumpTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useJumpTypesQuery({\n *   variables: {\n *      allowedForDropzoneUserIds: // value for 'allowedForDropzoneUserIds'\n *   },\n * });\n */\nexport function useJumpTypesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>(JumpTypesDocument, options);\n      }\nexport function useJumpTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>(JumpTypesDocument, options);\n        }\nexport type JumpTypesQueryHookResult = ReturnType<typeof useJumpTypesQuery>;\nexport type JumpTypesLazyQueryHookResult = ReturnType<typeof useJumpTypesLazyQuery>;\nexport type JumpTypesQueryResult = Apollo.QueryResult<Operation.JumpTypesQuery, Operation.JumpTypesQueryVariables>;\nexport const AllowedJumpTypesDocument = gql`\n    query AllowedJumpTypes($dropzoneId: ID!, $allowedForDropzoneUserIds: [Int!]!, $isPublic: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    allowedJumpTypes(userId: $allowedForDropzoneUserIds) {\n      ...jumpTypeEssentials\n    }\n    ticketTypes(isPublic: $isPublic) {\n      ...ticketTypeEssentials\n    }\n  }\n  jumpTypes {\n    ...jumpTypeEssentials\n  }\n}\n    ${JumpTypeEssentialsFragmentDoc}\n${TicketTypeEssentialsFragmentDoc}`;\n\n/**\n * __useAllowedJumpTypesQuery__\n *\n * To run a query within a React component, call `useAllowedJumpTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useAllowedJumpTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAllowedJumpTypesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      allowedForDropzoneUserIds: // value for 'allowedForDropzoneUserIds'\n *      isPublic: // value for 'isPublic'\n *   },\n * });\n */\nexport function useAllowedJumpTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>(AllowedJumpTypesDocument, options);\n      }\nexport function useAllowedJumpTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>(AllowedJumpTypesDocument, options);\n        }\nexport type AllowedJumpTypesQueryHookResult = ReturnType<typeof useAllowedJumpTypesQuery>;\nexport type AllowedJumpTypesLazyQueryHookResult = ReturnType<typeof useAllowedJumpTypesLazyQuery>;\nexport type AllowedJumpTypesQueryResult = Apollo.QueryResult<Operation.AllowedJumpTypesQuery, Operation.AllowedJumpTypesQueryVariables>;\nexport const LicensesDocument = gql`\n    query Licenses($federationId: Int) {\n  licenses(federationId: $federationId) {\n    ...licenseDetails\n  }\n}\n    ${LicenseDetailsFragmentDoc}`;\n\n/**\n * __useLicensesQuery__\n *\n * To run a query within a React component, call `useLicensesQuery` and pass it any options that fit your needs.\n * When your component renders, `useLicensesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLicensesQuery({\n *   variables: {\n *      federationId: // value for 'federationId'\n *   },\n * });\n */\nexport function useLicensesQuery(baseOptions?: Apollo.QueryHookOptions<Operation.LicensesQuery, Operation.LicensesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LicensesQuery, Operation.LicensesQueryVariables>(LicensesDocument, options);\n      }\nexport function useLicensesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LicensesQuery, Operation.LicensesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LicensesQuery, Operation.LicensesQueryVariables>(LicensesDocument, options);\n        }\nexport type LicensesQueryHookResult = ReturnType<typeof useLicensesQuery>;\nexport type LicensesLazyQueryHookResult = ReturnType<typeof useLicensesLazyQuery>;\nexport type LicensesQueryResult = Apollo.QueryResult<Operation.LicensesQuery, Operation.LicensesQueryVariables>;\nexport const LoadDocument = gql`\n    query Load($id: ID!) {\n  load(id: $id) {\n    ...loadDetails\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\n\n/**\n * __useLoadQuery__\n *\n * To run a query within a React component, call `useLoadQuery` and pass it any options that fit your needs.\n * When your component renders, `useLoadQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useLoadQuery(baseOptions: Apollo.QueryHookOptions<Operation.LoadQuery, Operation.LoadQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LoadQuery, Operation.LoadQueryVariables>(LoadDocument, options);\n      }\nexport function useLoadLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LoadQuery, Operation.LoadQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LoadQuery, Operation.LoadQueryVariables>(LoadDocument, options);\n        }\nexport type LoadQueryHookResult = ReturnType<typeof useLoadQuery>;\nexport type LoadLazyQueryHookResult = ReturnType<typeof useLoadLazyQuery>;\nexport type LoadQueryResult = Apollo.QueryResult<Operation.LoadQuery, Operation.LoadQueryVariables>;\nexport const LoadsDocument = gql`\n    query Loads($date: ISO8601Date, $dropzone: ID!) {\n  loads(date: $date, dropzone: $dropzone) {\n    edges {\n      node {\n        ...loadEssentials\n      }\n    }\n  }\n}\n    ${LoadEssentialsFragmentDoc}`;\n\n/**\n * __useLoadsQuery__\n *\n * To run a query within a React component, call `useLoadsQuery` and pass it any options that fit your needs.\n * When your component renders, `useLoadsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadsQuery({\n *   variables: {\n *      date: // value for 'date'\n *      dropzone: // value for 'dropzone'\n *   },\n * });\n */\nexport function useLoadsQuery(baseOptions: Apollo.QueryHookOptions<Operation.LoadsQuery, Operation.LoadsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.LoadsQuery, Operation.LoadsQueryVariables>(LoadsDocument, options);\n      }\nexport function useLoadsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.LoadsQuery, Operation.LoadsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.LoadsQuery, Operation.LoadsQueryVariables>(LoadsDocument, options);\n        }\nexport type LoadsQueryHookResult = ReturnType<typeof useLoadsQuery>;\nexport type LoadsLazyQueryHookResult = ReturnType<typeof useLoadsLazyQuery>;\nexport type LoadsQueryResult = Apollo.QueryResult<Operation.LoadsQuery, Operation.LoadsQueryVariables>;\nexport const MasterLogDocument = gql`\n    query MasterLog($dropzoneId: ID!, $date: ISO8601Date!) {\n  masterLog(dropzone: $dropzoneId, date: $date) {\n    ...masterLogEntry\n  }\n}\n    ${MasterLogEntryFragmentDoc}`;\n\n/**\n * __useMasterLogQuery__\n *\n * To run a query within a React component, call `useMasterLogQuery` and pass it any options that fit your needs.\n * When your component renders, `useMasterLogQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMasterLogQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      date: // value for 'date'\n *   },\n * });\n */\nexport function useMasterLogQuery(baseOptions: Apollo.QueryHookOptions<Operation.MasterLogQuery, Operation.MasterLogQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.MasterLogQuery, Operation.MasterLogQueryVariables>(MasterLogDocument, options);\n      }\nexport function useMasterLogLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.MasterLogQuery, Operation.MasterLogQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.MasterLogQuery, Operation.MasterLogQueryVariables>(MasterLogDocument, options);\n        }\nexport type MasterLogQueryHookResult = ReturnType<typeof useMasterLogQuery>;\nexport type MasterLogLazyQueryHookResult = ReturnType<typeof useMasterLogLazyQuery>;\nexport type MasterLogQueryResult = Apollo.QueryResult<Operation.MasterLogQuery, Operation.MasterLogQueryVariables>;\nexport const NotificationsDocument = gql`\n    query Notifications($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    currentUser {\n      id\n      notifications {\n        edges {\n          node {\n            id\n            message\n            notificationType\n            createdAt\n            sentBy {\n              id\n              user {\n                id\n                name\n              }\n            }\n            resource {\n              ... on Load {\n                ...loadEssentials\n              }\n              ... on Transaction {\n                id\n                amount\n                message\n                status\n              }\n              ... on Slot {\n                ...slotEssentials\n              }\n              ... on Rig {\n                ...rigEssentials\n                rigInspections(dropzoneId: $dropzoneId) {\n                  id\n                  createdAt\n                  inspectedBy {\n                    id\n                    user {\n                      id\n                      name\n                    }\n                  }\n                }\n              }\n              ... on RigInspection {\n                ...rigInspectionEssentials\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    ${LoadEssentialsFragmentDoc}\n${SlotEssentialsFragmentDoc}\n${RigEssentialsFragmentDoc}\n${RigInspectionEssentialsFragmentDoc}`;\n\n/**\n * __useNotificationsQuery__\n *\n * To run a query within a React component, call `useNotificationsQuery` and pass it any options that fit your needs.\n * When your component renders, `useNotificationsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useNotificationsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useNotificationsQuery(baseOptions: Apollo.QueryHookOptions<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>(NotificationsDocument, options);\n      }\nexport function useNotificationsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>(NotificationsDocument, options);\n        }\nexport type NotificationsQueryHookResult = ReturnType<typeof useNotificationsQuery>;\nexport type NotificationsLazyQueryHookResult = ReturnType<typeof useNotificationsLazyQuery>;\nexport type NotificationsQueryResult = Apollo.QueryResult<Operation.NotificationsQuery, Operation.NotificationsQueryVariables>;\nexport const PlanesDocument = gql`\n    query Planes($dropzoneId: ID!) {\n  planes(dropzone: $dropzoneId) {\n    ...planeEssentials\n  }\n}\n    ${PlaneEssentialsFragmentDoc}`;\n\n/**\n * __usePlanesQuery__\n *\n * To run a query within a React component, call `usePlanesQuery` and pass it any options that fit your needs.\n * When your component renders, `usePlanesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePlanesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function usePlanesQuery(baseOptions: Apollo.QueryHookOptions<Operation.PlanesQuery, Operation.PlanesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.PlanesQuery, Operation.PlanesQueryVariables>(PlanesDocument, options);\n      }\nexport function usePlanesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.PlanesQuery, Operation.PlanesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.PlanesQuery, Operation.PlanesQueryVariables>(PlanesDocument, options);\n        }\nexport type PlanesQueryHookResult = ReturnType<typeof usePlanesQuery>;\nexport type PlanesLazyQueryHookResult = ReturnType<typeof usePlanesLazyQuery>;\nexport type PlanesQueryResult = Apollo.QueryResult<Operation.PlanesQuery, Operation.PlanesQueryVariables>;\nexport const CurrentUserPermissionsDocument = gql`\n    query CurrentUserPermissions($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    name\n    primaryColor\n    secondaryColor\n    currentUser {\n      id\n      role {\n        ...roleEssentials\n      }\n      permissions\n    }\n  }\n}\n    ${RoleEssentialsFragmentDoc}`;\n\n/**\n * __useCurrentUserPermissionsQuery__\n *\n * To run a query within a React component, call `useCurrentUserPermissionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentUserPermissionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentUserPermissionsQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useCurrentUserPermissionsQuery(baseOptions: Apollo.QueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n      }\nexport function useCurrentUserPermissionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>(CurrentUserPermissionsDocument, options);\n        }\nexport type CurrentUserPermissionsQueryHookResult = ReturnType<typeof useCurrentUserPermissionsQuery>;\nexport type CurrentUserPermissionsLazyQueryHookResult = ReturnType<typeof useCurrentUserPermissionsLazyQuery>;\nexport type CurrentUserPermissionsQueryResult = Apollo.QueryResult<Operation.CurrentUserPermissionsQuery, Operation.CurrentUserPermissionsQueryVariables>;\nexport const RigInspectionTemplateDocument = gql`\n    query RigInspectionTemplate($dropzoneId: ID!) {\n  dropzone(id: $dropzoneId) {\n    id\n    rigInspectionTemplate {\n      id\n      name\n      definition\n    }\n  }\n}\n    `;\n\n/**\n * __useRigInspectionTemplateQuery__\n *\n * To run a query within a React component, call `useRigInspectionTemplateQuery` and pass it any options that fit your needs.\n * When your component renders, `useRigInspectionTemplateQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRigInspectionTemplateQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *   },\n * });\n */\nexport function useRigInspectionTemplateQuery(baseOptions: Apollo.QueryHookOptions<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>(RigInspectionTemplateDocument, options);\n      }\nexport function useRigInspectionTemplateLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>(RigInspectionTemplateDocument, options);\n        }\nexport type RigInspectionTemplateQueryHookResult = ReturnType<typeof useRigInspectionTemplateQuery>;\nexport type RigInspectionTemplateLazyQueryHookResult = ReturnType<typeof useRigInspectionTemplateLazyQuery>;\nexport type RigInspectionTemplateQueryResult = Apollo.QueryResult<Operation.RigInspectionTemplateQuery, Operation.RigInspectionTemplateQueryVariables>;\nexport const AvailableRigsDocument = gql`\n    query AvailableRigs($dropzoneUserId: Int!, $isTandem: Boolean, $loadId: Int) {\n  availableRigs(\n    dropzoneUser: $dropzoneUserId\n    isTandem: $isTandem\n    loadId: $loadId\n  ) {\n    ...userRigDetailed\n  }\n}\n    ${UserRigDetailedFragmentDoc}`;\n\n/**\n * __useAvailableRigsQuery__\n *\n * To run a query within a React component, call `useAvailableRigsQuery` and pass it any options that fit your needs.\n * When your component renders, `useAvailableRigsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAvailableRigsQuery({\n *   variables: {\n *      dropzoneUserId: // value for 'dropzoneUserId'\n *      isTandem: // value for 'isTandem'\n *      loadId: // value for 'loadId'\n *   },\n * });\n */\nexport function useAvailableRigsQuery(baseOptions: Apollo.QueryHookOptions<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>(AvailableRigsDocument, options);\n      }\nexport function useAvailableRigsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>(AvailableRigsDocument, options);\n        }\nexport type AvailableRigsQueryHookResult = ReturnType<typeof useAvailableRigsQuery>;\nexport type AvailableRigsLazyQueryHookResult = ReturnType<typeof useAvailableRigsLazyQuery>;\nexport type AvailableRigsQueryResult = Apollo.QueryResult<Operation.AvailableRigsQuery, Operation.AvailableRigsQueryVariables>;\nexport const RolesDocument = gql`\n    query Roles($dropzoneId: ID!, $selectable: Boolean) {\n  dropzone(id: $dropzoneId) {\n    id\n    roles(selectable: $selectable) {\n      ...roleDetailed\n    }\n  }\n}\n    ${RoleDetailedFragmentDoc}`;\n\n/**\n * __useRolesQuery__\n *\n * To run a query within a React component, call `useRolesQuery` and pass it any options that fit your needs.\n * When your component renders, `useRolesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useRolesQuery({\n *   variables: {\n *      dropzoneId: // value for 'dropzoneId'\n *      selectable: // value for 'selectable'\n *   },\n * });\n */\nexport function useRolesQuery(baseOptions: Apollo.QueryHookOptions<Operation.RolesQuery, Operation.RolesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.RolesQuery, Operation.RolesQueryVariables>(RolesDocument, options);\n      }\nexport function useRolesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.RolesQuery, Operation.RolesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.RolesQuery, Operation.RolesQueryVariables>(RolesDocument, options);\n        }\nexport type RolesQueryHookResult = ReturnType<typeof useRolesQuery>;\nexport type RolesLazyQueryHookResult = ReturnType<typeof useRolesLazyQuery>;\nexport type RolesQueryResult = Apollo.QueryResult<Operation.RolesQuery, Operation.RolesQueryVariables>;\nexport const AllowedTicketTypesDocument = gql`\n    query AllowedTicketTypes($dropzone: ID!, $onlyPublicTickets: Boolean) {\n  ticketTypes(dropzone: $dropzone, allowManifestingSelf: $onlyPublicTickets) {\n    ...ticketTypeDetails\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}`;\n\n/**\n * __useAllowedTicketTypesQuery__\n *\n * To run a query within a React component, call `useAllowedTicketTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useAllowedTicketTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useAllowedTicketTypesQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      onlyPublicTickets: // value for 'onlyPublicTickets'\n *   },\n * });\n */\nexport function useAllowedTicketTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>(AllowedTicketTypesDocument, options);\n      }\nexport function useAllowedTicketTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>(AllowedTicketTypesDocument, options);\n        }\nexport type AllowedTicketTypesQueryHookResult = ReturnType<typeof useAllowedTicketTypesQuery>;\nexport type AllowedTicketTypesLazyQueryHookResult = ReturnType<typeof useAllowedTicketTypesLazyQuery>;\nexport type AllowedTicketTypesQueryResult = Apollo.QueryResult<Operation.AllowedTicketTypesQuery, Operation.AllowedTicketTypesQueryVariables>;\nexport const TicketTypesDocument = gql`\n    query TicketTypes($dropzone: ID!, $allowManifestingSelf: Boolean) {\n  ticketTypes(dropzone: $dropzone, allowManifestingSelf: $allowManifestingSelf) {\n    ...ticketTypeDetails\n  }\n}\n    ${TicketTypeDetailsFragmentDoc}`;\n\n/**\n * __useTicketTypesQuery__\n *\n * To run a query within a React component, call `useTicketTypesQuery` and pass it any options that fit your needs.\n * When your component renders, `useTicketTypesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useTicketTypesQuery({\n *   variables: {\n *      dropzone: // value for 'dropzone'\n *      allowManifestingSelf: // value for 'allowManifestingSelf'\n *   },\n * });\n */\nexport function useTicketTypesQuery(baseOptions: Apollo.QueryHookOptions<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>(TicketTypesDocument, options);\n      }\nexport function useTicketTypesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>(TicketTypesDocument, options);\n        }\nexport type TicketTypesQueryHookResult = ReturnType<typeof useTicketTypesQuery>;\nexport type TicketTypesLazyQueryHookResult = ReturnType<typeof useTicketTypesLazyQuery>;\nexport type TicketTypesQueryResult = Apollo.QueryResult<Operation.TicketTypesQuery, Operation.TicketTypesQueryVariables>;\nexport const LoadUpdatedDocument = gql`\n    subscription LoadUpdated($id: ID!) {\n  loadUpdated(loadId: $id) {\n    load {\n      ...loadDetails\n    }\n  }\n}\n    ${LoadDetailsFragmentDoc}`;\n\n/**\n * __useLoadUpdatedSubscription__\n *\n * To run a query within a React component, call `useLoadUpdatedSubscription` and pass it any options that fit your needs.\n * When your component renders, `useLoadUpdatedSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLoadUpdatedSubscription({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useLoadUpdatedSubscription(baseOptions: Apollo.SubscriptionHookOptions<Operation.LoadUpdatedSubscription, Operation.LoadUpdatedSubscriptionVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useSubscription<Operation.LoadUpdatedSubscription, Operation.LoadUpdatedSubscriptionVariables>(LoadUpdatedDocument, options);\n      }\nexport type LoadUpdatedSubscriptionHookResult = ReturnType<typeof useLoadUpdatedSubscription>;\nexport type LoadUpdatedSubscriptionResult = Apollo.SubscriptionResult<Operation.LoadUpdatedSubscription>;\nexport const UserUpdatedDocument = gql`\n    subscription UserUpdated($id: ID!) {\n  userUpdated(dropzoneUserId: $id) {\n    dropzoneUser {\n      ...dropzoneUserDetails\n    }\n  }\n}\n    ${DropzoneUserDetailsFragmentDoc}`;\n\n/**\n * __useUserUpdatedSubscription__\n *\n * To run a query within a React component, call `useUserUpdatedSubscription` and pass it any options that fit your needs.\n * When your component renders, `useUserUpdatedSubscription` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useUserUpdatedSubscription({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useUserUpdatedSubscription(baseOptions: Apollo.SubscriptionHookOptions<Operation.UserUpdatedSubscription, Operation.UserUpdatedSubscriptionVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useSubscription<Operation.UserUpdatedSubscription, Operation.UserUpdatedSubscriptionVariables>(UserUpdatedDocument, options);\n      }\nexport type UserUpdatedSubscriptionHookResult = ReturnType<typeof useUserUpdatedSubscription>;\nexport type UserUpdatedSubscriptionResult = Apollo.SubscriptionResult<Operation.UserUpdatedSubscription>;","import * as React from 'react';\nimport { isEqual, noop } from 'lodash';\nimport { useAppSelector } from 'app/state';\nimport { useCurrentUserPermissionsLazyQuery, useDropzoneLazyQuery } from '../reflection';\nimport { CurrentUserPermissionsQueryVariables, DropzoneQueryVariables } from '../operations';\nimport { uninitializedHandler } from './factory';\n\nexport function useDropzone(vars: Partial<DropzoneQueryVariables>) {\n  const { authenticated } = useAppSelector((root) => root.global);\n  const variables: DropzoneQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzoneId) {\n      return {\n        dropzoneId: vars.dropzoneId,\n      };\n    }\n    return undefined;\n  }, [vars]);\n\n  const [getDropzone, query] = useDropzoneLazyQuery();\n  const permissionsVariables = React.useMemo(\n    () => ({ dropzoneId: variables?.dropzoneId }),\n    [variables?.dropzoneId]\n  );\n\n  const [getPermissions, permissions] = useCurrentUserPermissionsLazyQuery();\n\n  React.useEffect(() => {\n    if (authenticated && variables?.dropzoneId && !isEqual(variables, query.variables)) {\n      console.debug('[Context::Dropzone] Fetching dropzone', variables);\n      getDropzone({ variables });\n    }\n  }, [authenticated, getDropzone, query.variables, variables]);\n\n  React.useEffect(() => {\n    if (\n      authenticated &&\n      permissionsVariables?.dropzoneId &&\n      !isEqual(permissionsVariables, permissions.variables)\n    ) {\n      console.debug('[Context::Dropzone] Fetching user permissions', permissionsVariables);\n      getPermissions({ variables: permissionsVariables as CurrentUserPermissionsQueryVariables });\n    }\n  }, [\n    authenticated,\n    getDropzone,\n    getPermissions,\n    permissions.variables,\n    permissionsVariables,\n    query.variables,\n    variables,\n  ]);\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      permissions: permissions?.data?.dropzone?.currentUser?.permissions || [],\n      refetch: queryVariables?.dropzoneId ? refetch : noop,\n      fetchMore: queryVariables?.dropzoneId ? () => fetchMore({ variables }) : uninitializedHandler,\n      dropzone: data?.dropzone,\n      currentUser: data?.dropzone?.currentUser,\n    }),\n    [\n      variables,\n      loading,\n      called,\n      permissions?.data?.dropzone?.currentUser?.permissions,\n      refetch,\n      queryVariables?.dropzoneId,\n      fetchMore,\n      data?.dropzone,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport { useAppSignal } from 'app/components/app_signal';\nimport { isEqual } from 'lodash';\nimport {\n  useDropzonesLazyQuery,\n  useDropzonesQuery,\n  useUpdateVisibilityMutation,\n} from '../reflection';\nimport { DropzoneDetailedFragment, DropzonesQueryVariables } from '../operations';\nimport createCRUDContext, { uninitializedHandler, TMutationResponse } from './factory';\nimport { DropzoneStateEvent } from '../schema.d';\n\nexport default function useDropzones(vars: Partial<DropzonesQueryVariables>) {\n  const state = useAppSelector((root) => root.global);\n  const { authenticated } = state;\n  const variables: DropzonesQueryVariables = React.useMemo(\n    () => ({\n      state: vars?.state,\n    }),\n    [vars?.state]\n  );\n\n  const [getDropzones, query] = useDropzonesLazyQuery();\n\n  React.useEffect(() => {\n    if (authenticated && (!isEqual(variables, query.variables) || !query.called)) {\n      console.debug('[Context::Dropzones] Fetching dropzones', variables);\n      getDropzones({ variables });\n    }\n  }, [authenticated, getDropzones, query.called, query.variables, variables]);\n\n  const [updateVisibilityMutation] = useUpdateVisibilityMutation();\n  const { appSignal } = useAppSignal();\n\n  const updateVisibility = React.useCallback(\n    async function UpdateVisibility(\n      id: string,\n      event: DropzoneStateEvent\n    ): Promise<TMutationResponse<{ dropzone: DropzoneDetailedFragment }>> {\n      try {\n        const response = await updateVisibilityMutation({\n          variables: {\n            dropzone: id,\n            event,\n          },\n        });\n\n        if (response?.data?.updateVisibility?.dropzone?.id) {\n          return { dropzone: response.data.updateVisibility?.dropzone };\n        }\n        return {\n          error: response?.data?.updateVisibility?.errors?.[0],\n          fieldErrors: response?.data?.updateVisibility?.fieldErrors || undefined,\n        };\n      } catch (e) {\n        appSignal.sendError(e as Error);\n        return { error: 'You cant modify dropzone visibility' };\n      }\n    },\n    [appSignal, updateVisibilityMutation]\n  );\n\n  const { loading, fetchMore, refetch, data, called } = query;\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch,\n      fetchMore,\n      updateVisibility,\n      dropzones: data?.dropzones?.edges?.map((edge) => edge?.node),\n    }),\n    [called, data?.dropzones?.edges, fetchMore, loading, refetch, updateVisibility]\n  );\n}\n\nconst { Provider: DropzonesProvider, useContext: useDropzonesContext } = createCRUDContext(\n  useDropzones,\n  {\n    called: false,\n    loading: false,\n    dropzones: [],\n    updateVisibility: uninitializedHandler as never,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n  }\n);\n\nexport { DropzonesProvider, useDropzonesContext, useDropzones };\n","import { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { Permission } from '../api/schema.d';\n\nexport default function useRestriction(permission: Permission): boolean {\n  const {\n    dropzone: { permissions },\n  } = useDropzoneContext();\n\n  const check = permissions?.includes(permission as Permission) || false;\n  return check;\n}\n","import { DocumentNode, useMutation, MutationOptions, MutationHookOptions } from '@apollo/client';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport * as React from 'react';\nimport camelCase from 'lodash/camelCase';\nimport startCase from 'lodash/startCase';\nimport { FieldError, Mutation } from './schema.d';\n\nexport interface IAppMutation<Payload, InputType> {\n  loading: boolean;\n  mutate(\n    variables: InputType,\n    opts?: Omit<Partial<MutationOptions>, 'variables'> | undefined\n  ): Promise<Maybe<Payload>>;\n}\n\nexport interface IAppMutationProps<Payload> {\n  onSuccess(payload: Payload): void;\n  onError?(message: string): void;\n  onFieldError?(field: string, value: string): void;\n  mutation?: MutationHookOptions;\n}\n\nexport interface IFieldValidator<InputType> {\n  pattern?: RegExp;\n  callback?: (fields: InputType) => boolean;\n  message: string;\n}\n\nexport function isRequired(message: string) {\n  return {\n    message,\n    pattern: /.{1,}/,\n  };\n}\n\nexport function isEmail(message: string) {\n  return {\n    message,\n    pattern:\n      // eslint-disable-next-line max-len,no-useless-escape\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  };\n}\n\nexport function isNumeric(message: string) {\n  return {\n    message,\n    pattern: /^\\d+/,\n  };\n}\n\nexport function validates<T extends object>(\n  message: string,\n  callback: (inputVariables: T) => boolean\n) {\n  return {\n    message,\n    callback,\n  };\n}\n\nexport function createMutation<\n  InputType extends object,\n  Payload extends {\n    fieldErrors?: Maybe<FieldError[]>;\n    errors?: Maybe<string[]>;\n  } | null\n>(\n  mutation: DocumentNode,\n  options: {\n    // Get payload from root field in mutation\n    getPayload: (rootField: { [K in keyof Mutation]: Maybe<Payload> }) => Maybe<Payload>;\n    fieldErrorMap?: {\n      // Map serverFieldName: tsFieldName\n      [K in keyof InputType]?: string;\n    };\n\n    // All validators patterns must be truthy before\n    // mutation will be executed, or onFieldError will fire\n    validates?: {\n      [Key in keyof InputType]?: IFieldValidator<InputType>[];\n    };\n  }\n) {\n  const { getPayload, fieldErrorMap, validates: validators } = options;\n\n  return function useAppMutation(\n    opts: IAppMutationProps<Payload>\n  ): IAppMutation<Payload, InputType> {\n    const { onFieldError, onSuccess, onError } = opts;\n\n    const [mutate, { loading }] = useMutation(mutation, opts.mutation);\n\n    const raiseFieldError = React.useCallback(\n      (field: string, message: string | string[]) => {\n        const camelizedField = camelCase(field);\n        const fieldName =\n          fieldErrorMap && camelizedField in fieldErrorMap\n            ? fieldErrorMap[field as keyof InputType]\n            : field;\n\n        const [msg] = [message].flat();\n        onFieldError?.(`${fieldName}`, `${startCase(fieldName)} ${msg}`);\n      },\n      [onFieldError]\n    );\n\n    const onMutate = React.useCallback(\n      async (\n        variables: InputType,\n        mopts?: Omit<MutationOptions, 'variables'> | undefined\n      ): Promise<Maybe<Payload>> => {\n        function validate() {\n          let hasErrors = false;\n\n          if (validators) {\n            Object.keys(variables).forEach((x) => {\n              const variable = x as keyof InputType;\n\n              if (variable in (options.validates || {})) {\n                validators[variable]?.forEach((validator) => {\n                  if (validator.pattern) {\n                    if (!validator.pattern.test(`${variables[variable] || ''}`)) {\n                      hasErrors = true;\n\n                      raiseFieldError(variable as string, validator.message);\n                    }\n                  } else if (validator.callback && !validator.callback(variables)) {\n                    hasErrors = true;\n                    raiseFieldError(variable as string, validator.message);\n                  } else {\n                    console.log(`Validator had no callback or pattern for ${variable as string}`);\n                  }\n                });\n              }\n            });\n          }\n\n          return !hasErrors;\n        }\n\n        if (!validate()) {\n          return undefined;\n        }\n        try {\n          const result = await mutate({\n            variables,\n            ...mopts,\n          });\n\n          const payload = getPayload(result.data);\n\n          payload?.fieldErrors?.forEach(({ field, message }) => {\n            raiseFieldError(field, message);\n          });\n\n          if (payload?.errors?.length && onError) {\n            payload.errors?.map((message) => onError(message));\n            return undefined;\n          }\n          if (!payload?.fieldErrors?.length && payload) {\n            requestAnimationFrame(() => onSuccess(payload));\n          }\n          return payload;\n        } catch (err) {\n          if (err instanceof Error) {\n            onError?.(err.message);\n          }\n        }\n        return undefined;\n      },\n      [raiseFieldError, mutate, onError, onSuccess]\n    );\n\n    return {\n      loading,\n      mutate: onMutate,\n    };\n  };\n}\n","import { createMutation } from '../createMutation';\nimport { LoadInput, UpdateLoadPayload } from '../schema.d';\nimport { UpdateLoadDocument } from '../reflection';\n\nexport default createMutation<{ id: number } & LoadInput, UpdateLoadPayload>(UpdateLoadDocument, {\n  getPayload: (result) => result.updateLoad,\n});\n","import * as React from 'react';\nimport { isEqual, noop } from 'lodash';\nimport { DateTime } from 'luxon';\nimport useRestriction from 'app/hooks/useRestriction';\nimport * as yup from 'yup';\nimport { ValidationError } from 'yup';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useAppSelector } from 'app/state';\nimport {\n  LoadUpdatedDocument,\n  useFinalizeLoadMutation,\n  useLoadLazyQuery,\n  useManifestUserMutation,\n} from '../reflection';\nimport { LoadQueryVariables } from '../operations';\nimport { uninitializedHandler } from './factory';\nimport { CreateSlotPayload, LoadState, Permission } from '../schema.d';\nimport useMutationUpdateLoad from '../hooks/useMutationUpdateLoad';\n\nexport function useLoad(variables: Partial<LoadQueryVariables>) {\n  const { authenticated } = useAppSelector((root) => root.global);\n  const notify = useNotifications();\n  const [getLoad, query] = useLoadLazyQuery();\n\n  React.useEffect(() => {\n    if (authenticated && variables?.id && !isEqual(variables, query.variables)) {\n      console.debug('[Context::Load] Fetching load', variables);\n      getLoad({ variables: variables as LoadQueryVariables });\n    }\n  }, [authenticated, getLoad, query.variables, variables]);\n\n  const refetch = React.useCallback(() => {\n    if (variables?.id) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const { loading, fetchMore, data, called, variables: queryVariables, subscribeToMore } = query;\n  const load = React.useMemo(() => data?.load, [data?.load]);\n\n  const [mutationManifestUser] = useManifestUserMutation();\n  const [mutationFinalizeLoad] = useFinalizeLoadMutation();\n\n  // Subscribe to updates over websockets\n  React.useEffect(() => {\n    if (!authenticated || !data?.load?.id) {\n      return undefined;\n    }\n    console.debug('[Apollo::Subscriptions::Load] Subscribed to updates for load', data?.load?.id);\n    const unsubscribe = subscribeToMore({\n      document: LoadUpdatedDocument,\n      variables: { id: data?.load?.id },\n      onError: console.error,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData?.data?.load?.id) {\n          return prev;\n        }\n        console.debug('[Apollo::Subscriptions::Load] Received update', subscriptionData.data.load);\n        return {\n          ...prev,\n          load: {\n            ...(prev?.load || {}),\n            ...subscriptionData.data.load,\n          },\n        };\n      },\n    });\n\n    return () => {\n      console.debug('[Apollo::Subscriptions::Load] Unsubscribing');\n      unsubscribe();\n    };\n  }, [data?.load?.id, subscribeToMore, authenticated]);\n\n  const update = useMutationUpdateLoad({\n    onSuccess: () => notify.success(`Load #${load?.loadNumber} updated`),\n    onError: (message) => notify.error(message),\n  });\n\n  const manifestUser = React.useCallback(\n    async (payload: Omit<CreateSlotPayload, 'loadId'>) => {\n      if (load?.id) {\n        return undefined;\n      }\n      const schema = yup.object().shape({\n        dropzoneUser: yup.string().required(),\n        exitWeight: yup.number().nullable(),\n        groupNumber: yup.number().nullable(),\n        passengerExitWeight: yup.number().nullable(),\n        passengerName: yup.string().nullable(),\n        rig: yup.string().nullable(),\n        ticketType: yup.string().required('You must select a ticket type'),\n        jumpType: yup.string().required('You must specify the type of jump'),\n      });\n      const validatedPayload = schema.validateSync(payload);\n      const response = await mutationManifestUser({\n        variables: {\n          load: load?.id,\n          ...validatedPayload,\n        },\n      });\n\n      if (response?.data?.createSlot?.fieldErrors?.length) {\n        throw new ValidationError(\n          response?.data?.createSlot?.fieldErrors?.map(\n            ({ field, message }) => new ValidationError([], message, field)\n          )\n        );\n      }\n      return response?.data?.createSlot?.slot;\n    },\n    [load?.id, mutationManifestUser]\n  );\n\n  const dispatchInMinutes = React.useCallback(\n    async (minutes: number | null) => {\n      if (!load) {\n        return;\n      }\n      const dispatchTime = !minutes ? null : DateTime.local().plus({ minutes }).toISO();\n\n      await update.mutate({\n        id: Number(load?.id),\n        dispatchAt: dispatchTime,\n        state: dispatchTime ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [load, update]\n  );\n\n  const updateLoadState = React.useCallback(\n    async (state: LoadState) => {\n      if (!load) {\n        return;\n      }\n      await update.mutate({\n        id: Number(load?.id),\n        state,\n        dispatchAt: null,\n      });\n    },\n    [update, load]\n  );\n\n  const updatePilot = React.useCallback(\n    async (pilot: { id: string | number }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        pilot: Number(pilot.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const updateGCA = React.useCallback(\n    async (gca: { id: number | string }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        gca: Number(gca.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const updatePlane = React.useCallback(\n    async (plane: { id: string | number; maxSlots: number }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        plane: Number(plane.id),\n      });\n    },\n    [load?.id, update]\n  );\n\n  const updateLoadMaster = React.useCallback(\n    async (lm: { id: number | string }) => {\n      await update.mutate({\n        id: Number(load?.id),\n        loadMaster: Number(lm.id),\n      });\n    },\n    [update, load?.id]\n  );\n\n  const markAsLanded = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: {\n        id: Number(load?.id),\n        state: LoadState.Landed,\n      },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const cancel = React.useCallback(async () => {\n    await mutationFinalizeLoad({\n      variables: { id: Number(load?.id), state: LoadState.Cancelled },\n    });\n  }, [mutationFinalizeLoad, load]);\n\n  const canDispatchAircraft = useRestriction(Permission.UpdateLoad);\n\n  const createAircraftDispatchAction = React.useCallback(\n    (minutes: number | null) => () => dispatchInMinutes(minutes),\n    [dispatchInMinutes]\n  );\n\n  const dispatchAtTime = React.useCallback(\n    async (time: number | null) => {\n      if (!load || !time) {\n        return;\n      }\n      await update.mutate({\n        id: Number(load?.id),\n        dispatchAt: DateTime.fromSeconds(time).toISO(),\n        state: time ? LoadState.BoardingCall : LoadState.Open,\n      });\n    },\n    [load, update]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      update,\n      updatePilot,\n      updateGCA,\n      updatePlane,\n      updateLoadMaster,\n      manifestUser,\n      cancel,\n      refetch: queryVariables?.id ? refetch : noop,\n      fetchMore: queryVariables?.id ? () => fetchMore({ variables }) : uninitializedHandler,\n      load: data?.load,\n      dispatchAtTime,\n      dispatchInMinutes,\n      updateLoadState,\n      createAircraftDispatchAction,\n      canDispatchAircraft,\n      markAsLanded,\n    }),\n    [\n      loading,\n      called,\n      update,\n      updatePilot,\n      updateGCA,\n      updatePlane,\n      updateLoadMaster,\n      manifestUser,\n      cancel,\n      queryVariables?.id,\n      refetch,\n      data?.load,\n      dispatchAtTime,\n      dispatchInMinutes,\n      updateLoadState,\n      createAircraftDispatchAction,\n      canDispatchAircraft,\n      markAsLanded,\n      fetchMore,\n      variables,\n    ]\n  );\n}\n","import { useAppSignal } from 'app/components/app_signal';\nimport useRestriction from 'app/hooks/useRestriction';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from 'app/state';\nimport {\n  CreateOrderMutationVariables,\n  DropzoneUserEssentialsFragment,\n  DropzoneUserProfileFragment,\n  DropzoneUserQueryVariables,\n  OrderEssentialsFragment,\n  UpdateDropzoneUserMutationVariables,\n  UserEssentialsFragment,\n} from '../operations';\nimport {\n  DropzoneUserProfileDocument,\n  DropzoneUserProfileFragmentDoc,\n  DropzoneUsersDocument,\n  useCreateGhostMutation,\n  useCreateOrderMutation,\n  useDropzoneUserProfileLazyQuery,\n  useGrantPermissionMutation,\n  useRevokePermissionMutation,\n  UserUpdatedDocument,\n  useUpdateDropzoneUserMutation,\n} from '../reflection';\nimport { GhostInput, Permission } from '../schema.d';\nimport createCRUDContext, { TMutationResponse, uninitializedHandler } from './factory';\n\nfunction useUserProfile(variables?: Partial<DropzoneUserQueryVariables>) {\n  const { authenticated } = useAppSelector((root) => root.global);\n  const { id } = variables || {};\n  const [updateMutation] = useUpdateDropzoneUserMutation();\n  const [getProfile, query] = useDropzoneUserProfileLazyQuery();\n  const [mutationCreateOrder] = useCreateOrderMutation();\n  const [mutationCreateGhost] = useCreateGhostMutation();\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { appSignal } = useAppSignal();\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n  const canRevokePermission = useRestriction(Permission.RevokePermission);\n\n  const { subscribeToMore } = query;\n  const profile = React.useMemo(() => query?.data?.dropzoneUser, [query?.data?.dropzoneUser]);\n\n  React.useEffect(() => {\n    if (authenticated && id && id !== query?.variables?.id) {\n      getProfile({ variables: { id } });\n    }\n  }, [authenticated, getProfile, id, query?.variables?.id]);\n\n  // Subscribe to updates over websockets\n  React.useEffect(() => {\n    if (!profile?.id) {\n      return undefined;\n    }\n    const unsubscribe = subscribeToMore({\n      document: UserUpdatedDocument,\n      variables: { id: profile?.id },\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData?.data?.dropzoneUser?.id) {\n          return prev;\n        }\n        console.debug('[Apollo::Subscription::UpdateUser]: Received update', subscriptionData);\n        return {\n          ...prev,\n          dropzoneUser: {\n            ...(prev?.dropzoneUser || {}),\n            ...subscriptionData.data.dropzoneUser,\n          },\n        };\n      },\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [profile?.id, subscribeToMore]);\n\n  const create = React.useCallback(\n    async function CreateGhost(\n      attributes: GhostInput\n    ): Promise<TMutationResponse<{ user: UserEssentialsFragment }>> {\n      try {\n        const response = await mutationCreateGhost({\n          variables: attributes,\n          refetchQueries: [\n            DropzoneUsersDocument,\n            { query: DropzoneUsersDocument, variables: { dropzoneId: dropzone?.id } },\n          ],\n        });\n\n        if (response?.data?.createGhost?.user?.id) {\n          return { user: response?.data?.createGhost?.user };\n        }\n        return {\n          error: response?.data?.createGhost?.errors?.[0],\n          fieldErrors: response?.data?.createGhost?.fieldErrors || undefined,\n        };\n      } catch (error) {\n        console.debug('CreateGhost failed', error);\n        if (error instanceof Error) {\n          appSignal?.sendError(error);\n        }\n        return { error: 'Oh no, something went wrong' };\n      }\n    },\n    [appSignal, dropzone?.id, mutationCreateGhost]\n  );\n  const update = React.useCallback(\n    async function UpdateDropzoneUser(\n      attributes: UpdateDropzoneUserMutationVariables\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      const { data } = await updateMutation({\n        variables: {\n          ...attributes,\n        },\n      });\n\n      if (data?.updateDropzoneUser?.dropzoneUser?.id) {\n        return { dropzoneUser: data?.updateDropzoneUser?.dropzoneUser };\n      }\n\n      return {\n        error: data?.updateDropzoneUser?.errors?.[0],\n        fieldErrors: data?.updateDropzoneUser?.fieldErrors || undefined,\n      };\n    },\n    [updateMutation]\n  );\n\n  const createOrder = React.useCallback(\n    async function CreateOrder(\n      attributes: CreateOrderMutationVariables\n    ): Promise<TMutationResponse<{ order: OrderEssentialsFragment }>> {\n      try {\n        const { data } = await mutationCreateOrder({\n          variables: {\n            ...attributes,\n          },\n          update: (cache, { data: mutationResult }) => {\n            if (mutationResult?.createOrder?.order?.id) {\n              const { order } = mutationResult.createOrder;\n\n              if (order.buyer.__typename === 'DropzoneUser') {\n                // Deduct credits\n                cache.writeFragment({\n                  fragment: DropzoneUserProfileFragmentDoc,\n                  fragmentName: 'dropzoneUserProfile',\n                  id: cache.identify(order.buyer),\n                  data: order.buyer,\n                });\n              } else if (order.seller.__typename === 'DropzoneUser') {\n                // Add credits\n                cache.writeFragment({\n                  fragment: DropzoneUserProfileFragmentDoc,\n                  fragmentName: 'dropzoneUserProfile',\n                  id: cache.identify(order.seller),\n                  data: order.seller,\n                });\n              }\n            }\n          },\n        });\n        if (data?.createOrder?.order?.id) {\n          return { order: data?.createOrder?.order };\n        }\n\n        return {\n          error: data?.createOrder?.errors?.[0],\n          fieldErrors: data?.createOrder?.fieldErrors || undefined,\n        };\n      } catch (error) {\n        appSignal.sendError(error as Error);\n        return { error: 'Something went wrong' };\n      }\n    },\n    [appSignal, mutationCreateOrder]\n  );\n\n  const addCredits = React.useCallback(\n    async function AddCredits(\n      dropzoneUser: DropzoneUserEssentialsFragment,\n      { amount, message }: { amount: number; message?: string | null }\n    ): ReturnType<typeof createOrder> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      return createOrder({\n        amount,\n        title: message || `Added funds`,\n        seller: dropzoneUser.walletId,\n        buyer: dropzone.walletId,\n        dropzone: dropzone.id,\n      });\n    },\n    [createOrder, dropzone]\n  );\n\n  const withdrawCredits = React.useCallback(\n    async function DeductCredits(\n      dropzoneUser: DropzoneUserEssentialsFragment,\n      { amount, message }: { amount: number; message?: string | null }\n    ): ReturnType<typeof createOrder> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      return createOrder({\n        amount,\n        title: message || `Withdrew funds`,\n        buyer: dropzoneUser.walletId,\n        seller: dropzone.walletId,\n        dropzone: dropzone.id,\n      });\n    },\n    [createOrder, dropzone]\n  );\n\n  const [revoke] = useRevokePermissionMutation();\n  const [grant] = useGrantPermissionMutation();\n\n  const grantPermission = React.useCallback(\n    async function GrantPermission(\n      dropzoneUserId: string,\n      permissionName: Permission\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      if (!canGrantPermission) {\n        return { error: 'You cannot grant permissions' };\n      }\n      const { data } = await grant({\n        variables: {\n          dropzoneUserId,\n          permissionName,\n        },\n        refetchQueries: [\n          {\n            query: DropzoneUsersDocument,\n            variables: { dropzoneId: dropzone?.id, permissions: [permissionName] },\n          },\n          {\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneUserId,\n            },\n          },\n        ],\n      });\n\n      if (data?.grantPermission?.dropzoneUser?.id) {\n        return {\n          dropzoneUser: data?.grantPermission?.dropzoneUser,\n        };\n      }\n      return {\n        error: data?.grantPermission?.errors?.[0],\n        fieldErrors: data?.grantPermission?.fieldErrors || undefined,\n      };\n    },\n    [canGrantPermission, dropzone?.id, grant]\n  );\n\n  const revokePermission = React.useCallback(\n    async function RevokePermission(\n      dropzoneUserId: string,\n      permissionName: Permission\n    ): Promise<TMutationResponse<{ dropzoneUser: DropzoneUserProfileFragment }>> {\n      if (!canRevokePermission) {\n        return { error: 'You cannot revoke permissions' };\n      }\n      const { data } = await revoke({\n        variables: {\n          dropzoneUserId,\n          permissionName,\n        },\n        refetchQueries: [\n          {\n            query: DropzoneUsersDocument,\n            variables: { dropzoneId: dropzone?.id, permissions: [permissionName] },\n          },\n          {\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneUserId,\n            },\n          },\n        ],\n      });\n\n      if (data?.revokePermission?.dropzoneUser?.id) {\n        return {\n          dropzoneUser: data?.revokePermission?.dropzoneUser,\n        };\n      }\n      return {\n        error: data?.revokePermission?.errors?.[0],\n        fieldErrors: data?.revokePermission?.fieldErrors || undefined,\n      };\n    },\n    [canRevokePermission, dropzone?.id, revoke]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading: query?.loading,\n      dropzoneUser: query?.data?.dropzoneUser,\n      refetch: query?.refetch,\n      create,\n      update,\n      addCredits,\n      grantPermission,\n      revokePermission,\n      withdrawCredits,\n    }),\n    [\n      addCredits,\n      grantPermission,\n      query?.refetch,\n      create,\n      query?.data?.dropzoneUser,\n      query?.loading,\n      revokePermission,\n      update,\n      withdrawCredits,\n    ]\n  );\n}\n\nconst { Provider: UserProfileProvider, useContext: useUserProfileContext } = createCRUDContext(\n  useUserProfile,\n  {\n    loading: false,\n    dropzoneUser: null,\n    refetch: uninitializedHandler as never,\n    update: uninitializedHandler as never,\n    create: uninitializedHandler as never,\n    addCredits: uninitializedHandler as never,\n    withdrawCredits: uninitializedHandler as never,\n    grantPermission: uninitializedHandler as never,\n    revokePermission: uninitializedHandler as never,\n  }\n);\n\nexport { UserProfileProvider, useUserProfileContext, useUserProfile };\n","import * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport { DateTime } from 'luxon';\nimport useRestriction from 'app/hooks/useRestriction';\nimport {\n  useLoadsQuery,\n  useManifestGroupMutation,\n  useManifestUserMutation,\n  useMoveSlotMutation,\n  useDeleteSlotMutation,\n  useCreateLoadMutation,\n  LoadDocument,\n} from '../reflection';\nimport {\n  CreateLoadMutationVariables,\n  DeleteSlotMutationVariables,\n  LoadDetailsFragment,\n  LoadsQueryVariables,\n  ManifestGroupMutationVariables,\n  ManifestUserMutationVariables,\n  MoveSlotMutationVariables,\n  SlotExhaustiveFragment,\n} from '../operations';\nimport { TMutationResponse } from './factory';\nimport { Permission } from '../schema.d';\n\nexport type UseManifestOptions = Partial<LoadsQueryVariables>;\n\nexport default function useManifest({ dropzone, date }: UseManifestOptions) {\n  const state = useAppSelector((root) => root.global);\n\n  const canCreateLoad = useRestriction(Permission.CreateLoad);\n  const canDeleteOwnSlot = useRestriction(Permission.DeleteSlot);\n  const canDeleteSlot = useRestriction(Permission.DeleteUserSlot);\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const canUpdateSlot = useRestriction(Permission.UpdateSlot);\n  const canUpdateOwnSlot = useRestriction(Permission.UpdateUserSlot);\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const permissions = React.useMemo(\n    () => ({\n      canAddTransaction,\n      canCreateLoad,\n      canDeleteOwnSlot,\n      canDeleteSlot,\n      canManifestSelf,\n      canManifestOthers,\n      canUpdateSlot,\n      canUpdateOwnSlot,\n    }),\n    [\n      canAddTransaction,\n      canCreateLoad,\n      canDeleteOwnSlot,\n      canDeleteSlot,\n      canManifestOthers,\n      canManifestSelf,\n      canUpdateOwnSlot,\n      canUpdateSlot,\n    ]\n  );\n\n  const variables: LoadsQueryVariables | undefined = React.useMemo(() => {\n    if (!dropzone) {\n      return undefined;\n    }\n    return {\n      dropzone,\n      date: date || DateTime.utc().toISODate(),\n    };\n  }, [date, dropzone]);\n\n  const query = useLoadsQuery({\n    initialFetchPolicy: 'cache-first',\n    variables,\n    skip: !state?.credentials?.accessToken || !dropzone,\n  });\n\n  const [moveSlotMutation] = useMoveSlotMutation();\n  const [deleteSlotMutation] = useDeleteSlotMutation();\n  const [manifestGroupMutation] = useManifestGroupMutation();\n  const [manifestUserMutation] = useManifestUserMutation();\n  const [createLoadMutation] = useCreateLoadMutation();\n\n  const { loading, fetchMore, refetch, data, called, updateQuery } = query;\n\n  const moveSlot = React.useCallback(\n    async function MoveSlot(\n      sourceLoad: string,\n      mutationVariables: MoveSlotMutationVariables\n    ): Promise<TMutationResponse<{ loads: LoadDetailsFragment[] }>> {\n      const result = await moveSlotMutation({\n        variables: mutationVariables,\n        refetchQueries: [\n          { query: LoadDocument, variables: { id: sourceLoad } },\n          { query: LoadDocument, variables: { id: mutationVariables?.targetLoad?.toString() } },\n        ],\n      });\n\n      if (result?.data?.moveSlot?.fieldErrors?.length || result?.data?.moveSlot?.errors?.length) {\n        return {\n          error: result?.data?.moveSlot?.errors?.[0],\n          fieldErrors: result?.data?.moveSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.moveSlot?.loads) {\n        return {\n          loads: result.data.moveSlot.loads,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [moveSlotMutation]\n  );\n\n  const manifestUser = React.useCallback(\n    async function ManifestUser(\n      mutationVariables: ManifestUserMutationVariables\n    ): Promise<TMutationResponse<{ slot: SlotExhaustiveFragment }>> {\n      const result = await manifestUserMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createSlot?.fieldErrors?.length ||\n        result?.data?.createSlot?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createSlot?.errors?.[0],\n          fieldErrors: result?.data?.createSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.createSlot?.slot) {\n        return {\n          slot: result.data.createSlot.slot,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [manifestUserMutation]\n  );\n\n  const manifestGroup = React.useCallback(\n    async function ManifestGroup(\n      mutationVariables: ManifestGroupMutationVariables\n    ): Promise<TMutationResponse<{ load: LoadDetailsFragment }>> {\n      const result = await manifestGroupMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createSlots?.fieldErrors?.length ||\n        result?.data?.createSlots?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createSlots?.errors?.[0],\n          fieldErrors: result?.data?.createSlots?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.createSlots?.load?.id) {\n        return {\n          load: result.data.createSlots.load,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [manifestGroupMutation]\n  );\n\n  const deleteSlot = React.useCallback(\n    async function DeleteSlot(\n      mutationVariables: DeleteSlotMutationVariables\n    ): Promise<TMutationResponse<{ slot: SlotExhaustiveFragment }>> {\n      const result = await deleteSlotMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.deleteSlot?.fieldErrors?.length ||\n        result?.data?.deleteSlot?.errors?.length\n      ) {\n        return {\n          error: result?.data?.deleteSlot?.errors?.[0],\n          fieldErrors: result?.data?.deleteSlot?.fieldErrors || undefined,\n        };\n      }\n      if (result.data?.deleteSlot?.slot?.id) {\n        return {\n          slot: result.data.deleteSlot?.slot,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [deleteSlotMutation]\n  );\n\n  const createLoad = React.useCallback(\n    async function CreateLoad(\n      mutationVariables: CreateLoadMutationVariables\n    ): Promise<TMutationResponse<{ load: LoadDetailsFragment }>> {\n      const result = await createLoadMutation({ variables: mutationVariables });\n\n      if (\n        result?.data?.createLoad?.fieldErrors?.length ||\n        result?.data?.createLoad?.errors?.length\n      ) {\n        return {\n          error: result?.data?.createLoad?.errors?.[0],\n          fieldErrors: result?.data?.createLoad?.fieldErrors || undefined,\n        };\n      }\n      if (result?.data?.createLoad?.load?.id) {\n        const { load } = result.data.createLoad;\n        updateQuery((prev) => ({\n          ...prev,\n          loads: {\n            ...prev?.loads,\n            edges: [{ node: load, __typename: 'LoadEdge' }, ...(prev?.loads?.edges || [])],\n          },\n        }));\n        return {\n          load: result.data.createLoad.load,\n        };\n      }\n      return {\n        error: result?.errors?.[0]?.message,\n        fieldErrors: undefined,\n      };\n    },\n    [createLoadMutation, updateQuery]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch,\n      fetchMore,\n      moveSlot,\n      manifestUser,\n      manifestGroup,\n      deleteSlot,\n      createLoad,\n      permissions,\n      loads: data?.loads?.edges?.map((edge) => edge?.node) || [],\n    }),\n    [\n      called,\n      createLoad,\n      data?.loads?.edges,\n      deleteSlot,\n      fetchMore,\n      loading,\n      permissions,\n      manifestGroup,\n      manifestUser,\n      moveSlot,\n      refetch,\n    ]\n  );\n}\n\nexport { useManifest };\n","import * as React from 'react';\nimport { isEqual, noop } from 'lodash';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from 'app/state';\nimport {\n  useCreateTicketTypeMutation,\n  useCreateTicketAddonMutation,\n  useUpdateTicketAddonMutation,\n  useUpdateTicketTypeMutation,\n  useArchiveTicketTypeMutation,\n  TicketTypesDocument,\n  TicketTypeExtrasDocument,\n  useTicketTypesLazyQuery,\n} from '../reflection';\nimport {\n  CreateTicketAddonMutationVariables,\n  CreateTicketTypeMutationVariables,\n  TicketTypeAddonDetailsFragment,\n  TicketTypeEssentialsFragment,\n  TicketTypesQueryVariables,\n  UpdateTicketAddonMutationVariables,\n  UpdateTicketTypeMutationVariables,\n} from '../operations';\nimport { TMutationResponse, uninitializedHandler } from './factory';\n\nexport function useTickets(vars?: Partial<TicketTypesQueryVariables>) {\n  const { authenticated } = useAppSelector((root) => root.global);\n  const variables: TicketTypesQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzone) {\n      return vars as TicketTypesQueryVariables;\n    }\n    return undefined;\n  }, [vars]);\n\n  const [getTickets, query] = useTicketTypesLazyQuery();\n  React.useEffect(() => {\n    if (authenticated && variables?.dropzone && !isEqual(variables, query.variables)) {\n      console.debug('[Context::Tickets] Fetching tickets', variables);\n      getTickets({ variables });\n    }\n  }, [authenticated, getTickets, query.variables, variables]);\n\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n  const ticketTypes = React.useMemo(() => data?.ticketTypes, [data?.ticketTypes]);\n  const [createTicket] = useCreateTicketTypeMutation();\n  const [updateTicket] = useUpdateTicketTypeMutation();\n  const [archiveTicket] = useArchiveTicketTypeMutation();\n  const [createAddon] = useCreateTicketAddonMutation();\n  const [updateAddon] = useUpdateTicketAddonMutation();\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzone) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const createTicketType = React.useCallback(\n    async function CreateTicketType(\n      attributes: Omit<CreateTicketTypeMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await createTicket({\n        variables: {\n          attributes: { ...attributes, dropzoneId: Number(variables?.dropzone || dropzone?.id) },\n        },\n        refetchQueries: [{ query: TicketTypesDocument, variables: { dropzone: dropzone?.id } }],\n      });\n\n      if (response?.data?.createTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.createTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.createTicketType?.errors?.[0],\n        fieldErrors: response?.data?.createTicketType?.fieldErrors || undefined,\n      };\n    },\n    [createTicket, dropzone?.id, variables?.dropzone]\n  );\n\n  const updateTicketType = React.useCallback(\n    async function UpdateTicketType(\n      id: number,\n      attributes: Omit<UpdateTicketTypeMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await updateTicket({\n        variables: { id, attributes: { ...attributes } },\n      });\n\n      if (response?.data?.updateTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.updateTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.updateTicketType?.errors?.[0],\n        fieldErrors: response?.data?.updateTicketType?.fieldErrors || undefined,\n      };\n    },\n    [updateTicket]\n  );\n\n  const createTicketTypeAddon = React.useCallback(\n    async function CreateTicketTypeAddon(\n      attributes: Omit<CreateTicketAddonMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketTypeAddon: TicketTypeAddonDetailsFragment }>> {\n      const response = await createAddon({\n        variables: {\n          attributes: { ...attributes, dropzoneId: Number(variables?.dropzone || dropzone?.id) },\n        },\n        refetchQueries: [\n          {\n            query: TicketTypeExtrasDocument,\n            variables: { dropzoneId: dropzone?.id },\n            fetchPolicy: 'network-only',\n          },\n        ],\n      });\n\n      if (response?.data?.createExtra?.extra?.id) {\n        return { ticketTypeAddon: response?.data?.createExtra?.extra };\n      }\n      return {\n        error: response?.data?.createExtra?.errors?.[0],\n        fieldErrors: response?.data?.createExtra?.fieldErrors || undefined,\n      };\n    },\n    [createAddon, dropzone?.id, variables?.dropzone]\n  );\n\n  const updateTicketTypeAddon = React.useCallback(\n    async function UpdateTicketTypeAddon(\n      id: number,\n      attributes: Omit<UpdateTicketAddonMutationVariables['attributes'], 'dropzoneId'>\n    ): Promise<TMutationResponse<{ ticketTypeAddon: TicketTypeAddonDetailsFragment }>> {\n      const response = await updateAddon({\n        variables: { id, attributes: { ...attributes } },\n      });\n\n      if (response?.data?.updateExtra?.extra?.id) {\n        return { ticketTypeAddon: response?.data?.updateExtra?.extra };\n      }\n      return {\n        error: response?.data?.updateExtra?.errors?.[0],\n        fieldErrors: response?.data?.updateExtra?.fieldErrors || undefined,\n      };\n    },\n    [updateAddon]\n  );\n\n  const archiveTicketType = React.useCallback(\n    async function ArchiveTicket(\n      ticketType: TicketTypeEssentialsFragment\n    ): Promise<TMutationResponse<{ ticketType: TicketTypeEssentialsFragment }>> {\n      const response = await archiveTicket({\n        variables: { id: Number(ticketType.id) },\n        optimisticResponse: {\n          archiveTicketType: {\n            __typename: 'DeleteTicketPayload',\n            errors: null,\n            fieldErrors: null,\n            ticketType,\n          },\n        },\n        update: (cache, { data: mutationData }) => {\n          if (!mutationData?.archiveTicketType?.ticketType?.id) {\n            return;\n          }\n\n          cache.evict({ id: cache.identify(mutationData.archiveTicketType.ticketType) });\n        },\n      });\n\n      if (response?.data?.archiveTicketType?.ticketType?.id) {\n        return { ticketType: response?.data?.archiveTicketType?.ticketType };\n      }\n      return {\n        error: response?.data?.archiveTicketType?.errors?.[0],\n        fieldErrors: response?.data?.archiveTicketType?.fieldErrors || undefined,\n      };\n    },\n    [archiveTicket]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch: queryVariables?.dropzone ? refetch : noop,\n      fetchMore: queryVariables?.dropzone ? () => fetchMore({ variables }) : uninitializedHandler,\n      ticketTypes,\n      createTicketType,\n      createTicketTypeAddon,\n      updateTicketType,\n      updateTicketTypeAddon,\n      archiveTicketType,\n    }),\n    [\n      loading,\n      called,\n      queryVariables?.dropzone,\n      refetch,\n      ticketTypes,\n      createTicketType,\n      createTicketTypeAddon,\n      updateTicketType,\n      updateTicketTypeAddon,\n      archiveTicketType,\n      fetchMore,\n      variables,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { isEqual, noop } from 'lodash';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from 'app/state';\nimport {\n  useCreateAircraftMutation,\n  useUpdateAircraftMutation,\n  PlanesDocument,\n  useArchivePlaneMutation,\n  usePlanesLazyQuery,\n} from '../reflection';\nimport {\n  CreateAircraftMutationVariables,\n  PlanesQuery,\n  DropzoneQueryVariables,\n  PlaneEssentialsFragment,\n  PlanesQueryVariables,\n  UpdateAircraftMutationVariables,\n} from '../operations';\nimport { TMutationResponse, uninitializedHandler } from './factory';\n\nexport function useAircrafts(vars?: Partial<PlanesQueryVariables>) {\n  const { authenticated } = useAppSelector((root) => root.global);\n  const variables: DropzoneQueryVariables | undefined = React.useMemo(() => {\n    if (vars?.dropzoneId) {\n      return {\n        dropzoneId: vars.dropzoneId,\n      };\n    }\n    return undefined;\n  }, [vars]);\n\n  const [getAircrafts, query] = usePlanesLazyQuery({\n    variables,\n  });\n\n  React.useEffect(() => {\n    if (authenticated && variables?.dropzoneId && !isEqual(variables, query.variables)) {\n      console.debug('[Context::Aircrafts] Fetching aircrafts', variables);\n      getAircrafts({ variables });\n    }\n  }, [authenticated, getAircrafts, query?.variables, variables]);\n\n  const { loading, fetchMore, data, called, variables: queryVariables } = query;\n\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [createAircraft] = useCreateAircraftMutation();\n  const [updateAircraft] = useUpdateAircraftMutation();\n  const [archiveAircraft] = useArchivePlaneMutation();\n\n  const refetch = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      query?.refetch();\n    }\n  }, [query, variables]);\n\n  const create = React.useCallback(\n    async function CreateAircraft(\n      attributes: CreateAircraftMutationVariables['attributes']\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      if (!dropzone) {\n        return { error: 'No dropzone selected' };\n      }\n      const response = await createAircraft({\n        variables: { attributes },\n        refetchQueries: [{ query: PlanesDocument, variables: { dropzoneId: dropzone.id } }],\n        update: (cache, { data: mutationData }) => {\n          cache.updateQuery<PlanesQuery, PlanesQueryVariables>(\n            {\n              query: PlanesDocument,\n              variables: { dropzoneId: dropzone.id },\n              id: cache.identify(dropzone),\n            },\n            (prev) => {\n              if (!prev) {\n                return undefined;\n              }\n              if (!mutationData?.createPlane?.plane) {\n                return prev;\n              }\n\n              return {\n                ...prev,\n                planes: [...(prev?.planes || []), mutationData.createPlane.plane],\n              };\n            }\n          );\n        },\n      });\n\n      if (response?.data?.createPlane?.plane?.id) {\n        return { aircraft: response?.data?.createPlane?.plane };\n      }\n      return {\n        error: response?.data?.createPlane?.errors?.[0],\n        fieldErrors: response?.data?.createPlane?.fieldErrors || undefined,\n      };\n    },\n    [createAircraft, dropzone]\n  );\n\n  const update = React.useCallback(\n    async function UpdateAircraft(\n      id: number,\n      attributes: UpdateAircraftMutationVariables['attributes']\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      const response = await updateAircraft({ variables: { id, attributes } });\n\n      if (response?.data?.updatePlane?.plane?.id) {\n        return { aircraft: response?.data?.updatePlane?.plane };\n      }\n      return {\n        error: response?.data?.updatePlane?.errors?.[0],\n        fieldErrors: response?.data?.updatePlane?.fieldErrors || undefined,\n      };\n    },\n    [updateAircraft]\n  );\n\n  const archive = React.useCallback(\n    async function ArchiveAircraft(\n      plane: PlaneEssentialsFragment\n    ): Promise<TMutationResponse<{ aircraft: PlaneEssentialsFragment }>> {\n      const response = await archiveAircraft({\n        variables: { id: Number(plane.id) },\n        optimisticResponse: {\n          __typename: 'Mutation',\n          deletePlane: {\n            __typename: 'DeletePlanePayload',\n            errors: null,\n            fieldErrors: null,\n            plane,\n          },\n        },\n        update: (cache, { data: mutationData }) => {\n          if (!mutationData?.deletePlane?.plane?.id) {\n            return;\n          }\n\n          cache.evict({ id: cache.identify(mutationData.deletePlane.plane) });\n        },\n      });\n\n      if (response?.data?.deletePlane?.plane?.id) {\n        return { aircraft: response?.data?.deletePlane?.plane };\n      }\n      return {\n        error: response?.data?.deletePlane?.errors?.[0],\n        fieldErrors: response?.data?.deletePlane?.fieldErrors || undefined,\n      };\n    },\n    [archiveAircraft]\n  );\n\n  return React.useMemo(\n    () => ({\n      loading,\n      called,\n      refetch: queryVariables?.dropzoneId ? refetch : noop,\n      fetchMore: queryVariables?.dropzoneId ? () => fetchMore({ variables }) : uninitializedHandler,\n      aircrafts: data?.planes,\n      create,\n      update,\n      archive,\n    }),\n    [\n      loading,\n      called,\n      queryVariables?.dropzoneId,\n      refetch,\n      data?.planes,\n      create,\n      update,\n      fetchMore,\n      variables,\n      archive,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { Button, Dialog, IconButton, ProgressBar, useTheme } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { Drawer, Typography } from '@mui/material';\n\ninterface IBottomSheetProps {\n  open?: boolean;\n  title?: string;\n  buttonLabel?: string;\n  children: React.ReactNode;\n  loading?: boolean;\n  disablePadding?: boolean;\n\n  // eslint-disable-next-line react/no-unused-prop-types\n  snapPoints?: (string | number)[];\n  scrollable?: boolean;\n  buttonAction?(): void;\n  onClose(): void;\n}\n\nfunction DialogOrSheet(props: IBottomSheetProps) {\n  const { buttonLabel, disablePadding, buttonAction, title, loading, open, children, onClose } =\n    props;\n  const theme = useTheme();\n\n  return (\n    <Drawer {...{ open, onClose }} anchor=\"right\" PaperProps={{ style: { width: 400 } }}>\n      <ProgressBar\n        indeterminate\n        color={theme?.colors?.primary}\n        visible={loading}\n        style={{ width: '100%' }}\n      />\n      {!title ? null : (\n        <Typography\n          variant=\"h5\"\n          style={{ marginBottom: 16, paddingLeft: 16, paddingRight: 16, marginTop: 16 }}\n        >\n          {title}\n          <IconButton icon=\"close\" style={styles.close} size={24} onPress={onClose} />\n        </Typography>\n      )}\n      <View style={{ padding: disablePadding ? 0 : 16, paddingBottom: 0 }}>{children}</View>\n      <Dialog.Actions\n        style={{ justifyContent: 'flex-end', backgroundColor: 'transparent', marginBottom: 16 }}\n      >\n        <Button\n          mode=\"contained\"\n          disabled={loading}\n          {...{ loading }}\n          onPress={buttonAction}\n          style={styles.button}\n        >\n          {buttonLabel}\n        </Button>\n      </Dialog.Actions>\n    </Drawer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  noPadding: { borderBottomWidth: 0, paddingLeft: 0, paddingRight: 0 },\n  defaultPadding: { borderBottomWidth: 0, paddingLeft: 24, paddingRight: 24 },\n  button: {\n    width: '100%',\n    padding: 5,\n    alignSelf: 'flex-end',\n    borderRadius: 20,\n    height: 42,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  close: { position: 'absolute', top: 4, right: 4 },\n});\n\nexport default DialogOrSheet;\n","import * as React from 'react';\nimport { Controller, ControllerProps, FieldValues, Path } from 'react-hook-form';\n\ninterface IMinimalHookFormProps<V> {\n  error?: string | null;\n  value?: V;\n  onChange?(value: V): void;\n}\n\nexport function withHookForm<BaseProps extends object, Value = unknown>(\n  Component: React.ComponentType<BaseProps>\n) {\n  return function WithHookForm<Fields extends FieldValues, TName extends Path<Fields>>(\n    props: Omit<BaseProps, 'value' | 'onChange' | 'error'> &\n      Pick<ControllerProps<Fields, TName>, 'control' | 'name' | 'rules' | 'defaultValue'>\n  ) {\n    const { control, name, rules, defaultValue, ...rest } = props;\n\n    return (\n      <Controller\n        {...{ control, name, rules }}\n        render={({ field: { onChange, onBlur, value }, formState: { errors } }) => (\n          <Component\n            {...(rest as BaseProps)}\n            {...{ value, onChange, onBlur }}\n            error={errors?.[name]?.message}\n          />\n        )}\n      />\n    );\n  };\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, TextInput, useTheme } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\n\ntype Extract<T> = T extends React.ComponentType<infer U> ? U : never;\ninterface ITextFieldProps\n  extends Omit<Extract<typeof TextInput>, 'onChange' | 'onChangeText' | 'error'> {\n  error?: string | null;\n  helperText?: string | null;\n  onChangeText?(newValue: string): void;\n  onChange?(newValue: string): void;\n}\n\nfunction TextField(props: ITextFieldProps) {\n  const { error, helperText, onChangeText: setText, onChange, style, ...rest } = props;\n  const onChangeText = onChange || setText;\n  const theme = useTheme();\n  return (\n    <>\n      <TextInput\n        mode=\"outlined\"\n        style={StyleSheet.flatten([styles.field, { backgroundColor: theme.colors.surface }, style])}\n        {...rest}\n        {...{ onChangeText }}\n        error={!!error}\n      />\n      <HelperText style={styles.helperText} type={error ? 'error' : 'info'}>\n        {error || helperText || ' '}\n      </HelperText>\n    </>\n  );\n}\n\nexport const FormTextField = withHookForm(TextField);\n\nexport default TextField;\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  helperText: {\n    marginBottom: 16,\n  },\n});\n","import * as React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormHelperText from '@mui/material/FormHelperText';\n\nexport enum NumberFieldType {\n  Cash = 'cash',\n  Weight = 'weight',\n  CanopySize = 'canopySize',\n}\ninterface INumberFieldProps {\n  error?: string | null;\n  label?: string;\n  helperText?: string;\n  disabled?: boolean;\n  value?: number | null;\n  mode?: 'outlined' | 'flat';\n  variant?: NumberFieldType | null;\n  onChange(newValue: number): void;\n}\n\nconst adornments = {\n  [NumberFieldType.Cash]: '$',\n  [NumberFieldType.CanopySize]: 'ft',\n  [NumberFieldType.Weight]: 'kg',\n};\nconst muiVariants = {\n  flat: 'standard',\n  outlined: 'outlined',\n};\nexport default function NumberField(props: INumberFieldProps) {\n  const {\n    label,\n    mode,\n    disabled,\n    onChange: onChangeValue,\n    helperText,\n    error,\n    variant,\n    ...rest\n  } = props;\n  const { value } = rest;\n\n  const onChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      onChangeValue(parseInt(e.target.value, 10));\n    },\n    [onChangeValue]\n  );\n\n  return (\n    <FormControl\n      style={{ paddingRight: 8 }}\n      variant={\n        mode && mode in muiVariants ? (muiVariants[mode] as 'outlined' | 'standard') : 'outlined'\n      }\n      fullWidth\n    >\n      <TextField\n        type=\"number\"\n        fullWidth\n        variant={\n          mode && mode in muiVariants ? (muiVariants[mode] as 'outlined' | 'standard') : 'outlined'\n        }\n        {...{ label, disabled, value, onChange }}\n        InputProps={{\n          ...(variant && variant !== NumberFieldType.Cash\n            ? {\n                endAdornment: <InputAdornment position=\"end\">{adornments[variant]}</InputAdornment>,\n              }\n            : {}),\n          ...(variant !== NumberFieldType.Cash\n            ? {}\n            : {\n                startAdornment: (\n                  <InputAdornment position=\"start\">{adornments[variant]}</InputAdornment>\n                ),\n              }),\n        }}\n      />\n      <FormHelperText error={!!error}>{error || helperText || ' '}</FormHelperText>\n    </FormControl>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport { Chip as MaterialChip, useTheme } from 'react-native-paper';\n\ntype ExtractProps<T> = T extends React.ComponentType<infer P> ? P : object;\n\nexport type ChipProps = Omit<ExtractProps<typeof MaterialChip>, 'icon'> & {\n  icon?: ExtractProps<typeof MaterialCommunityIcons>['name'];\n} & {\n  small?: boolean;\n  color?: string;\n  backgroundColor?: string;\n};\nexport default function Chip(props: ChipProps) {\n  const { small, icon, color: assignedColor, mode, style, backgroundColor, ...rest } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n\n  const chipStyle: ChipProps['style'] = React.useMemo(\n    () => ({\n      marginHorizontal: 4,\n      backgroundColor: mode !== 'flat' ? backgroundColor : undefined,\n      height: small ? 25 : undefined,\n      alignItems: 'center' as const,\n      borderColor: mode !== 'flat' ? color || undefined : undefined,\n    }),\n    [backgroundColor, color, mode, small]\n  );\n  const iconStyles: ChipProps['style'] = React.useMemo(\n    () => (Platform.OS === 'web' ? {} : { marginTop: 0, marginBottom: 3 }),\n    []\n  );\n\n  return (\n    <MaterialChip\n      mode={mode || 'outlined'}\n      selectedColor={color}\n      style={[chipStyle, style]}\n      icon={\n        icon\n          ? (iconProps) => <MaterialCommunityIcons name={icon} {...iconProps} style={iconStyles} />\n          : undefined\n      }\n      textStyle={iconStyles}\n      {...rest}\n    />\n  );\n}\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { Platform, View, StyleSheet } from 'react-native';\nimport Chip, { ChipProps } from 'app/components/chips/Chip';\nimport { HelperText } from 'react-native-paper';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { withHookForm } from '../withHookForm';\n\nexport interface IChipSelect<T> {\n  items: T[];\n  value: T[];\n  autoSelectFirst?: boolean;\n  allowEmpty?: boolean;\n  icon?: ChipProps['icon'];\n  error?: string | null;\n  variant?: 'scroll' | 'flat';\n  isSelected?(item: T): boolean;\n  isDisabled?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChange(newItems: T[]): void;\n}\n\nfunction ChipSelect<T>(props: IChipSelect<T>) {\n  const {\n    items,\n    allowEmpty,\n    value,\n    variant = 'flat',\n    isSelected,\n    isDisabled,\n    icon,\n    renderItemLabel,\n    onChange,\n    autoSelectFirst,\n    error,\n  } = props;\n\n  React.useEffect(() => {\n    if (items?.length && (!value || !value.length) && autoSelectFirst) {\n      onChange([items[0]]);\n    }\n  }, [value, autoSelectFirst, onChange, items]);\n\n  const Wrapper = React.useCallback(\n    ({ children }: React.PropsWithChildren<object>) =>\n      variant === 'scroll' ? (\n        <ScrollView horizontal>{children} </ScrollView>\n      ) : (\n        (children as JSX.Element)\n      ),\n    [variant]\n  );\n\n  return (\n    <Wrapper>\n      <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n        {items?.map((item) => {\n          const isItemSelected = isSelected\n            ? isSelected(item)\n            : value.some((selected) => isEqual(item, selected));\n          return (\n            <Chip\n              key={JSON.stringify(item)}\n              small\n              mode={!isItemSelected ? 'flat' : 'outlined'}\n              icon={\n                !value?.some((selected) =>\n                  isSelected ? isSelected(selected) : isEqual(item, selected)\n                ) && icon\n                  ? icon\n                  : undefined\n              }\n              style={{ margin: Platform.OS === 'web' ? 4 : 1 }}\n              disabled={isDisabled?.(item) || false}\n              selected={isItemSelected}\n              onPress={() =>\n                onChange(\n                  !allowEmpty && value.length === 1\n                    ? [item]\n                    : xorBy(value, [item], isSelected || JSON.stringify)\n                )\n              }\n            >\n              {renderItemLabel(item)}\n            </Chip>\n          );\n        })}\n      </View>\n      <HelperText style={styles.helperText} type=\"error\">\n        {error || ''}\n      </HelperText>\n    </Wrapper>\n  );\n}\n\nconst styles = StyleSheet.create({\n  helperText: {\n    marginBottom: 16,\n  },\n});\n\nconst ChipSelectComponent = React.memo(ChipSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected', 'error']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected', 'error'])\n  );\n}) as typeof ChipSelect;\n\nexport const ChipSelectField = withHookForm(ChipSelect);\n\nexport default ChipSelectComponent;\n","import * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport Color from 'color';\nimport SkeletonContent from 'react-native-skeleton-content';\n\ntype ExtractProps<T> = T extends React.ComponentType<infer P> ? P : object;\n\nconst defaultColors = {\n  boneColor: '#E1E9EE',\n  highlightColor: '#F2F8FC',\n};\n\nexport default function ThemedSkeleton(props: ExtractProps<typeof SkeletonContent>) {\n  const theme = useTheme();\n  const boneColor = theme.dark\n    ? Color(defaultColors.boneColor).negate().rgb().toString()\n    : defaultColors.boneColor;\n  const highlightColor = theme.dark\n    ? Color(defaultColors.highlightColor).negate().rgb().toString()\n    : defaultColors.highlightColor;\n\n  return <SkeletonContent {...{ boneColor, highlightColor }} {...props} />;\n}\n","import * as React from 'react';\nimport SkeletonContent from 'app/components/Skeleton';\n\ninterface IChipSelectSkeletonLoadingProps {\n  rows?: number;\n}\nexport default function ChipSelectSkeleton(props: IChipSelectSkeletonLoadingProps) {\n  const { rows } = props;\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 15 + 13 + 13 + (rows || 1) * 32,\n        width: '100%',\n        justifyContent: 'center',\n        marginBottom: 16,\n      }}\n      layout={[\n        {\n          key: 'header',\n          width: 70,\n          height: 15,\n          borderRadius: 8,\n          marginVertical: 13,\n          marginHorizontal: 8,\n        },\n        {\n          key: 'chips',\n          flexDirection: 'row',\n          children: [\n            {\n              key: 'chip1',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            {\n              key: 'chip2',\n              width: 96,\n              height: 32,\n              borderRadius: 16,\n              marginRight: 4,\n            },\n            { key: 'chip3', width: 96, height: 32, borderRadius: 16 },\n          ],\n        },\n      ]}\n    />\n  );\n}\n","import { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\nimport { useAppSelector } from 'app/state';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { ChipProps } from 'app/components/chips/Chip';\nimport ChipSelect from './ChipSelect';\nimport type { IChipSelect } from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\nimport { withHookForm } from '../withHookForm';\n\ninterface IDropzoneUserChipSelect extends Pick<IChipSelect<unknown>, 'variant' | 'error'> {\n  value?: DropzoneUserEssentialsFragment | null;\n  label: string;\n  icon?: ChipProps['icon'];\n  requiredPermissions: Permission[];\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(dzuser: DropzoneUserEssentialsFragment): void;\n}\n\nfunction DropzoneUserChipSelect(props: IDropzoneUserChipSelect) {\n  const {\n    label,\n    requiredPermissions,\n    icon,\n    value,\n    variant,\n    error,\n    onLoadingStateChanged,\n    onChange,\n  } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: requiredPermissions,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  const onChangeSelected = React.useCallback(\n    ([first]: DropzoneUserEssentialsFragment[]) => (first ? onChange(first) : null),\n    [onChange]\n  );\n  const getItemLabel = React.useCallback(\n    (dzUser: DropzoneUserEssentialsFragment) => dzUser?.user.name,\n    []\n  );\n  const isSelected = React.useCallback(\n    (item: DropzoneUserEssentialsFragment) => item.id === value?.id,\n    [value?.id]\n  );\n  const selected = React.useMemo(\n    () => [value].filter(Boolean) as DropzoneUserEssentialsFragment[],\n    [value]\n  );\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>{label}</List.Subheader>\n      <ChipSelect<DropzoneUserEssentialsFragment>\n        {...{ error, variant }}\n        autoSelectFirst\n        icon={icon || 'account'}\n        items={\n          uniqBy(\n            data?.dropzoneUsers?.edges?.map((edge) => edge?.node) || [],\n            'id'\n          ) as DropzoneUserEssentialsFragment[]\n        }\n        value={selected}\n        isSelected={isSelected}\n        renderItemLabel={getItemLabel}\n        onChange={onChangeSelected}\n      />\n    </>\n  );\n}\n\nexport const DropzoneUserChipSelectField = withHookForm(DropzoneUserChipSelect);\n\nexport default DropzoneUserChipSelect;\n","import { JumpTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { JumpType } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IJumpTypeSelect {\n  value?: JumpTypeEssentialsFragment | null;\n  userId?: number | null;\n  error?: string | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: JumpTypeEssentialsFragment): void;\n}\n\nfunction JumpTypeChipSelect(props: IJumpTypeSelect) {\n  const { onLoadingStateChanged, userId, value, onChange, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data, loading } = useAllowedJumpTypesQuery({\n    variables: {\n      allowedForDropzoneUserIds: [Number(userId) || null].filter(Boolean) as number[],\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Jump type</List.Subheader>\n      <ChipSelect<JumpTypeEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        items={\n          uniqBy(\n            [...(data?.dropzone?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n            ({ id }) => id\n          ) || []\n        }\n        value={[value].filter(Boolean) as JumpType[]}\n        renderItemLabel={(jumpType) => jumpType?.name || 'Unknown'}\n        isDisabled={(jumpType) =>\n          !data?.dropzone?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType?.id)\n        }\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const JumpTypeChipSelectField = withHookForm(JumpTypeChipSelect);\n\nexport default JumpTypeChipSelect;\n","import { LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  error?: string | null;\n  onChange(jt: LicenseEssentialsFragment): void;\n}\n\nfunction LicenseChipSelect(props: ILicenseSelect) {\n  const { federationId, onChange, value, error } = props;\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <>\n      <List.Subheader>License</List.Subheader>\n      <ChipSelect<LicenseEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        icon=\"ticket-account\"\n        items={data?.licenses || []}\n        value={[value].filter(Boolean) as LicenseEssentialsFragment[]}\n        isSelected={(item) => item.id === value?.id}\n        renderItemLabel={(license) => license?.name}\n        isDisabled={() => false}\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const LicenseChipSelectField = withHookForm(LicenseChipSelect);\n\nexport default LicenseChipSelect;\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { usePlanesQuery } from 'app/api/reflection';\nimport { uniqBy } from 'lodash';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface IPlaneSelect {\n  value?: PlaneEssentialsFragment | null;\n  error?: string | null;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: PlaneEssentialsFragment): void;\n}\n\nfunction PlaneChipSelect(props: IPlaneSelect) {\n  const { value, onChange, onLoadingStateChanged, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Aircraft</List.Subheader>\n      <ChipSelect<PlaneEssentialsFragment>\n        autoSelectFirst\n        {...{ error }}\n        items={uniqBy([...(data?.planes || [])], ({ id }) => id) || []}\n        value={[value].filter(Boolean) as PlaneEssentialsFragment[]}\n        renderItemLabel={(plane: PlaneEssentialsFragment) => plane?.name || ''}\n        isDisabled={(plane) => false}\n        onChange={([first]) => (first ? onChange(first as PlaneEssentialsFragment) : null)}\n      />\n    </>\n  );\n}\n\nexport const PlaneChipSelectField = withHookForm(PlaneChipSelect);\n\nexport default PlaneChipSelect;\n","import { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedTicketTypesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { useAppSelector } from '../../../state';\nimport { withHookForm } from '../withHookForm';\nimport ChipSelect from './ChipSelect';\nimport ChipSelectSkeleton from './ChipSelectSkeleton';\n\ninterface ITicketTypeSelect {\n  value?: TicketTypeEssentialsFragment | null;\n  onlyPublicTickets?: boolean;\n  error?: string;\n  onLoadingStateChanged?(loading: boolean): void;\n  onChange(jt: TicketTypeEssentialsFragment): void;\n}\n\nfunction TicketTypeChipSelect(props: ITicketTypeSelect) {\n  const { value, onLoadingStateChanged, onChange, onlyPublicTickets, error } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data, loading } = useAllowedTicketTypesQuery({\n    variables: {\n      dropzone: currentDropzoneId?.toString() as string,\n      onlyPublicTickets: onlyPublicTickets || null,\n    },\n    onError: console.error,\n  });\n\n  React.useEffect(() => {\n    onLoadingStateChanged?.(loading);\n  }, [loading, onLoadingStateChanged]);\n\n  return loading ? (\n    <ChipSelectSkeleton />\n  ) : (\n    <>\n      <List.Subheader>Ticket</List.Subheader>\n      <ChipSelect<TicketTypeEssentialsFragment>\n        {...{ error }}\n        autoSelectFirst\n        items={data?.ticketTypes || []}\n        value={[value].filter(Boolean) as TicketTypeEssentialsFragment[]}\n        renderItemLabel={(ticketType) => `${ticketType?.name} ($${ticketType?.cost})`}\n        isDisabled={() => false}\n        onChange={([first]) => (first ? onChange(first) : null)}\n      />\n    </>\n  );\n}\n\nexport const TicketTypeChipSelectField = withHookForm(TicketTypeChipSelect);\n\nexport default TicketTypeChipSelect;\n","import { withHookForm } from '../withHookForm';\nimport NumberField from './NumberField';\n\nexport const FormNumberField = withHookForm(NumberField);\n\nexport default NumberField;\n","import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\n\nimport first from 'lodash/first';\n\ntype AvatarProps = typeof Avatar.Image extends React.ComponentType<infer P> ? P : never;\n\ninterface IUserAvatarProps extends Omit<AvatarProps, 'source'> {\n  source?: AvatarProps['source'];\n  image?: string | null;\n  name?: string | null;\n}\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, source: _, size, ...rest } = props;\n  const initals = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return !image ? (\n    <Avatar.Text\n      label={initals || ''}\n      {...rest}\n      style={{\n        alignSelf: 'center',\n        height: size || 32,\n        width: size || 32,\n        borderRadius: (size || 32) / 2,\n      }}\n      size={size || 32}\n    />\n  ) : (\n    <Avatar.Image\n      source={{ uri: image }}\n      {...rest}\n      style={{\n        alignSelf: 'center',\n        height: size || 32,\n        width: size || 32,\n        borderRadius: (size || 32) / 2,\n      }}\n      size={size || 32}\n    />\n  );\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\n\nimport first from 'lodash/first';\n\ninterface IUserAvatarProps {\n  image?: string | null;\n  name?: string | null;\n  size?: number;\n}\n\nfunction stringToColor(string: string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nexport default function UserAvatar(props: IUserAvatarProps) {\n  const { name, image, size } = props;\n  const initials = name\n    ?.split(/\\s/g)\n    .map((n) => first(n))\n    .join('');\n\n  return (\n    <Avatar\n      sx={{\n        bgcolor: stringToColor(name || 'Dropzone User'),\n      }}\n      style={{ height: size, width: size, alignSelf: 'center', marginRight: 12 }}\n      src={image || undefined}\n    >\n      {initials}\n    </Avatar>\n  );\n}\n","import * as React from 'react';\nimport MuiMenu from '@mui/material/Menu';\nimport MuiMenuItem from '@mui/material/MenuItem';\nimport { View, TouchableOpacity, GestureResponderEvent } from 'react-native';\nimport { ListItemAvatar, ListItemIcon, ListItemText } from '@mui/material';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport UserAvatar from '../UserAvatar.web.old';\n\ninterface IPopoverMenuProps {\n  open: boolean;\n  anchor: React.ReactNode;\n  children: React.ReactNode;\n  setOpen(open: boolean): void;\n}\n\ninterface IMenuItemProps {\n  title?: string | null;\n  testID?: string;\n  bold?: boolean;\n  icon?: IconSource;\n  avatar?: { name: string; image?: string } | null;\n  onPress(): void;\n}\n\nexport function MenuItem(props: IMenuItemProps) {\n  const { title, bold, onPress, avatar, icon, testID } = props;\n  return (\n    <MuiMenuItem\n      style={{ fontWeight: bold ? 'bold' : undefined }}\n      onClick={onPress}\n      data-testid={testID}\n    >\n      {!icon || avatar ? null : (\n        <ListItemIcon>\n          {typeof icon === 'string' ? <MaterialCommunityIcons icon={icon} /> : null}\n          {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n        </ListItemIcon>\n      )}\n      {!avatar ? null : (\n        <ListItemAvatar>\n          <UserAvatar name={avatar.name} image={avatar?.image} size={32} />\n        </ListItemAvatar>\n      )}\n      <ListItemText>{title}</ListItemText>\n    </MuiMenuItem>\n  );\n}\n\nexport default function Menu(props: IPopoverMenuProps) {\n  const { open, setOpen, anchor, children } = props;\n  const [anchorEl, setAnchorEl] = React.useState<Element | null>(null);\n  const ref = React.useRef<TouchableOpacity>(null);\n  const onClick = React.useCallback(\n    (event: GestureResponderEvent) => {\n      setOpen(true);\n      console.log({ event });\n      setAnchorEl(event.currentTarget as unknown as Element);\n    },\n    [setOpen]\n  );\n  const onClose = React.useCallback(() => {\n    setAnchorEl(null);\n    setOpen(false);\n  }, [setOpen]);\n\n  return (\n    <>\n      <TouchableOpacity ref={ref} onPress={onClick}>\n        <View pointerEvents=\"none\">{anchor}</View>\n      </TouchableOpacity>\n      <MuiMenu\n        {...{ anchorEl, onClose, open }}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        {children}\n      </MuiMenu>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport MuiSelect from '@mui/material/Select';\nimport MuiMenuItem from '@mui/material/MenuItem';\nimport {\n  FormControl,\n  InputLabel,\n  FormHelperText,\n  ListItemIcon,\n  ListItemAvatar,\n  ListItemText,\n} from '@mui/material';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport UserAvatar from 'app/components/UserAvatar';\nimport Menu from 'app/components/popover/Menu';\nimport { isEqual } from 'lodash';\n\nexport interface ISelectOption<T> {\n  label: string;\n  value: T;\n  icon?: IconSource;\n  avatar?: string | null;\n}\ninterface ISelectProps<T> {\n  label?: string;\n  error?: string | null;\n  helperText?: string;\n  options: ISelectOption<T>[];\n  value?: T | null;\n  onChange(item: T): void;\n  compare?(a: T | null | undefined, b: T | null | undefined): boolean;\n  renderAnchor?: React.FC<IAnchorProps<T>>;\n}\n\ninterface IAnchorProps<T> {\n  item?: ISelectOption<T>;\n  openMenu(): void;\n}\n\ntype Extract<T> = T extends React.ComponentType<infer P> ? P : unknown;\ntype AllowedIcons = Extract<typeof MaterialCommunityIcons>['name'];\n\nexport default function Select<T>(props: ISelectProps<T>) {\n  const {\n    label,\n    error,\n    compare = isEqual,\n    options,\n    renderAnchor,\n    onChange,\n    value,\n    helperText,\n  } = props;\n  const [open, setOpen] = React.useState<boolean>(false);\n\n  const onOpen = React.useCallback(() => {\n    if (!options?.length) {\n      return;\n    }\n    setOpen(true);\n  }, [options?.length]);\n  const onDismiss = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const selectedOption = React.useMemo(\n    () => options.find((option) => compare(option.value, value)),\n    [compare, options, value]\n  );\n\n  const createSelectHandler = React.useCallback(\n    (option: ISelectOption<T>) => () => {\n      onDismiss();\n      onChange(option.value);\n    },\n    [onChange, onDismiss]\n  );\n  const showAvatars = React.useMemo(() => options?.some((option) => option.avatar), [options]);\n\n  const anchor = React.useMemo(\n    () =>\n      typeof renderAnchor === 'function'\n        ? (renderAnchor as Function)({ item: selectedOption, openMenu: onOpen })\n        : null,\n    [onOpen, renderAnchor, selectedOption]\n  );\n\n  if (renderAnchor) {\n    return (\n      <Menu {...{ anchor, open, setOpen }}>\n        {options?.map((option) => {\n          const { icon, avatar, label: title } = option;\n\n          return (\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            <MuiMenuItem onClick={createSelectHandler(option)}>\n              {!icon || avatar ? null : (\n                <ListItemIcon>\n                  {typeof icon === 'string' ? (\n                    <MaterialCommunityIcons icon={icon as AllowedIcons} size={24} />\n                  ) : null}\n                  {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n                </ListItemIcon>\n              )}\n              {!avatar || !showAvatars ? null : (\n                <ListItemAvatar>\n                  <UserAvatar name={label} image={avatar} size={32} />\n                </ListItemAvatar>\n              )}\n\n              <ListItemText>{title}</ListItemText>\n            </MuiMenuItem>\n          );\n        })}\n      </Menu>\n    );\n  }\n\n  return (\n    <FormControl sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel id=\"demo-simple-select-helper-label\">{label}</InputLabel>\n      <MuiSelect\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={selectedOption?.value ? JSON.stringify(selectedOption?.value) : null}\n        defaultValue={selectedOption?.value ? JSON.stringify(selectedOption?.value) : null}\n        {...{ label }}\n        variant=\"standard\"\n        error={!!error}\n        style={{ paddingTop: 0 }}\n        native={false}\n        SelectDisplayProps={{\n          style: { display: 'inline-flex', alignItems: 'center' },\n        }}\n        onChange={({ target }) => {\n          const option = options.find((opt) => JSON.stringify(opt.value) === target.value);\n          if (option) {\n            onChange(option.value);\n          }\n        }}\n      >\n        {options?.map(({ value: val, icon, avatar, label: title }) => {\n          const isSelected = compare?.(selectedOption?.value, val as T);\n          console.debug({ title, isSelected, a: selectedOption?.value, b: val });\n          return (\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            <MuiMenuItem value={JSON.stringify(val as T)} selected={isSelected}>\n              {!icon || avatar ? null : (\n                <ListItemIcon>\n                  {typeof icon === 'string' ? (\n                    <MaterialCommunityIcons icon={icon as AllowedIcons} size={24} />\n                  ) : null}\n                  {React.isValidElement(icon) && typeof icon !== 'string' ? icon : null}\n                </ListItemIcon>\n              )}\n              {!avatar || !showAvatars ? null : (\n                <ListItemAvatar>\n                  <UserAvatar name={label} image={avatar} size={32} />\n                </ListItemAvatar>\n              )}\n              <ListItemText primary={title} />\n            </MuiMenuItem>\n          );\n        })}\n      </MuiSelect>\n      <FormHelperText error={!!error}>{error || helperText}</FormHelperText>\n    </FormControl>\n  );\n}\n","import { UserRigDetailedFragment } from 'app/api/operations';\nimport { useAvailableRigsLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\nimport Chip from 'app/components/chips/Chip';\nimport Select, { ISelectOption } from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IRigSelect {\n  dropzoneUserId?: number;\n  loadId?: number;\n  value?: UserRigDetailedFragment | null;\n  tandem?: boolean;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  autoSelectFirst?: boolean;\n  variant?: 'chip' | 'select';\n  label?: string;\n  error?: string | null;\n  onChange(rig: UserRigDetailedFragment): void;\n}\n\nfunction RigSelect(props: IRigSelect) {\n  const {\n    dropzoneUserId,\n    label,\n    variant,\n    value,\n    small,\n    loadId,\n    color: assignedColor,\n    backgroundColor,\n    autoSelectFirst,\n    onChange,\n    tandem,\n    error,\n  } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const [fetchRigs, { data }] = useAvailableRigsLazyQuery({\n    fetchPolicy: 'cache-and-network',\n  });\n\n  React.useEffect(() => {\n    if (dropzoneUserId) {\n      fetchRigs({\n        variables: {\n          dropzoneUserId,\n          loadId,\n          isTandem: tandem || undefined,\n        },\n      });\n    }\n  }, [fetchRigs, currentDropzoneId, tandem, dropzoneUserId, loadId]);\n\n  React.useEffect(() => {\n    if (!value && autoSelectFirst && data?.availableRigs?.length) {\n      onChange(data.availableRigs[0]);\n    }\n  }, [autoSelectFirst, data?.availableRigs, onChange, value]);\n\n  const options = React.useMemo(\n    () =>\n      data?.availableRigs?.map((rig) => ({\n        label: rig?.name || [rig?.make, rig?.model].join(' '),\n        value: rig as UserRigDetailedFragment,\n      })) || [],\n    [data?.availableRigs]\n  );\n\n  const selected = React.useMemo(\n    () => data?.availableRigs?.find((node) => node?.id === value?.id),\n    [data?.availableRigs, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<UserRigDetailedFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"parachute\">\n        {item?.label || 'No Rig'}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <Select<UserRigDetailedFragment>\n      {...{ options, error, renderAnchor: variant === 'chip' ? renderAnchor : undefined, label }}\n      value={selected}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const RigSelectField = withHookForm(RigSelect);\n\nexport default RigSelect;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider, List } from 'react-native-paper';\nimport { NumberFieldType } from 'app/components/input/number_input/NumberField';\nimport { Control, useWatch } from 'react-hook-form';\nimport { TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\n\nimport { Permission } from 'app/api/schema.d';\nimport { JumpTypeChipSelectField } from 'app/components/input/chip_select/JumpTypeChipSelect';\nimport { TicketTypeChipSelectField } from 'app/components/input/chip_select/TicketTypeChipSelect';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { RigSelectField } from 'app/components/input/dropdown_select/RigSelect';\nimport { ManifestUserFields } from './useForm';\n\ninterface IManifestFormProps {\n  control: Control<ManifestUserFields>;\n}\nexport default function ManifestForm(props: IManifestFormProps) {\n  const { control } = props;\n\n  const { id, dropzoneUser, ticketType, load } = useWatch<ManifestUserFields>({ control });\n\n  const allowedToManifestOthers = useRestriction(\n    id ? Permission.UpdateUserSlot : Permission.CreateUserSlot\n  );\n  const { extras: selectedAddons } = useWatch({ control });\n\n  return (\n    <>\n      <JumpTypeChipSelectField\n        {...{ control }}\n        name=\"jumpType\"\n        userId={Number(dropzoneUser?.id) || null}\n      />\n\n      <TicketTypeChipSelectField\n        {...{ control }}\n        onlyPublicTickets={!allowedToManifestOthers}\n        name=\"ticketType\"\n      />\n\n      {!ticketType?.extras?.length ? null : <List.Subheader>Ticket addons</List.Subheader>}\n      <ChipSelectField<ManifestUserFields, 'extras'>\n        {...{ control }}\n        allowEmpty\n        defaultValue={[]}\n        isSelected={(item) =>\n          selectedAddons\n            ?.map((addon) => addon?.id)\n            .includes((item as TicketTypeExtraEssentialsFragment)?.id) || false\n        }\n        items={ticketType?.extras as TicketTypeExtraEssentialsFragment[]}\n        renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n          `${item.name} ($${item.cost})`\n        }\n        name=\"extras\"\n      />\n      <Divider />\n      {!dropzoneUser ? null : (\n        <RigSelectField\n          {...{ control }}\n          loadId={load?.id ? Number(load?.id) : undefined}\n          name=\"rig\"\n          label=\"Equipment\"\n          dropzoneUserId={Number(dropzoneUser?.id)}\n        />\n      )}\n      <FormNumberField\n        label=\"Exit weight\"\n        variant={NumberFieldType.Weight}\n        {...{ control }}\n        name=\"exitWeight\"\n      />\n\n      {!ticketType?.isTandem ? null : (\n        <>\n          <List.Subheader>Passenger</List.Subheader>\n          <FormTextField {...{ control }} label=\"Passenger name\" name=\"passengerName\" />\n\n          <FormNumberField\n            {...{ control }}\n            label=\"Passenger exit weight\"\n            name=\"passengerExitWeight\"\n          />\n        </>\n      )}\n    </>\n  );\n}\n","import * as React from 'react';\nimport { noop } from 'lodash';\nimport { useManifest } from 'app/api/crud/useManifest';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport type { IManifestUserDialog } from 'app/forms/manifest_user/Dialog';\nimport type { ICreditsSheet } from 'app/forms/credits/Credits';\nimport type { ILoadDialog } from 'app/forms/load/Dialog';\nimport type { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface IManifestContext {\n  manifest: ReturnType<typeof useManifest>;\n  dialogs: {\n    manifestUser: IDialogContextSubstate<\n      Omit<IManifestUserDialog, 'open' | 'onClose' | 'onSuccess'>\n    >;\n    credits: IDialogContextSubstate<Omit<ICreditsSheet, 'open' | 'onClose' | 'onSuccess'>>;\n    load: IDialogContextSubstate<Omit<ILoadDialog, 'open' | 'onClose' | 'onSuccess'>>;\n  };\n}\nexport const INITIAL_CONTEXT: IManifestContext = {\n  manifest: {\n    called: false,\n    loading: false,\n    loads: [],\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n    deleteSlot: uninitializedHandler as never,\n    manifestUser: uninitializedHandler as never,\n    manifestGroup: uninitializedHandler as never,\n    moveSlot: uninitializedHandler as never,\n    createLoad: uninitializedHandler as never,\n    permissions: {\n      canAddTransaction: false,\n      canCreateLoad: false,\n      canDeleteOwnSlot: false,\n      canDeleteSlot: false,\n      canManifestOthers: false,\n      canManifestSelf: false,\n      canUpdateOwnSlot: false,\n      canUpdateSlot: false,\n    },\n  },\n  dialogs: {\n    manifestUser: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        slot: undefined,\n        load: undefined,\n      },\n    },\n    load: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        load: undefined,\n      },\n    },\n    credits: {\n      open: noop,\n      close: noop,\n      visible: false,\n      state: {\n        dropzoneUser: undefined,\n      },\n    },\n  },\n};\nexport const ManifestContext = React.createContext<IManifestContext>(INITIAL_CONTEXT);\n\nexport function useManifestContext() {\n  return React.useContext(ManifestContext);\n}\n","import { useDropzoneContext } from 'app/providers/dropzone/context';\nimport * as React from 'react';\nimport * as yup from 'yup';\nimport { ValidationError } from 'yup';\n\nconst schema = yup.object().shape({\n  hasLicense: yup.boolean().isTrue('You need to select a license on your user profile'),\n  hasMembership: yup.boolean().isTrue('Your membership is out of date'),\n  hasRigInspection: yup.boolean().isTrue('Your rig needs to be inspected before you can manifest'),\n  hasReserveInDate: yup.boolean().isTrue('Your rig needs a reserve repack'),\n  hasExitWeight: yup.boolean().isTrue('You need to set your exit weight on your profile'),\n});\n\nexport default function useManifestValidator() {\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  const canManifest = React.useCallback(\n    async function CheckManifestRequirements() {\n      try {\n        await schema.validate(currentUser, { abortEarly: true });\n        return true;\n      } catch (err) {\n        if (err instanceof ValidationError) {\n          throw err;\n        }\n        return false;\n      }\n    },\n    [currentUser]\n  );\n\n  return { canManifest };\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { SlotExhaustiveFragment, TicketTypeDetailsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers/manifest/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport useManifestValidator from 'app/hooks/useManifestValidator';\nimport isEqual from 'lodash/isEqual';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type ManifestUserFields = Pick<\n  SlotExhaustiveFragment,\n  | 'jumpType'\n  // | 'load'\n  | 'rig'\n  | 'dropzoneUser'\n  | 'exitWeight'\n  | 'extras'\n  | 'groupNumber'\n  | 'passengerExitWeight'\n  | 'passengerName'\n> & { id?: string; load?: { id: string }; ticketType: TicketTypeDetailsFragment | null };\n\nexport const manifestUserValidation = yup.object().shape({\n  load: yup.object().required(),\n  exitWeight: yup.number().required('Please specify exit weight').min(0).max(300),\n  rig: yup.object().required('You cant manifest without a rig').nullable(),\n  jumpType: yup.object().required('Jump type is required').nullable(),\n  ticketType: yup.object().required('Ticket is required to manifest').nullable(),\n  original: yup.object().nullable(),\n  extras: yup.array().of(yup.object()).nullable(),\n});\n\nexport const EMPTY_FORM_VALUES: ManifestUserFields = {\n  id: undefined,\n  load: undefined,\n  exitWeight: 50,\n  rig: null,\n  ticketType: null,\n  jumpType: null,\n  passengerExitWeight: null,\n  passengerName: null,\n  extras: null,\n  groupNumber: 0,\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<ManifestUserFields>;\n  onSuccess?(): void;\n}\n\nexport default function useManifestForm(opts: IUseManifestFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const notify = useNotifications();\n  const methods = useForm<ManifestUserFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(manifestUserValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  React.useEffect(() => {\n    methods.reset(defaultValues);\n  }, [defaultValues, methods]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { manifestUser },\n  } = useManifestContext();\n  const { canManifest } = useManifestValidator();\n\n  const [{ loading }, onManifest] = useAsyncFn(\n    async (fields: ManifestUserFields) => {\n      try {\n        await canManifest();\n\n        const response = await manifestUser({\n          jumpType: fields.jumpType?.id,\n          extras: fields.extras?.map(({ id }) => id),\n          load: fields?.load?.id,\n          rig: !fields.rig?.id ? undefined : fields.rig?.id,\n          ticketType: fields.ticketType?.id,\n          dropzoneUser: fields.dropzoneUser?.id,\n          exitWeight: fields.exitWeight,\n          ...(!fields.ticketType?.isTandem\n            ? {}\n            : {\n                passengerName: fields.passengerName,\n                passengerExitWeight: fields.passengerExitWeight,\n              }),\n        });\n\n        if ('fieldErrors' in response) {\n          response.fieldErrors?.forEach(({ field, message }) => {\n            setError(field as keyof ManifestUserFields, { type: 'custom', message });\n          });\n        }\n        if ('slot' in response) {\n          notify.success(`${fields.dropzoneUser?.user?.name} has been added to the load`);\n          onSuccess?.();\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [manifestUser, notify]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onManifest), [handleSubmit, onManifest]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { usePortal } from '@gorhom/portal';\nimport { LoadEssentialsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport SlotForm from './ManifestForm';\nimport useForm from './useForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  load?: Pick<LoadEssentialsFragment, 'id' | 'loadNumber' | 'name'>;\n  slot?: Partial<SlotDetailsFragment>;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, load, slot, onSuccess, onClose } = props;\n\n  const { control, onSubmit, loading } = useForm({\n    initial: {\n      id: slot?.id,\n      load,\n      exitWeight: slot?.exitWeight || Number(slot?.dropzoneUser?.user?.exitWeight || 70),\n      dropzoneUser: slot?.dropzoneUser,\n      extras: slot?.extras || null,\n      groupNumber: slot?.groupNumber,\n      jumpType: slot?.jumpType,\n      passengerExitWeight: slot?.passengerExitWeight,\n      passengerName: slot?.passengerName,\n      rig: slot?.rig,\n      ticketType: slot?.ticketType || undefined,\n    },\n    onSuccess,\n  });\n\n  const portal = usePortal('drawer');\n\n  React.useEffect(() => {\n    if (!open) {\n      portal.removePortal('drawer');\n    }\n  }, [open, portal]);\n\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      title={`Manifest ${slot?.dropzoneUser?.user?.name} on ${load?.name}`}\n      {...{ open, onClose, loading }}\n      buttonLabel=\"Manifest\"\n      buttonAction={onSubmit}\n    >\n      <SlotForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { Permission } from 'app/api/schema.d';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider } from 'react-native-paper';\nimport { Control } from 'react-hook-form';\nimport {\n  DropzoneUserChipSelectField,\n  PlaneChipSelectField,\n} from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { LoadFields } from './useForm';\n\ninterface ILoadFormProps {\n  control: Control<LoadFields>;\n}\nexport default function LoadForm(props: ILoadFormProps) {\n  const { control } = props;\n\n  return (\n    <>\n      <FormTextField name=\"name\" label=\"Name\" {...{ control }} placeholder=\"Optional\" />\n\n      <FormNumberField label=\"Max Slots\" {...{ control }} name=\"maxSlots\" />\n      <View style={{ width: '100%' }}>\n        <PlaneChipSelectField {...{ control }} name=\"plane\" />\n\n        <DropzoneUserChipSelectField\n          label=\"GCA\"\n          {...{ control }}\n          name=\"gca\"\n          requiredPermissions={[Permission.ActAsGca]}\n        />\n\n        <DropzoneUserChipSelectField\n          label=\"Pilot\"\n          name=\"pilot\"\n          {...{ control }}\n          requiredPermissions={[Permission.ActAsPilot]}\n        />\n        <Divider style={{ marginVertical: 8 }} />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport { LoadDetailsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers/manifest/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport useManifestValidator from 'app/hooks/useManifestValidator';\nimport { isEqual } from 'lodash';\nimport { LoadState } from 'app/api/schema.d';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type LoadFields = Required<\n  Pick<LoadDetailsFragment, 'gca' | 'pilot' | 'maxSlots' | 'plane' | 'isOpen'>\n> &\n  Pick<LoadDetailsFragment, 'name'> & { id?: string | null };\n\nexport const loadValidation = yup.object({\n  name: yup.string().nullable().default(null),\n  gca: yup.object().required('You must select a GCA'),\n  pilot: yup.object().required('Every load needs a pilot'),\n  plane: yup.object().required('You cant create a load without an aircraft'),\n  original: yup.object().nullable(),\n  maxSlots: yup.number().required('You must specify max slots').default(0),\n  id: yup.string().nullable(),\n  isOpen: yup.boolean().default(true),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<LoadFields> = {\n  id: undefined,\n  gca: null,\n  pilot: null,\n  plane: undefined,\n  maxSlots: 0,\n  name: null,\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<LoadFields>;\n  onSuccess?(load: LoadDetailsFragment): void;\n}\n\nexport default function useManifestForm(opts: IUseManifestFormOpts) {\n  const { initial, onSuccess } = opts;\n  const notify = useNotifications();\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<LoadFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(loadValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { control, reset, setValue } = methods;\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { createLoad },\n  } = useManifestContext();\n  const { canManifest } = useManifestValidator();\n\n  const { plane } = useWatch<LoadFields>({ control });\n\n  React.useEffect(() => {\n    if (plane?.maxSlots) {\n      setValue('maxSlots', plane.maxSlots);\n    }\n  }, [plane?.maxSlots, setValue]);\n\n  const [{ loading }, onManifest] = useAsyncFn(\n    async (fields: LoadFields) => {\n      try {\n        await canManifest();\n        const validatedFields = loadValidation.validateSync(fields);\n\n        const response = await createLoad({\n          gca: Number(validatedFields.gca?.id),\n          state: LoadState.Open,\n          pilot: Number(validatedFields.pilot?.id),\n          plane: Number(validatedFields.plane?.id),\n          maxSlots: Number(validatedFields.maxSlots),\n          name: validatedFields.name,\n        });\n\n        if ('fieldErrors' in response) {\n          response.fieldErrors?.forEach(({ field, message }) => {\n            setError(field as keyof LoadFields, { type: 'custom', message });\n          });\n        }\n        if ('load' in response) {\n          notify.success(`Load #${response.load?.loadNumber} added to the board`);\n          onSuccess?.(response.load);\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [createLoad]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onManifest), [handleSubmit, onManifest]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\n\nimport { LoadDetailsFragment } from 'app/api/operations';\n\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport LoadForm from './LoadForm';\nimport useForm from './useForm';\n\nexport interface ILoadDialog {\n  open?: boolean;\n  load?: LoadDetailsFragment;\n  onClose(): void;\n  onSuccess(load: LoadDetailsFragment): void;\n}\nexport default function LoadDialog(props: ILoadDialog) {\n  const { open, load, onClose, onSuccess } = props;\n  const { control, onSubmit, loading } = useForm({\n    initial: {\n      gca: load?.gca,\n      maxSlots: load?.maxSlots,\n      name: load?.name,\n      pilot: load?.pilot,\n      plane: load?.plane,\n      id: load?.id,\n    },\n    onSuccess,\n  });\n\n  const snapPoints = React.useMemo(() => ['30%', 650], []);\n\n  return (\n    <DialogOrSheet\n      open={open}\n      onClose={onClose}\n      buttonAction={onSubmit}\n      scrollable\n      buttonLabel=\"Create\"\n      snapPoints={snapPoints}\n      loading={loading}\n      title=\"New Load\"\n    >\n      <LoadForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider, DataTable } from 'react-native-paper';\nimport { TransactionType } from 'app/api/schema.d';\nimport { Control, useWatch } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { DropzoneUserDetailsFragment } from 'app/api/operations';\nimport { NumberFieldType } from '../../components/input/number_input/NumberField';\nimport { CreditFields } from './useForm';\n\ninterface ICreditsFormProps {\n  control: Control<CreditFields>;\n  dropzoneUser?: DropzoneUserDetailsFragment;\n}\nexport default function CreditsForm(props: ICreditsFormProps) {\n  const { control, dropzoneUser } = props;\n  const { amount = 0, type } = useWatch({ control });\n\n  const subtotal =\n    type === TransactionType.Deposit\n      ? (dropzoneUser?.credits || 0) + amount\n      : (dropzoneUser?.credits || 0) - amount;\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Message\"\n        name=\"message\"\n        // style={{ marginHorizontal: 8 }}\n      />\n      <View>\n        <FormNumberField\n          variant={NumberFieldType.Cash}\n          label={type === TransactionType.Withdrawal ? 'Withdraw amount' : 'Add amount'}\n          name=\"amount\"\n          {...{ control }}\n        />\n        <Divider />\n\n        <DataTable>\n          <DataTable.Row>\n            <DataTable.Title>Current balance</DataTable.Title>\n            <DataTable.Cell numeric>{`$${dropzoneUser?.credits || 0}`}</DataTable.Cell>\n          </DataTable.Row>\n          <DataTable.Row>\n            <DataTable.Title>\n              {type === TransactionType.Withdrawal ? 'Withdraw' : 'Deposit'}\n            </DataTable.Title>\n            <DataTable.Cell numeric>\n              {[type === TransactionType.Deposit ? '+' : '-', '$', amount].join('')}\n            </DataTable.Cell>\n          </DataTable.Row>\n          <DataTable.Row>\n            <DataTable.Title>\n              <Text style={{ fontWeight: 'bold' }}>New total</Text>\n            </DataTable.Title>\n            <DataTable.Cell numeric>\n              {[subtotal < 0 ? '-' : '', '$', subtotal < 0 ? subtotal * -1 : subtotal].join('')}\n            </DataTable.Cell>\n          </DataTable.Row>\n        </DataTable>\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { DropzoneUserDetailsFragment, OrderEssentialsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useManifestContext } from 'app/providers/manifest/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { TransactionType } from 'app/api/schema.d';\nimport { useUserProfile } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type CreditFields = {\n  amount: number;\n  dropzoneUser: DropzoneUserDetailsFragment | null;\n  type: TransactionType;\n  message?: string | null;\n};\n\nexport const orderValidation = yup.object({\n  amount: yup.number().integer().default(0).min(1, 'Amount must be greater than 0'),\n  message: yup.string().nullable().default(null),\n  type: yup\n    .string()\n    .oneOf(Object.values(TransactionType))\n    .required('No transaction type selected')\n    .default(TransactionType.Withdrawal),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<CreditFields> = {\n  amount: 0,\n  message: null,\n  dropzoneUser: null,\n  type: TransactionType.Deposit,\n};\n\nexport interface IUseManifestFormOpts {\n  initial?: Partial<CreditFields>;\n  dropzoneUser?: DropzoneUserDetailsFragment | null;\n  onSuccess?(order: OrderEssentialsFragment): void;\n}\n\nexport default function useCreditsForm(opts: IUseManifestFormOpts) {\n  const { initial, dropzoneUser, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n  const { addCredits, withdrawCredits } = useUserProfile();\n\n  const methods = useForm<CreditFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(orderValidation),\n    shouldUnregister: false,\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset } = methods;\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    manifest: { createLoad },\n  } = useManifestContext();\n  const notify = useNotifications();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: CreditFields) => {\n      console.debug({ fields });\n      if (!dropzoneUser) {\n        setError('amount', { message: 'No user selected' });\n        return;\n      }\n      try {\n        const response =\n          fields.type === TransactionType.Deposit\n            ? await addCredits(dropzoneUser, {\n                amount: fields.amount,\n                message: fields.message,\n              })\n            : await withdrawCredits(dropzoneUser, {\n                amount: fields.amount,\n                message: fields.message,\n              });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              switch (field) {\n                case 'message':\n                  setError('message', { message });\n                  break;\n                default:\n                  setError('amount', { message });\n                  break;\n              }\n            });\n          }\n          if ('order' in response && response.order) {\n            onSuccess?.(response.order);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [createLoad, dropzoneUser, setError, notify, onSuccess, addCredits, withdrawCredits]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport { TransactionType } from 'app/api/schema.d';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport CreditsForm from './CreditsForm';\nimport useCreditsForm from './useForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  dropzoneUser?: DropzoneUserEssentialsFragment;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, dropzoneUser, onSuccess } = props;\n  const { onSubmit, control, setValue, loading } = useCreditsForm({\n    onSuccess,\n    dropzoneUser,\n  });\n\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      {...{ open, loading, onClose }}\n      disablePadding\n      buttonLabel=\"Save\"\n      buttonAction={onSubmit}\n      scrollable={false}\n    >\n      <View style={{ marginBottom: 24 }}>\n        <Tabs\n          defaultIndex={0} // default = 0\n          onChangeIndex={(newIndex) => {\n            setValue('type', newIndex === 1 ? TransactionType.Withdrawal : TransactionType.Deposit);\n          }}\n          mode=\"fixed\"\n        >\n          <TabScreen label=\"Deposit\" icon=\"arrow-up\">\n            <View />\n          </TabScreen>\n          <TabScreen label=\"Withdraw\" icon=\"arrow-down\">\n            <View />\n          </TabScreen>\n        </Tabs>\n      </View>\n      <View style={styles.form}>\n        <CreditsForm {...{ control, dropzoneUser }} />\n      </View>\n    </DialogOrSheet>\n  );\n}\n\nconst styles = StyleSheet.create({\n  form: {\n    paddingHorizontal: 16,\n  },\n});\n","import * as React from 'react';\n\nexport interface IDialogContextSubstate<State extends object = object> {\n  visible: boolean;\n  open(state?: State): void;\n  close(): void;\n  state?: State;\n}\nexport default function createUseDialog<State extends object = object>(defaults?: State) {\n  return function useDialog(): IDialogContextSubstate<State> {\n    const [state, setState] = React.useState<State>();\n    const open = React.useCallback((newState: State) => {\n      setState({ ...defaults, ...newState });\n    }, []);\n    const close = React.useCallback(() => setState(undefined), []);\n\n    return { state, visible: !!state, open, close };\n  };\n}\n","import * as React from 'react';\nimport type { IManifestUserDialog } from 'app/forms/manifest_user/Dialog';\nimport type { ILoadDialog } from 'app/forms/load/Dialog';\nimport type { ICreditsSheet } from 'app/forms/credits/Credits';\nimport noop from 'lodash/noop';\nimport { LoadsQueryVariables } from 'app/api/operations';\nimport { useManifest } from 'app/api/crud/useManifest';\nimport ManifestUserDialog from 'app/forms/manifest_user/Dialog';\nimport LoadDialog from 'app/forms/load/Dialog';\nimport CreditSheet from 'app/forms/credits/Credits';\nimport createUseDialog from '../hooks/useDialog';\nimport { ManifestContext, useManifestContext } from './context';\n\nexport type UseManifestOptions = Partial<LoadsQueryVariables>;\n\nfunction ManifestUserDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { manifestUser } = dialogs;\n  return (\n    <ManifestUserDialog\n      onClose={manifestUser.close}\n      onSuccess={manifestUser.close}\n      open={manifestUser.visible}\n      {...manifestUser.state}\n    />\n  );\n}\n\nfunction LoadDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { load } = dialogs;\n  return (\n    <LoadDialog onClose={load.close} onSuccess={load.close} open={load.visible} {...load.state} />\n  );\n}\n\nfunction CreditsDialogWrapper() {\n  const { dialogs } = useManifestContext();\n  const { credits } = dialogs;\n  return (\n    <CreditSheet\n      onClose={credits.close}\n      onSuccess={credits.close}\n      open={credits.visible}\n      {...credits.state}\n    />\n  );\n}\n\nconst useManifestUserDialog = createUseDialog<Pick<IManifestUserDialog, 'load' | 'slot'>>();\nconst useLoadDialog = createUseDialog<Pick<ILoadDialog, 'load'>>();\nconst useCreditsDialog = createUseDialog<Pick<ICreditsSheet, 'dropzoneUser'>>();\n\nexport function ManifestContextProvider(props: React.PropsWithChildren<UseManifestOptions>) {\n  const { dropzone, date, children } = props;\n  const manifestUserDialog = useManifestUserDialog();\n  const loadDialog = useLoadDialog();\n  const creditsDialog = useCreditsDialog();\n\n  const manifest = useManifest({ dropzone, date });\n\n  const { permissions } = manifest;\n\n  const dialogs = React.useMemo(\n    () => ({\n      manifestUser: manifestUserDialog,\n      load: permissions.canCreateLoad ? loadDialog : { ...loadDialog, open: noop },\n      credits: permissions.canAddTransaction ? creditsDialog : { ...creditsDialog, open: noop },\n    }),\n    [\n      manifestUserDialog,\n      permissions.canCreateLoad,\n      loadDialog,\n      permissions.canAddTransaction,\n      creditsDialog,\n    ]\n  );\n\n  const context = React.useMemo(() => ({ manifest, dialogs }), [manifest, dialogs]);\n\n  return (\n    <ManifestContext.Provider value={context}>\n      {children}\n      <CreditsDialogWrapper />\n      <LoadDialogWrapper />\n      <ManifestUserDialogWrapper />\n    </ManifestContext.Provider>\n  );\n}\n\nexport { useManifest };\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { List, Modal } from 'react-native-paper';\nimport { TimePickerModal } from 'react-native-paper-dates';\nimport { DateTime } from 'luxon';\n\ninterface ITimePickerProps {\n  label?: string;\n  timestamp?: number;\n  disabled?: boolean;\n  color?: string;\n  onChange(timestamp: number): void;\n}\nexport default function TimePicker(props: ITimePickerProps) {\n  const { disabled, label, timestamp, onChange, color } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const onDismissSingle = React.useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const onConfirm = React.useCallback(\n    ({ date }: { date: Date }) => {\n      setOpen(false);\n      onChange(date.getTime() / 1000);\n    },\n    [setOpen, onChange]\n  );\n\n  const timestampLabel = timestamp ? format(timestamp * 1000, 'hh:mm') : 'No time selected';\n\n  return (\n    <>\n      <List.Item\n        title={label || timestampLabel}\n        disabled={!!disabled}\n        description={!label ? null : timestampLabel}\n        left={() => <List.Icon color={color} icon=\"calendar\" />}\n        onPress={() => setOpen(true)}\n      />\n\n      <Modal visible={open}>\n        <TimePickerModal\n          hours={DateTime.fromSeconds(timestamp || DateTime.local().toSeconds()).hour}\n          minutes={DateTime.fromSeconds(timestamp || DateTime.local().toSeconds()).minute}\n          locale=\"en\"\n          visible={open}\n          onDismiss={onDismissSingle}\n          onConfirm={(time) =>\n            onConfirm({\n              date: DateTime.local()\n                .set({\n                  hour: time.hours,\n                  minute: time.minutes,\n                })\n                .toJSDate(),\n            })\n          }\n          label={label}\n        />\n      </Modal>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Button, Dialog } from 'react-native-paper';\nimport TimePicker from 'app/components/input/time_picker/TimePicker';\n\nexport interface ITimePickerDialog {\n  open: boolean;\n  onChange(time: number): void;\n  onClose(): void;\n}\n\nexport function TimePickerDialog(props: ITimePickerDialog) {\n  const { open, onClose, onChange } = props;\n  const [time, setTime] = React.useState<number>();\n  const [loading, setLoading] = React.useState(false);\n\n  const onSubmit = React.useCallback(() => {\n    try {\n      setLoading(true);\n      if (time) {\n        onChange(time);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [onChange, time]);\n\n  return (\n    <Dialog visible={open} dismissable onDismiss={onClose}>\n      <Dialog.Title>Dispatch Aircraft</Dialog.Title>\n      <Dialog.Content>\n        <TimePicker onChange={setTime} timestamp={time} label=\"Take-off\" />\n      </Dialog.Content>\n      <Dialog.Actions>\n        <Button disabled={loading} onPress={onClose}>\n          Cancel\n        </Button>\n        <Button disabled={loading} onPress={onSubmit}>\n          Dispatch\n        </Button>\n      </Dialog.Actions>\n    </Dialog>\n  );\n}\n","import * as React from 'react';\nimport noop from 'lodash/noop';\nimport { uninitializedHandler } from 'app/api/crud/factory';\nimport { useLoad } from 'app/api/crud/useLoad';\nimport type { IDialogContextSubstate } from '../hooks/useDialog';\n\ninterface ILoadContext {\n  load: ReturnType<typeof useLoad>;\n  dialogs: {\n    timepicker: IDialogContextSubstate<object>;\n  };\n}\n\nexport const INITIAL_CONTEXT: ILoadContext = {\n  load: {\n    called: false,\n    loading: false,\n    load: null,\n    update: { loading: false, mutate: uninitializedHandler as never },\n    updateGCA: uninitializedHandler as never,\n    updateLoadMaster: uninitializedHandler as never,\n    updatePlane: uninitializedHandler as never,\n    updatePilot: uninitializedHandler as never,\n    manifestUser: uninitializedHandler as never,\n    refetch: uninitializedHandler as never,\n    fetchMore: uninitializedHandler as never,\n    canDispatchAircraft: false,\n    createAircraftDispatchAction: noop as never,\n    dispatchAtTime: uninitializedHandler as never,\n    dispatchInMinutes: uninitializedHandler as never,\n    markAsLanded: uninitializedHandler as never,\n    cancel: uninitializedHandler as never,\n    updateLoadState: uninitializedHandler as never,\n  },\n  dialogs: {\n    timepicker: {\n      visible: false,\n      close: noop,\n      open: noop,\n    },\n  },\n};\n\nexport const LoadContext = React.createContext<ILoadContext>(INITIAL_CONTEXT);\n\nexport function useLoadContext() {\n  return React.useContext(LoadContext);\n}\n","import * as React from 'react';\nimport type { LoadQueryVariables } from 'app/api/operations';\nimport { useLoad } from 'app/api/crud';\nimport { TimePickerDialog } from './TimePickerDialog';\nimport { LoadContext } from './context ';\nimport createUseDialog from '../hooks/useDialog';\n\nconst useTimePickerDialog = createUseDialog();\n\nfunction LoadContextProvider(props: React.PropsWithChildren<Partial<LoadQueryVariables>>) {\n  const { children, ...variables } = props;\n  const load = useLoad(variables);\n  const timepicker = useTimePickerDialog();\n  const dialogs = React.useMemo(() => ({ timepicker }), [timepicker]);\n\n  const onChangeDispatchTime = React.useCallback(\n    (time: number) => {\n      load.dispatchAtTime(time).then(timepicker.close);\n    },\n    [load, timepicker.close]\n  );\n\n  const context = React.useMemo(\n    () => ({\n      load,\n      dialogs,\n    }),\n    [load, dialogs]\n  );\n  return (\n    <LoadContext.Provider value={context}>\n      {children}\n      <TimePickerDialog\n        open={timepicker.visible}\n        onClose={timepicker.close}\n        onChange={onChangeDispatchTime}\n      />\n    </LoadContext.Provider>\n  );\n}\n\nexport function withLoadContext<T extends object>(Component: React.ComponentType<T>) {\n  return function WrappedWithLoad(props: T & Partial<LoadQueryVariables>) {\n    const { id, ...rest } = props;\n    return (\n      <LoadContextProvider {...{ id }}>\n        <Component {...(rest as T)} />\n      </LoadContextProvider>\n    );\n  };\n}\n\nexport { LoadContextProvider };\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Control } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { AircraftFields } from './useForm';\n\nexport interface IAircraftFormProps {\n  control: Control<AircraftFields>;\n}\nexport default function AircraftForm(props: IAircraftFormProps) {\n  const { control } = props;\n  return (\n    <>\n      <FormTextField {...{ control }} name=\"name\" mode=\"outlined\" label=\"Name\" />\n\n      <FormTextField {...{ control }} name=\"registration\" label=\"Registration\" />\n      <FormNumberField {...{ control }} name=\"minSlots\" label=\"Min slots\" />\n\n      <FormNumberField\n        {...{ control }}\n        name=\"maxSlots\"\n        label=\"Max slots\"\n        helperText=\"Maximum amount of jumpers who can be manifested on one load\"\n      />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\n\nimport { isEqual } from 'lodash';\nimport { useAircrafts } from 'app/api/crud/useAircrafts';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type AircraftFields = {\n  id?: string;\n  name?: string;\n  registration: string;\n  minSlots?: number;\n  maxSlots: number;\n  basicEmptyWeight?: number;\n  maxTakeOffWeight?: number;\n\n  // FIXME: Should be AVGAS/Jetfuel\n  fuelType?: string;\n};\n\nexport const aircraftValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().nullable().default(null),\n  registration: yup.string().required('Registration is required'),\n  minSlots: yup.number().integer().default(1).min(1, 'Minimum slots must be greater than 0'),\n  maxSlots: yup\n    .number()\n    .integer()\n    .required('Maximum slots is required')\n    .min(1, 'Maximum slots must be greater than 0'),\n  basicEmptyWeight: yup.number().default(0).min(0, 'Basic empty weight must be greater than 0'),\n  maxTakeOffWeight: yup\n    .number()\n    .default(0)\n    .min(0, 'Maximum take off weight must be greater than 0'),\n  fuelType: yup.string().nullable().default(null),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<AircraftFields> = {\n  name: '',\n  registration: '',\n  minSlots: 1,\n  maxSlots: 4,\n  basicEmptyWeight: 0,\n  maxTakeOffWeight: 0,\n  fuelType: undefined,\n};\n\nexport interface IUseAircraftFormOpts {\n  initial?: Partial<AircraftFields>;\n  onSuccess?(aircraft: PlaneEssentialsFragment): void;\n}\n\nexport default function useAircraftForm(opts: IUseAircraftFormOpts) {\n  const { initial, onSuccess } = opts;\n  const notify = useNotifications();\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<AircraftFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(aircraftValidation),\n    shouldUnregister: false,\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n  }, [register]);\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { create, update } = useAircrafts();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: AircraftFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await aircraftValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await update(Number(fields.id), {\n              name: validated.name,\n              dropzoneId: Number(dropzone?.id),\n              maxSlots: validated.maxSlots,\n              minSlots: validated.minSlots,\n              registration: validated.registration,\n            })\n          : await create({\n              name: validated.name,\n              dropzoneId: Number(dropzone?.id),\n              maxSlots: validated.maxSlots,\n              minSlots: validated.minSlots,\n              registration: validated.registration,\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              switch (field) {\n                case 'name':\n                case 'maxSlots':\n                case 'minSlots':\n                case 'registration':\n                  setError(field, { message });\n                  break;\n                default:\n                  break;\n              }\n            });\n          }\n          if ('aircraft' in response && response.aircraft) {\n            notify.success('Aircraft saved');\n            onSuccess?.(response.aircraft);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, onSuccess, create, update]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport PlaneForm from './AircraftForm';\nimport useAircraftForm, { AircraftFields } from './useForm';\n\nexport interface IPlaneDialogProps {\n  open: boolean;\n  initial?: Partial<AircraftFields>;\n  original?: PlaneEssentialsFragment;\n  onClose(): void;\n}\n\nexport default function AircraftDialog(props: IPlaneDialogProps) {\n  const { open, onClose, initial, original } = props;\n  const { control, loading, onSubmit } = useAircraftForm({\n    initial: {\n      id: original?.id || initial?.id || undefined,\n      name: original?.name || initial?.name,\n      registration: original?.registration || original?.registration || undefined,\n      minSlots: original?.minSlots || original?.minSlots || undefined,\n      maxSlots: original?.maxSlots || original?.maxSlots,\n    },\n    onSuccess: onClose,\n  });\n\n  const snapPoints = React.useMemo(() => [580, '80%'], []);\n\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit aircraft' : 'New aircraft'}\n      open={open}\n      snapPoints={snapPoints}\n      buttonLabel=\"Save\"\n      buttonAction={onSubmit}\n    >\n      <PlaneForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IAltitudeSelectProps {\n  value: number;\n  error?: string | null;\n  onChange(value: number): void;\n}\nfunction AltitudeSelect(props: IAltitudeSelectProps) {\n  const { value, onChange, error } = props;\n\n  console.debug('alt', { value, props });\n  return (\n    <Select\n      label=\"Altitude\"\n      {...{ value, onChange, error }}\n      options={[\n        { label: 'Hop n Pop', value: 4000, icon: 'parachute' },\n        { label: 'Height', value: 14000, icon: 'airplane-takeoff' },\n        { label: 'Other', value: -1, icon: 'parachute' },\n      ]}\n    />\n  );\n}\n\nexport const AltitudeSelectField = withHookForm(AltitudeSelect);\n\nexport default AltitudeSelect;\n","import { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { Title } from 'react-native-paper';\nimport { DropzoneUser, Permission } from '../../../api/schema.d';\nimport { useAppSelector } from '../../../state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IDropzoneUserSelect {\n  requiredPermissions?: Permission[];\n  value: DropzoneUser | null;\n  label: string;\n  onChange(dzUser: DropzoneUser): void;\n}\n\nfunction DropzoneUserSelect(props: IDropzoneUserSelect) {\n  const { requiredPermissions, value, onChange, label } = props;\n  const globalState = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: globalState.currentDropzoneId?.toString() as string,\n      permissions: requiredPermissions,\n    },\n  });\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  return (\n    <>\n      <Title>{label}</Title>\n      <Select<DropzoneUserEssentialsFragment>\n        value={selected}\n        compare={(a, b) => a?.id === b?.id}\n        options={options}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nexport const DropzoneUserSelectField = withHookForm(DropzoneUserSelect);\n\nexport default DropzoneUserSelect;\n","import { FederationEssentialsFragment } from 'app/api/operations';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IFederationSelect {\n  value?: FederationEssentialsFragment | null;\n  onChange(jt: FederationEssentialsFragment): void;\n}\n\nfunction FederationSelect(props: IFederationSelect) {\n  const { value, onChange } = props;\n\n  const { data } = useFederationsQuery();\n\n  React.useEffect(() => {\n    if (data?.federations?.length === 1 && !value) {\n      onChange(data.federations[0]);\n    }\n  }, [data?.federations, onChange, value]);\n\n  const options = React.useMemo(\n    () =>\n      data?.federations?.map((node) => ({\n        label: node?.name || '',\n        value: node as FederationEssentialsFragment,\n      })) || [],\n    [data?.federations]\n  );\n\n  const selected = React.useMemo(\n    () => options?.map((option) => option.value).find((node) => node?.id === value?.id),\n    [options, value?.id]\n  );\n\n  return (\n    <>\n      <List.Subheader>Federation</List.Subheader>\n      <Select<FederationEssentialsFragment>\n        value={selected}\n        options={options}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nexport const FederationSelectField = withHookForm(FederationSelect);\n\nexport default FederationSelect;\n","import { JumpTypeEssentialsFragment } from 'app/api/operations';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IJumpTypeSelect {\n  value?: JumpTypeEssentialsFragment | null;\n  allowedForDropzoneUserIds?: number[] | null;\n  onChange(jt: JumpTypeEssentialsFragment): void;\n}\n\nfunction JumpTypeSelect(props: IJumpTypeSelect) {\n  const { allowedForDropzoneUserIds, onChange, value } = props;\n  const { currentDropzoneId } = useAppSelector((state) => state.global);\n\n  const { data } = useAllowedJumpTypesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      allowedForDropzoneUserIds: allowedForDropzoneUserIds as number[],\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.jumpTypes?.map((node) => ({\n        label: node?.name || '',\n        value: node as JumpTypeEssentialsFragment,\n      })) || [],\n    [data?.jumpTypes]\n  );\n\n  const selected = React.useMemo(\n    () => options?.map((option) => option.value).find((node) => node?.id === value?.id),\n    [options, value?.id]\n  );\n  return (\n    <Select<JumpTypeEssentialsFragment>\n      label=\"Jump type\"\n      value={selected}\n      options={options}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const JumpTypeSelectField = withHookForm(JumpTypeSelect);\n\nexport default JumpTypeSelect;\n","import { LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  onChange(jt: LicenseEssentialsFragment): void;\n}\n\nfunction LicenseSelect(props: ILicenseSelect) {\n  const { onChange, value, federationId } = props;\n\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.licenses.map((node) => ({\n        label: node?.name || '',\n        value: node as LicenseEssentialsFragment,\n      })) || [],\n    [data?.licenses]\n  );\n\n  const selected = React.useMemo(() => value, [value]);\n  return (\n    <Select<LicenseEssentialsFragment>\n      label=\"License\"\n      value={selected}\n      options={options}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const LicenseSelectField = withHookForm(LicenseSelect);\n\nexport default LicenseSelect;\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { usePlanesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IPlaneSelect {\n  value?: PlaneEssentialsFragment | null;\n  onCHange(plane: PlaneEssentialsFragment): void;\n}\nfunction PlaneSelect(props: IPlaneSelect) {\n  const { onCHange, value } = props;\n  const { dropzone: currentDropzone } = useDropzoneContext();\n\n  const { data } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n    },\n  });\n\n  const selected = React.useMemo(\n    () => data?.planes?.find((node) => node?.id === value?.id),\n    [data?.planes, value?.id]\n  );\n  const options = React.useMemo(\n    () =>\n      data?.planes?.map((node) => ({\n        label: node?.name || '',\n        value: node as PlaneEssentialsFragment,\n      })) || [],\n    [data?.planes]\n  );\n\n  return <Select<PlaneEssentialsFragment> value={selected} options={options} onChange={onCHange} />;\n}\n\nexport const PlaneSelectField = withHookForm(PlaneSelect);\n\nexport default PlaneSelect;\n","import { RoleEssentialsFragment } from 'app/api/operations';\nimport { useRolesQuery } from 'app/api/reflection';\nimport startCase from 'lodash/startCase';\nimport * as React from 'react';\nimport { useAppSelector } from '../../../state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface IRoleSelect {\n  value?: RoleEssentialsFragment | null;\n  disabled?: boolean;\n  onChange(jt: RoleEssentialsFragment): void;\n}\n\nfunction RoleSelect(props: IRoleSelect) {\n  const { onChange, value } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useRolesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzone?.roles?.map(({ permissions, ...node }) => ({\n        label: startCase(node?.name || ''),\n        value: node,\n      })) || [],\n    [data?.dropzone?.roles]\n  );\n\n  return (\n    <Select<RoleEssentialsFragment>\n      label=\"Access level\"\n      compare={(a, b) => a?.id === b?.id}\n      {...{ options, value, onChange }}\n      onChange={onChange}\n    />\n  );\n}\n\nexport const RoleSelectField = withHookForm(RoleSelect);\n\nexport default RoleSelect;\n","import * as React from 'react';\nimport { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useTicketTypesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport Select from '../select/Select';\nimport { withHookForm } from '../withHookForm';\n\ninterface ITicketTypeSelect {\n  value?: TicketTypeEssentialsFragment | null;\n  required?: boolean;\n  allowManifestingSelf?: boolean | null;\n  onChange(jt: TicketTypeEssentialsFragment): void;\n}\n\nfunction TicketTypeSelect(props: ITicketTypeSelect) {\n  const { allowManifestingSelf, value, onChange } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n  const { data } = useTicketTypesQuery({\n    variables: {\n      dropzone: currentDropzoneId?.toString() as string,\n      allowManifestingSelf,\n    },\n  });\n\n  const options = React.useMemo(\n    () =>\n      data?.ticketTypes?.map((node) => ({\n        label: node?.name || '',\n        value: node as TicketTypeEssentialsFragment,\n      })) || [],\n    [data?.ticketTypes]\n  );\n  return <Select<TicketTypeEssentialsFragment> {...{ value, options, onChange }} />;\n}\n\nexport const TicketTypeSelectField = withHookForm(TicketTypeSelect);\n\nexport default TicketTypeSelect;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Divider } from 'react-native-paper';\nimport { Control, useWatch } from 'react-hook-form';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { FederationSelectField, RoleSelectField } from 'app/components/input/dropdown_select';\nimport { LicenseChipSelectField } from 'app/components/input/chip_select';\n\nimport { UserFields } from './useForm';\n\ninterface IGhostFormProps {\n  control: Control<UserFields>;\n}\nexport default function GhostForm(props: IGhostFormProps) {\n  const { control } = props;\n\n  const { federation, license } = useWatch({ control });\n\n  return (\n    <>\n      <FormTextField label=\"Name\" name=\"name\" {...{ control }} />\n\n      <FormTextField label=\"Nickname\" name=\"nickname\" placeholder=\"Optional\" {...{ control }} />\n\n      <FormTextField label=\"Email\" name=\"email\" {...{ control }} />\n      <FormTextField label=\"Phone number\" name=\"phone\" {...{ control }} />\n\n      <FormNumberField label=\"Exit weight (kg)\" name=\"exitWeight\" {...{ control }} />\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelectField {...{ control }} name=\"federation\" />\n\n        {(license?.federation?.id || federation?.id) && (\n          <LicenseChipSelectField name=\"license\" {...{ control }} />\n        )}\n      </View>\n      <RoleSelectField name=\"role\" {...{ control }} />\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport {\n  FederationEssentialsFragment,\n  LicenseDetailsFragment,\n  RoleEssentialsFragment,\n  UserEssentialsFragment,\n} from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { useUserProfile } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type UserFields = {\n  id?: string | null;\n  name: string;\n  phone?: string | null;\n  federationUid?: string | null;\n  nickname: string;\n  email: string;\n  exitWeight: number;\n  federation?: FederationEssentialsFragment;\n  license?: LicenseDetailsFragment;\n  role?: RoleEssentialsFragment;\n};\n\nexport const ghostValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().required('Name is required'),\n  nickname: yup.string().optional().nullable(),\n  email: yup.string().required('Email is required to invite the user'),\n  phone: yup.string().optional().nullable(),\n  federationUid: yup.string().optional().nullable(),\n  exitWeight: yup\n    .number()\n    .required('Exit weight is required')\n    .min(40, 'Exit weight must be more than 40kg')\n    .default(50),\n  federation: yup.object().required('Federation must be selected'),\n  license: yup.object().required('All jumpers must have a license'),\n  role: yup.object().required('You must select a role'),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<UserFields> = {\n  name: '',\n  nickname: '',\n  email: '',\n  role: undefined,\n  license: undefined,\n  exitWeight: 50,\n  federation: undefined,\n  id: null,\n  phone: '',\n  federationUid: null,\n};\n\nexport interface IUseUserFormOpts {\n  initial?: Partial<UserFields>;\n  onSuccess?(user: UserEssentialsFragment): void;\n}\n\nexport default function useUserForm(opts: IUseUserFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<UserFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(ghostValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n    register('license');\n    register('federation');\n    register('role');\n  }, [register]);\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { create } = useUserProfile();\n  const notify = useNotifications();\n\n  const [{ loading }, createUser] = useAsyncFn(\n    async (fields: UserFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await ghostValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = await create({\n          dropzone: Number(dropzone.id),\n          email: validated.email,\n          name: validated.name,\n          exitWeight: validated.exitWeight,\n          role: Number(validated.role?.id),\n          license: Number(validated?.license?.id),\n          federationNumber: validated?.federationUid,\n          phone: validated?.phone,\n        });\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              if (Object.keys(defaultValues).includes(field)) {\n                setError(field as keyof typeof defaultValues, { message });\n              }\n            });\n          }\n          if ('user' in response && response.user) {\n            notify.success(`${validated.name} has been invited`);\n            onSuccess?.(response.user);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, defaultValues, create]\n  );\n\n  const { control, setValue } = methods;\n  const { federation, license } = useWatch({ control });\n\n  React.useEffect(() => {\n    if (license?.federation && license?.federation?.id !== federation?.id) {\n      setValue('federation', license.federation as FederationEssentialsFragment);\n    }\n  }, [federation?.id, license?.federation, setValue]);\n\n  const onSubmit = React.useMemo(() => handleSubmit(createUser), [createUser, handleSubmit]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport GhostForm from './Form';\nimport useForm, { UserFields } from './useForm';\n\nexport interface ICreateGhostDialog {\n  open?: boolean;\n  original?: DropzoneUserEssentialsFragment;\n  initial?: Partial<UserFields>;\n  onClose(): void;\n}\nexport default function CreateGhostDialog(props: ICreateGhostDialog) {\n  const { open, onClose, initial, original } = props;\n  const { control, loading, onSubmit, reset } = useForm({\n    initial: {\n      name: original?.user?.name || initial?.name,\n      nickname: original?.user?.nickname || initial?.nickname,\n      phone: original?.user?.phone || initial?.phone,\n      license: original?.license || initial?.license,\n      federation: initial?.federation,\n      email: original?.user?.email || initial?.email,\n      role: original?.role || initial?.role,\n      id: original?.id || initial?.id || undefined,\n    },\n    onSuccess: onClose,\n  });\n  React.useEffect(() => {\n    if (!open) {\n      reset();\n    }\n  }, [open, reset]);\n\n  const snapPoints = React.useMemo(() => [400, 740], []);\n  return (\n    <DialogOrSheet\n      title=\"Pre-register user\"\n      {...{ open, loading, onClose, snapPoints }}\n      buttonAction={onSubmit}\n      buttonLabel=\"Create\"\n    >\n      <GhostForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, useTheme, Switch as SwitchComponent, List } from 'react-native-paper';\nimport { withHookForm } from '../withHookForm';\n\ntype Extract<T> = T extends React.ComponentType<infer U> ? U : never;\ninterface ISwitchProps\n  extends Omit<Extract<typeof SwitchComponent>, 'onChange' | 'onChangeText' | 'error'> {\n  label?: string;\n  error?: string | null;\n  helperText?: string | null;\n  onChange?(value: boolean): void;\n}\n\nfunction Switch(props: ISwitchProps) {\n  const { error, label, helperText, onChange, style, ...rest } = props;\n  const theme = useTheme();\n  return (\n    <>\n      <List.Item\n        title={label}\n        right={() => (\n          <SwitchComponent\n            style={StyleSheet.flatten([\n              styles.field,\n              { backgroundColor: theme.colors.surface },\n              style,\n            ])}\n            {...rest}\n            onValueChange={onChange}\n          />\n        )}\n      />\n      <HelperText style={styles.helperText} type={error ? 'error' : 'info'}>\n        {error || helperText || ' '}\n      </HelperText>\n    </>\n  );\n}\n\nexport const SwitchField = withHookForm(Switch);\n\nexport default Switch;\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  helperText: {\n    marginBottom: 16,\n  },\n});\n","import { useTicketTypeExtrasLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { List, Divider } from 'react-native-paper';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport { Control, useWatch } from 'react-hook-form';\nimport { AltitudeSelectField } from 'app/components/input/dropdown_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport { SwitchField } from 'app/components/input/switch/Switch';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { TicketTypeFields } from './useForm';\n\ninterface ITicketTypeFormProps {\n  control: Control<TicketTypeFields>;\n}\n\nexport default function TicketTypeForm(props: ITicketTypeFormProps) {\n  const { control } = props;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { altitude } = useWatch({ control });\n  const [getTicketAddons, query] = useTicketTypeExtrasLazyQuery();\n  const { data } = query;\n\n  React.useEffect(() => {\n    if (dropzone?.id) {\n      getTicketAddons({ variables: { dropzoneId: dropzone?.id } });\n    }\n  }, [dropzone?.id, getTicketAddons]);\n\n  const { extras: selectedAddons } = useWatch({ control });\n  console.debug({ altitude });\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Name\"\n        name=\"name\"\n        helperText=\"Name of the ticket users will see\"\n      />\n\n      <FormNumberField\n        {...{ control }}\n        label=\"Price\"\n        name=\"cost\"\n        helperText=\"Base cost without extra ticket addons\"\n      />\n      <View style={{ width: '100%' }}>\n        <AltitudeSelectField {...{ control }} name=\"altitude\" />\n\n        {(!altitude || ![4000, 14000].includes(altitude)) && (\n          <FormNumberField {...{ control }} label=\"Custom altitude\" name=\"altitude\" />\n        )}\n\n        <SwitchField\n          {...{ control }}\n          name=\"isTandem\"\n          label=\"Tandem\"\n          helperText=\"Allow also manifesting a passenger when using this ticket type\"\n        />\n\n        <SwitchField\n          {...{ control }}\n          name=\"allowManifestingSelf\"\n          label=\"Public manifesting\"\n          helperText=\"Allow this ticket to be used for public manifesting, e.g not tandems\"\n        />\n        <Divider />\n        <List.Subheader>Enabled ticket add-ons</List.Subheader>\n        <ChipSelectField<TicketTypeFields, 'extras'>\n          {...{ control }}\n          allowEmpty\n          defaultValue={[]}\n          isSelected={(item) =>\n            selectedAddons\n              ?.map(({ id }) => id)\n              .includes((item as TicketTypeExtraEssentialsFragment)?.id) || false\n          }\n          items={(data?.extras as TicketTypeExtraEssentialsFragment[]) || []}\n          renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n            `${item.name} (${item.cost})`\n          }\n          name=\"extras\"\n        />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  TicketTypeAddonEssentialsFragment,\n  TicketTypeEssentialsFragment,\n} from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { useTickets } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type TicketTypeFields = {\n  id?: string;\n  name: string;\n  cost: number;\n  altitude: number;\n  allowManifestingSelf: boolean;\n  isTandem: boolean;\n  extras: TicketTypeAddonEssentialsFragment[];\n};\n\nexport const ticketTypeValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().required('Name is required'),\n  cost: yup.number().required('Cost is required').min(0, 'Cost must be greater than 0'),\n  allowManifestingSelf: yup.boolean().default(false),\n  altitude: yup.number().default(14000).required().default(14000),\n  extras: yup.array().of(yup.object()),\n  isTandem: yup.boolean().default(false),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<TicketTypeFields> = {\n  name: '',\n  cost: 30,\n  allowManifestingSelf: true,\n  altitude: 14000,\n  extras: [],\n  id: undefined,\n  isTandem: false,\n};\n\nexport interface IUseTicketTypeFormOpts {\n  initial?: Partial<TicketTypeFields>;\n  onSuccess?(ticketType: TicketTypeEssentialsFragment): void;\n}\n\nexport default function useTicketTypeForm(opts: IUseTicketTypeFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<TicketTypeFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(ticketTypeValidation),\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n    register('altitude');\n  }, [register]);\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { createTicketType, updateTicketType } = useTickets();\n  const notify = useNotifications();\n\n  const [{ loading }, onCreateOrder] = useAsyncFn(\n    async (fields: TicketTypeFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await ticketTypeValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await updateTicketType(Number(fields.id), {\n              name: validated.name,\n              cost: validated.cost,\n              allowManifestingSelf: validated.allowManifestingSelf,\n              altitude: validated.altitude,\n              extraIds: (validated.extras as unknown as TicketTypeAddonEssentialsFragment[]).map(\n                (e) => Number(e.id)\n              ),\n              isTandem: validated.isTandem,\n            })\n          : await createTicketType({\n              name: validated.name,\n              cost: validated.cost,\n              allowManifestingSelf: validated.allowManifestingSelf,\n              altitude: validated.altitude,\n              extraIds: (validated.extras as unknown as TicketTypeAddonEssentialsFragment[])?.map(\n                (e) => Number(e.id)\n              ),\n              isTandem: validated.isTandem,\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              if (Object.keys(defaultValues).includes(field)) {\n                setError(field as keyof typeof defaultValues, { message });\n              }\n            });\n          }\n          if ('ticketType' in response && response.ticketType) {\n            notify.success('Ticket saved');\n            onSuccess?.(response.ticketType);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone?.id, setError, notify, onSuccess, createTicketType, updateTicketType, defaultValues]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onCreateOrder), [handleSubmit, onCreateOrder]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { TicketTypeDetailsFragment } from 'app/api/operations';\nimport TicketTypeForm from './TicketTypeForm';\nimport useForm, { TicketTypeFields } from './useForm';\n\nexport interface ITicketTypeDialog {\n  open: boolean;\n  original?: TicketTypeDetailsFragment;\n  initial?: Partial<TicketTypeFields>;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeDialog) {\n  const { open, initial, original, onClose } = props;\n  const { control, loading, onSubmit, reset } = useForm({\n    initial: {\n      name: original?.name || initial?.name,\n      cost: original?.cost || initial?.cost,\n      allowManifestingSelf: original?.allowManifestingSelf || initial?.allowManifestingSelf,\n      altitude: original?.altitude || initial?.altitude || 14000,\n      extras: original?.extras || initial?.extras,\n      id: original?.id || initial?.id || undefined,\n      isTandem: original?.isTandem || initial?.isTandem,\n    },\n    onSuccess: onClose,\n  });\n\n  React.useEffect(() => {\n    if (!open) {\n      reset();\n    }\n  }, [open, reset]);\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit ticket' : 'New ticket'}\n      snapPoints={snapPoints}\n      buttonAction={onSubmit}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { List } from 'react-native-paper';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport {\n  TicketTypeEssentialsFragment,\n  TicketTypeExtraEssentialsFragment,\n} from 'app/api/operations';\nimport { useTickets } from 'app/api/crud';\nimport { Control, useWatch } from 'react-hook-form';\nimport { ChipSelectField } from 'app/components/input/chip_select';\nimport { FormNumberField } from 'app/components/input/number_input';\nimport type { TicketTypeAddonFields } from './useForm';\n\ninterface ITicketTypeAddonFormProps {\n  control: Control<TicketTypeAddonFields>;\n}\n\nexport default function TicketTypeForm(props: ITicketTypeAddonFormProps) {\n  const { control } = props;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { ticketTypes } = useTickets({ dropzone: dropzone?.id });\n\n  const { ticketTypes: selectedTicketTypes } = useWatch({ control });\n  return (\n    <>\n      <FormTextField\n        {...{ control }}\n        label=\"Name\"\n        name=\"name\"\n        helperText=\"Name of the ticket users will see\"\n      />\n\n      <FormNumberField\n        {...{ control }}\n        label=\"Price\"\n        name=\"cost\"\n        helperText=\"Cost to add this addon to a ticket\"\n      />\n      <View style={{ width: '100%' }}>\n        <List.Subheader>Compatible tickets</List.Subheader>\n        <ChipSelectField<TicketTypeAddonFields, 'ticketTypes'>\n          {...{ control }}\n          allowEmpty\n          defaultValue={[]}\n          isSelected={(item) =>\n            selectedTicketTypes\n              ?.map(({ id }) => id)\n              .includes((item as TicketTypeEssentialsFragment)?.id) || false\n          }\n          items={ticketTypes as TicketTypeEssentialsFragment[]}\n          renderItemLabel={(item: TicketTypeExtraEssentialsFragment) =>\n            `${item.name} (${item.cost})`\n          }\n          name=\"ticketTypes\"\n        />\n      </View>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  TicketTypeAddonDetailsFragment,\n  TicketTypeAddonEssentialsFragment,\n  TicketTypeEssentialsFragment,\n} from 'app/api/operations';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { isEqual } from 'lodash';\nimport { useTickets } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport type TicketTypeAddonFields = {\n  id?: string;\n  name: string;\n  cost: number;\n  ticketTypes: TicketTypeEssentialsFragment[];\n};\n\nexport const ticketAddonValidation = yup.object({\n  id: yup.string().nullable().default(null),\n  name: yup.string().required('Name is required'),\n  cost: yup.number().required('Cost is required').min(0, 'Cost must be greater than 0'),\n  allowManifestingSelf: yup.boolean().default(false),\n  altitude: yup.number().required().default(14000),\n  ticketTypes: yup.array().of(yup.object()),\n  isTandem: yup.boolean().default(false),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<TicketTypeAddonFields> = {\n  name: '',\n  cost: 30,\n  ticketTypes: [],\n  id: undefined,\n};\n\nexport interface IUseTicketTypeFormOpts {\n  initial?: Partial<TicketTypeAddonFields>;\n  onSuccess?(ticketTypeAddon: TicketTypeAddonDetailsFragment): void;\n}\n\nexport default function useTicketTypeForm(opts: IUseTicketTypeFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(() => ({ ...EMPTY_FORM_VALUES, ...initial }), [initial]);\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n\n  const methods = useForm<TicketTypeAddonFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(ticketAddonValidation),\n    shouldUnregister: false,\n  });\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const { reset, register } = methods;\n  React.useEffect(() => {\n    register('id');\n  }, [register]);\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [defaultValues, reset]);\n\n  const { handleSubmit, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const { createTicketTypeAddon, updateTicketTypeAddon } = useTickets();\n  const notify = useNotifications();\n\n  const [{ loading }, onSave] = useAsyncFn(\n    async (fields: TicketTypeAddonFields) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const validated = await ticketAddonValidation.validate(fields, { abortEarly: false });\n      try {\n        const response = fields.id\n          ? await updateTicketTypeAddon(Number(fields.id), {\n              name: validated.name,\n              cost: validated.cost,\n              ticketTypeIds: (\n                validated.ticketTypes as unknown as TicketTypeAddonEssentialsFragment[]\n              )?.map((e) => Number(e.id)),\n            })\n          : await createTicketTypeAddon({\n              name: validated.name,\n              cost: validated.cost,\n              ticketTypeIds: (\n                validated.ticketTypes as unknown as TicketTypeAddonEssentialsFragment[]\n              )?.map((e) => Number(e.id)),\n            });\n\n        if (response) {\n          if ('fieldErrors' in response) {\n            response.fieldErrors?.forEach(({ field, message }) => {\n              if (Object.keys(defaultValues).includes(field)) {\n                setError(field as keyof typeof defaultValues, { message });\n              }\n            });\n          }\n          if ('ticketTypeAddon' in response && response.ticketTypeAddon) {\n            notify.success('Ticket addon saved');\n            onSuccess?.(response.ticketTypeAddon);\n          }\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    },\n    [\n      dropzone?.id,\n      setError,\n      notify,\n      onSuccess,\n      createTicketTypeAddon,\n      updateTicketTypeAddon,\n      defaultValues,\n    ]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onSave), [handleSubmit, onSave]);\n\n  return React.useMemo(() => ({ ...methods, onSubmit, loading }), [methods, onSubmit, loading]);\n}\n","import * as React from 'react';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { TicketTypeAddonDetailsFragment } from 'app/api/operations';\nimport TicketTypeForm from './TicketAddonForm';\nimport useForm from './useForm';\nimport type { TicketTypeAddonFields } from './useForm';\n\nexport interface ITicketTypeAddonDialog {\n  open: boolean;\n  original?: TicketTypeAddonDetailsFragment;\n  initial?: Partial<TicketTypeAddonFields>;\n  onClose(): void;\n}\n\nexport default function TicketTypeDialog(props: ITicketTypeAddonDialog) {\n  const { open, initial, original, onClose } = props;\n  const { control, loading, onSubmit } = useForm({\n    initial: {\n      name: original?.name || initial?.name,\n      cost: original?.cost || initial?.cost,\n      ticketTypes: original?.ticketTypes || initial?.ticketTypes || [],\n      id: original?.id || initial?.id || undefined,\n    },\n    onSuccess: onClose,\n  });\n\n  const snapPoints = React.useMemo(() => [550, 650], []);\n  return (\n    <DialogOrSheet\n      {...{ open, loading, onClose }}\n      title={original?.id ? 'Edit ticket' : 'New ticket'}\n      snapPoints={snapPoints}\n      buttonAction={onSubmit}\n      buttonLabel=\"Save\"\n    >\n      <TicketTypeForm {...{ control }} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport type { DropzoneQueryVariables } from 'app/api/operations';\nimport { useDropzone } from 'app/api/crud/useDropzone';\nimport AircraftSheet from 'app/forms/aircraft/Dialog';\nimport CreateUserSheet from 'app/forms/create_user/Dialog';\nimport TicketTypeSheet from 'app/forms/ticket_type/Dialog';\nimport TicketTypeAddonSheet from 'app/forms/ticket_type_addon/Dialog';\nimport type { IPlaneDialogProps } from 'app/forms/aircraft/Dialog';\nimport type { ITicketTypeDialog } from 'app/forms/ticket_type/Dialog';\nimport type { ITicketTypeAddonDialog } from 'app/forms/ticket_type_addon/Dialog';\nimport type { ICreateGhostDialog } from 'app/forms/create_user/Dialog';\nimport { DropzoneContext } from './context';\nimport createUseDialog from '../hooks/useDialog';\n\nconst useAircraftDialog = createUseDialog<Pick<IPlaneDialogProps, 'initial' | 'original'>>();\nconst useCreateUserDialog = createUseDialog<Pick<ICreateGhostDialog, 'initial' | 'original'>>();\nconst useTicketTypeDialog = createUseDialog<Pick<ITicketTypeDialog, 'initial' | 'original'>>();\nconst useTicketTypeAddonDialog =\n  createUseDialog<Pick<ITicketTypeAddonDialog, 'initial' | 'original'>>();\n\nfunction DropzoneContextProvider(props: React.PropsWithChildren<Partial<DropzoneQueryVariables>>) {\n  const { children, ...variables } = props;\n  const dropzone = useDropzone(variables);\n  const aircraft = useAircraftDialog();\n  const ticketType = useTicketTypeDialog();\n  const ticketTypeAddon = useTicketTypeAddonDialog();\n  const createUser = useCreateUserDialog();\n  const dialogs = React.useMemo(\n    () => ({ aircraft, ticketType, ticketTypeAddon, createUser }),\n    [aircraft, ticketType, ticketTypeAddon, createUser]\n  );\n\n  const context = React.useMemo(\n    () => ({\n      dropzone,\n      dialogs,\n    }),\n    [dropzone, dialogs]\n  );\n  return (\n    <DropzoneContext.Provider value={context}>\n      {children}\n      <AircraftSheet {...aircraft.state} onClose={aircraft.close} open={aircraft.visible} />\n      <TicketTypeSheet {...ticketType.state} onClose={ticketType.close} open={ticketType.visible} />\n      <CreateUserSheet {...createUser.state} onClose={createUser.close} open={createUser.visible} />\n      <TicketTypeAddonSheet\n        {...ticketTypeAddon.state}\n        onClose={ticketTypeAddon.close}\n        open={ticketTypeAddon.visible}\n      />\n    </DropzoneContext.Provider>\n  );\n}\n\nexport function withDropzoneContext<T extends object>(Component: React.ComponentType<T>) {\n  return function WrappedWithLoad(props: T & Partial<DropzoneQueryVariables>) {\n    const { dropzoneId, ...rest } = props;\n    return (\n      <DropzoneContextProvider {...{ dropzoneId }}>\n        <Component {...(rest as T)} />\n      </DropzoneContextProvider>\n    );\n  };\n}\n\nexport { DropzoneContextProvider };\n","import React from 'react';\nimport { DropzonesProvider } from 'app/api/crud';\nimport { ManifestContextProvider, DropzoneContextProvider } from 'app/providers';\nimport { useAppSelector } from 'app/state';\n\nexport default function Provider(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const { currentDropzoneId } = useAppSelector((root) => root?.global);\n  return (\n    <DropzonesProvider>\n      <DropzoneContextProvider dropzoneId={currentDropzoneId?.toString() || undefined}>\n        <ManifestContextProvider dropzone={currentDropzoneId?.toString() || undefined}>\n          {children}\n        </ManifestContextProvider>\n      </DropzoneContextProvider>\n    </DropzonesProvider>\n  );\n}\n","import * as React from 'react';\nimport * as Notifications from 'expo-notifications';\nimport { Linking, Platform } from 'react-native';\nimport * as Device from 'expo-device';\nimport URI from 'urijs';\nimport { useUpdateUserMutation } from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useNotifications } from 'app/providers/notifications';\n\nasync function registerForPushNotificationsAsync(): Promise<string | null> {\n  let token: string | null = null;\n  if (Device.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      console.warn('Failed to get push token for push notification!');\n      return null;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n    console.warn('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token || null;\n}\n\nexport default function PushNotifications(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const pushToken = useAppSelector((root) => root.global.expoPushToken);\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, loading, called },\n  } = useDropzoneContext();\n  const notificationListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationReceivedListener>>();\n  const responseListener =\n    React.useRef<ReturnType<typeof Notifications.addNotificationResponseReceivedListener>>();\n\n  const onOutsideLink = React.useCallback((link: { url: string }) => {\n    const uri = URI(link.url);\n    const intendedRoute = uri.path();\n    console.log(intendedRoute);\n  }, []);\n\n  const [updateUser] = useUpdateUserMutation();\n  React.useEffect(() => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return undefined;\n    }\n\n    registerForPushNotificationsAsync().then((token: string | null) => {\n      if (token) {\n        dispatch(actions.global.setExpoPushToken(token));\n      }\n    });\n\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\n      if (notification.request.content.body) {\n        notify.info(notification.request.content.body);\n      }\n    });\n\n    // This listener is fired whenever a user taps on or\n    // interacts with a notification (works when app is foregrounded,\n    // backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\n      // console.log({ notification: response });\n    });\n\n    const subscription = Linking.addEventListener('url', onOutsideLink);\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n      }\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n      subscription.remove();\n    };\n  }, [dispatch, notify, onOutsideLink]);\n\n  // Update remote push token if we have a local token, but no\n  // token saved on the server. This is done so that the server\n  // is able to send us push notifications\n  React.useEffect(() => {\n    const remoteToken = currentUser?.user?.pushToken;\n\n    if (!loading && currentUser?.id) {\n      if (pushToken && pushToken !== remoteToken) {\n        updateUser({\n          variables: {\n            dropzoneUser: currentUser.id,\n            pushToken,\n          },\n        });\n      }\n    }\n  }, [pushToken, currentUser?.id, currentUser?.user?.pushToken, loading, called, updateUser]);\n  return children as JSX.Element;\n}\n","import { ThemeProvider } from '@mui/material';\nimport { Theme, createTheme } from '@mui/material/styles';\nimport * as React from 'react';\nimport { Provider as MaterialProvider } from 'react-native-paper';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state/store';\n\nfunction Content(props: { children: React.ReactNode }) {\n  const { children } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const muiTheme: Theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          primary: state.palette.primary,\n          secondary: state.palette.accent,\n          background: {\n            default: state.palette.background,\n            paper: state.palette.surface,\n          },\n          mode: state.theme.dark ? 'dark' : 'light',\n          common: {\n            white: state.palette.background,\n            black: state.palette.onSurface,\n          },\n        },\n      }),\n    [\n      state.palette.accent,\n      state.palette.background,\n      state.palette.onSurface,\n      state.palette.primary,\n      state.palette.surface,\n      state.theme.dark,\n    ]\n  );\n\n  window.matchMedia('(prefers-color-scheme: dark)').addListener((e) => {\n    dispatch(actions.global.setAppearance(e.matches ? 'dark' : 'light'));\n  });\n  return (\n    <MaterialProvider theme={state.theme as ReactNativePaper.Theme}>\n      <ThemeProvider theme={muiTheme}>{children}</ThemeProvider>\n    </MaterialProvider>\n  );\n}\nexport default Content;\n","import * as React from 'react';\nimport * as Update from 'expo-updates';\nimport { View, StyleSheet, Text, Platform } from 'react-native';\nimport { BlurView } from 'expo-blur';\nimport { Button } from 'react-native-paper';\nimport * as Device from 'expo-device';\n\n// eslint-disable-next-line camelcase\nimport * as fonts from '@expo-google-fonts/roboto';\nimport LottieView from 'app/components/LottieView';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IAppUpdateProps {\n  children: React.ReactNode;\n}\n\nexport default function AppUpdate(props: IAppUpdateProps) {\n  const { children } = props;\n  const { useFonts, __metadata__, ...rest } = fonts;\n  const [fontsLoaded] = fonts.useFonts({\n    ...rest,\n  });\n\n  const [overlay, setOverlay] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const animation = React.useRef<LottieView>(null);\n  const notify = useNotifications();\n\n  const onUpdate = React.useCallback(async () => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return;\n    }\n    animation.current?.play();\n    const { isNew } = await Update.fetchUpdateAsync();\n    if (isNew) {\n      await Update.reloadAsync();\n      setLoading(false);\n      setOverlay(false);\n      notify.success('New version installed');\n    }\n  }, [notify]);\n  const isUpdateAvailable = React.useCallback(async () => {\n    if (Platform.OS === 'web' || !Device.isDevice) {\n      return;\n    }\n    const { isAvailable } = await Update.checkForUpdateAsync();\n\n    if (isAvailable) {\n      onUpdate();\n    }\n  }, [onUpdate]);\n\n  React.useEffect(() => {\n    isUpdateAvailable();\n  }, [isUpdateAvailable]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n  return (\n    <View style={{ flex: 1 }}>\n      {children}\n      {overlay && (\n        <BlurView tint=\"dark\" style={styles.blur} intensity={80}>\n          <Text style={styles.title}>A new update is available</Text>\n          <LottieView\n            ref={animation}\n            style={{\n              width: 120,\n              height: 120,\n            }}\n            // eslint-disable-next-line global-require\n            source={require('../../../assets/images/loading.json')}\n          />\n          <Button\n            disabled={loading}\n            loading={loading}\n            color=\"#FFFFFF\"\n            style={styles.button}\n            mode=\"outlined\"\n            onPress={() => onUpdate()}\n          >\n            Click to update\n          </Button>\n        </BlurView>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  blur: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: '400',\n    position: 'absolute',\n    top: 100,\n  },\n  button: {\n    position: 'absolute',\n    bottom: 100,\n    borderColor: 'white',\n    borderRadius: 20,\n  },\n});\n","import * as React from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nexport default function ImageViewer() {\n  const { open, image } = useAppSelector((root) => root.imageViewer);\n  const dispatch = useAppDispatch();\n\n  return !open || !image ? null : (\n    <Lightbox mainSrc={image} onCloseRequest={() => dispatch(actions.imageViewer.close())} />\n  );\n}\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  }\n  return Colors[theme][colorName];\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import * as React from 'react';\nimport { StyleSheet, ViewProps } from 'react-native';\nimport { Paragraph, Title, useTheme } from 'react-native-paper';\nimport { View } from './Themed';\n\ninterface INoResults extends ViewProps {\n  title: string;\n  subtitle: string;\n  color?: string;\n}\nexport default function NoResults({ title, color, subtitle, ...rest }: INoResults) {\n  const theme = useTheme();\n  return (\n    <View {...rest} style={StyleSheet.flatten([styles.empty, rest?.style])}>\n      <Title style={{ color: color || theme.colors.onSurface }}>{title}</Title>\n      <Paragraph style={{ color: color || theme.colors.onSurface, textAlign: 'center' }}>\n        {subtitle}\n      </Paragraph>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    backgroundColor: 'transparent',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    backgroundColor: 'transparent',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ImageBackground } from 'react-native';\nimport { Avatar, Text } from 'react-native-paper';\nimport { StackActions, useNavigation } from '@react-navigation/core';\nimport { DropzoneEssentialsFragment, DropzoneExtensiveFragment } from 'app/api/operations';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Color from 'color';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\ninterface DropzoneCardProps {\n  dropzone: DropzoneEssentialsFragment;\n}\nexport default function DropzonesScreen(props: DropzoneCardProps) {\n  const { dropzone } = props;\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const navigation = useNavigation();\n\n  const nameLines = dropzone?.name?.split(/\\s/) || [];\n  const lines = [\n    nameLines.length > 2 ? nameLines[0] : null,\n    nameLines.length > 2 ? nameLines[1] : nameLines[0],\n    nameLines.length > 2 ? nameLines[2] : null,\n    nameLines.length === 2 ? nameLines[1] : null,\n  ];\n\n  const backgroundColor = Color(dropzone?.primaryColor || '#ffffff')\n    .desaturate(0.2)\n    .lighten(0.1);\n  const textColor = backgroundColor.lighten(0.35);\n\n  return (\n    <TouchableOpacity\n      style={{ alignSelf: 'center' }}\n      onPress={async () => {\n        if (dropzone) {\n          const shouldPushRoute = !!globalState.currentDropzoneId;\n          dispatch(actions.global.setDropzone(dropzone as DropzoneExtensiveFragment));\n\n          if (shouldPushRoute) {\n            navigation.dispatch(\n              StackActions.replace('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ManifestScreen',\n                  },\n                },\n              })\n            );\n          }\n        }\n      }}\n    >\n      {dropzone?.banner ? (\n        <View style={styles.cardContainer}>\n          <ImageBackground source={{ uri: dropzone?.banner as string }} style={styles.banner}>\n            <Text style={styles.title} numberOfLines={1}>\n              {dropzone.name}\n            </Text>\n          </ImageBackground>\n        </View>\n      ) : (\n        <View\n          style={[\n            styles.cardContainer,\n            {\n              backgroundColor: backgroundColor.toString(),\n            },\n          ]}\n        >\n          <Avatar.Icon\n            style={styles.icon}\n            icon=\"airplane-takeoff\"\n            size={160}\n            color={textColor.toString()}\n          />\n          <View style={styles.svgContainer}>\n            {lines.map((substr) => (\n              <Text style={styles.title} numberOfLines={1} adjustsFontSizeToFit allowFontScaling>\n                {substr}\n              </Text>\n            ))}\n          </View>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContainer: {\n    margin: 16,\n    width: 160,\n    height: 160,\n    borderRadius: 80,\n    overflow: 'hidden',\n  },\n  title: {\n    fontStyle: 'italic',\n    fontFamily: 'Roboto_700Bold_Italic',\n    textAlign: 'center',\n    fontSize: 26,\n    color: 'white',\n    overflow: 'visible',\n    width: 160,\n  },\n  icon: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n  },\n  svgContainer: {\n    position: 'absolute',\n    left: 0,\n    alignSelf: 'center',\n    justifyContent: 'center',\n    top: 0,\n    height: 180,\n    width: '100%',\n  },\n  banner: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, FlatList, Platform } from 'react-native';\nimport { FAB } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\n\nimport NoResults from '../../../components/NoResults';\nimport DropzoneCard from './DropzoneCard';\n\nexport default function DropzonesScreen() {\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector((root) => root.global);\n  const { dropzones, loading, refetch } = useDropzonesContext();\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={dropzones}\n        numColumns={Platform.OS === 'web' ? 3 : 2}\n        refreshing={loading}\n        keyExtractor={(item) => `dropzone-${item?.id}`}\n        onRefresh={() => refetch()}\n        style={styles.flatlist}\n        contentContainerStyle={styles.content}\n        ListEmptyComponent={() => (\n          <NoResults title=\"No dropzones?\" subtitle=\"You can set one up!\" />\n        )}\n        renderItem={({ item: dropzone }) => (!dropzone ? null : <DropzoneCard {...{ dropzone }} />)}\n      />\n      <FAB\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        small\n        icon=\"plus\"\n        onPress={() => {\n          dispatch(actions.forms.dropzone.reset());\n          navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n        }}\n        label=\"Create dropzone\"\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n    flexGrow: 1,\n  },\n  flatlist: { flex: 1, width: '100%', flexGrow: 1 },\n  content: {\n    flexGrow: 1,\n    width: '100%',\n    paddingBottom: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dzIcon: {\n    height: 150,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 32,\n    right: 16,\n    bottom: 0,\n    backgroundColor: '#FFFFFF',\n  },\n  empty: {\n    flex: 1,\n    backgroundColor: '#FF1414',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport DropzonesScreen from './dropzone_select/DropzonesScreen';\n\nexport type LimboRoutes = {\n  DropzoneSelectScreen: undefined;\n};\nconst Stack = createStackNavigator<LimboRoutes>();\n\nexport function useLimboNavigation() {\n  return useNavigation<NavigationProp<LimboRoutes>>();\n}\n\nexport default function Limbo() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n      initialRouteName=\"DropzoneSelectScreen\"\n    >\n      <Stack.Screen name=\"DropzoneSelectScreen\" component={DropzonesScreen} />\n    </Stack.Navigator>\n  );\n}\n","import { useMemo } from 'react';\nimport { useWindowDimensions } from 'react-native';\n\nexport enum ScreenOrientation {\n  Landscape = 'LANDSCAPE',\n  Portrait = 'PORTRAIT',\n}\nexport default function useDevice() {\n  const { width, height } = useWindowDimensions();\n  const orientation = useMemo(\n    () => (width > height ? ScreenOrientation.Landscape : ScreenOrientation.Portrait),\n    [height, width]\n  );\n\n  return useMemo(() => ({ width, height, orientation }), [height, orientation, width]);\n}\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Divider as MaterialDivider, Text, useTheme } from 'react-native-paper';\n\nexport default function Divider(props: { children: React.ReactText }) {\n  const { children } = props;\n  const theme = useTheme();\n  return (\n    <View style={styles.container}>\n      <MaterialDivider style={[styles.divider, { backgroundColor: theme.colors.onSurface }]} />\n      <Text style={styles.text}>{children}</Text>\n      <MaterialDivider style={[styles.divider, { backgroundColor: theme.colors.onSurface }]} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 16,\n  },\n  divider: { flex: 2 / 5, backgroundColor: 'white' },\n  text: { flex: 1 / 5, textAlign: 'center' },\n});\n","import * as React from 'react';\nimport { useLoginWithFacebookMutation } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { MutationFunctionOptions, MutationResult } from '@apollo/client';\nimport { LoginWithFacebookMutation, LoginWithFacebookMutationVariables } from 'app/api/operations';\nimport Button, { ReactFacebookFailureResponse, ReactFacebookLoginInfo } from 'react-facebook-login';\nimport { View } from 'react-native';\nimport { useNotifications } from 'app/providers/notifications';\n\ntype Extract<T> = T extends React.ComponentType<infer P> ? P : never;\n\nexport function useLoginWithFacebook(\n  opts?: MutationFunctionOptions<LoginWithFacebookMutation, LoginWithFacebookMutationVariables>\n) {\n  const { expoPushToken } = useAppSelector((root) => root.global);\n  const [onLoginWithFacebook, mutation] = useLoginWithFacebookMutation(opts);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n\n  const onLogin = React.useCallback(\n    async (response: ReactFacebookLoginInfo | ReactFacebookFailureResponse) => {\n      try {\n        if ('accessToken' in response) {\n          const { data } = await onLoginWithFacebook({\n            variables: {\n              pushToken: expoPushToken || null,\n              token: response.accessToken,\n            },\n          });\n          if (data?.loginWithFacebook?.authenticatable && data?.loginWithFacebook?.credentials) {\n            dispatch(actions.global.setCredentials(data.loginWithFacebook.credentials));\n            dispatch(actions.global.setUser(data.loginWithFacebook.authenticatable));\n          }\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          notify.error(e.message);\n        }\n      }\n    },\n    [dispatch, expoPushToken, notify, onLoginWithFacebook]\n  );\n  return [onLogin, mutation] as [() => Promise<void>, MutationResult<LoginWithFacebookMutation>];\n}\nexport default function FacebookButton(\n  props: Omit<Extract<typeof Button>, 'appId' | 'reAuthenticate' | 'fields' | 'children'> &\n    Partial<Pick<Extract<typeof Button>, 'appId' | 'reAuthenticate' | 'fields'>> & {\n      onPress: Extract<typeof Button>['callback'];\n    }\n) {\n  const notify = useNotifications();\n  const { onPress } = props;\n  return (\n    <View style={{ height: 100 }}>\n      <Button\n        appId=\"686479516065674\"\n        reAuthenticate\n        autoLoad\n        fields=\"email,name,picture\"\n        buttonStyle={{\n          height: 25,\n          fontSize: 14,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          width: '100%',\n          borderRadius: 4,\n          marginTop: 16,\n        }}\n        onFailure={() => {\n          notify.error('Facebook authentication failed');\n        }}\n        {...props}\n        callback={onPress}\n        textButton=\"Login with Facebook\"\n      />\n    </View>\n  );\n}\n","import { MutationFunctionOptions, MutationResult } from '@apollo/client';\nimport {\n  LoginWithAppleMutation,\n  LoginWithAppleMutationVariables,\n  LoginWithFacebookMutation,\n} from 'app/api/operations';\nimport * as React from 'react';\nimport { View } from 'react-native';\n\nexport function useLoginWithApple(\n  opts?: MutationFunctionOptions<LoginWithAppleMutation, LoginWithAppleMutationVariables>\n) {\n  return [() => null, null] as unknown as [\n    () => Promise<void>,\n    MutationResult<LoginWithFacebookMutation>\n  ];\n}\n\nexport default function AppleButton() {\n  return <View />;\n}\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { useLoginMutation } from 'app/api/reflection';\nimport { useNotifications } from 'app/providers/notifications';\nimport { actions, useAppDispatch } from 'app/state';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { useLoginWithApple } from './AppleButton';\nimport { useLoginWithFacebook } from './FacebookButton';\n\nexport interface LoginFields {\n  email: string;\n  password: string;\n}\n\nexport const validate = yup.object({\n  email: yup.string().required('Email is required').email('This is not a valid email'),\n  password: yup.string().required('Password is required'),\n});\n\nconst EMPTY_FORM_VALUES: LoginFields = {\n  email: '',\n  password: '',\n};\n\nexport default function useLoginForm() {\n  const dispatch = useAppDispatch();\n  const methods = useForm({\n    defaultValues: EMPTY_FORM_VALUES,\n    mode: 'all',\n    resolver: yupResolver(validate),\n  });\n  const { handleSubmit } = methods;\n  const [loading, setLoading] = React.useState(false);\n  const [mutationLogin, data] = useLoginMutation();\n  const [loginWithFacebook, loginWithFacebookMutation] = useLoginWithFacebook();\n  const [loginWithApple, loginWithAppleMutation] = useLoginWithApple();\n\n  const notify = useNotifications();\n\n  const onLogin = React.useCallback(\n    async function Login(variables: LoginFields) {\n      try {\n        const result = await mutationLogin({\n          variables,\n        });\n\n        if (result?.data?.userLogin?.authenticatable && result?.data?.userLogin?.credentials) {\n          dispatch(actions.global.setCredentials(result.data.userLogin.credentials));\n          dispatch(actions.global.setUser(result.data.userLogin.authenticatable));\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          notify.error(e.message);\n        }\n      }\n    },\n    [dispatch, mutationLogin, notify]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onLogin), [handleSubmit, onLogin]);\n\n  return React.useMemo(\n    () => ({\n      ...methods,\n      onSubmit,\n      loginWithFacebook,\n      loginWithApple,\n      loading:\n        loginWithFacebookMutation?.loading || data?.loading || loginWithAppleMutation?.loading,\n    }),\n    [\n      data?.loading,\n      loginWithApple,\n      loginWithAppleMutation?.loading,\n      loginWithFacebook,\n      loginWithFacebookMutation?.loading,\n      methods,\n      onSubmit,\n    ]\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, Text, View } from 'react-native';\nimport { Button, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nimport { primaryColor } from 'app/constants/Colors';\nimport Divider from 'app/components/Divider';\n\nimport LottieView from 'app/components/LottieView';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport FacebookButton from './FacebookButton';\nimport AppleButton from './AppleButton';\nimport useLoginForm from './useForm';\n\nexport default function LoginForm() {\n  const navigation = useNavigation();\n  const theme = useTheme();\n\n  const { control, onSubmit, loading, loginWithApple, loginWithFacebook } = useLoginForm();\n  return (\n    <ScrollView>\n      {loading ? (\n        <View style={styles.animationContainer}>\n          <LottieView\n            autoPlay\n            loop\n            style={styles.loadingAnimation}\n            // eslint-disable-next-line global-require\n            source={require('../../../../../assets/images/loading.json')}\n          />\n        </View>\n      ) : (\n        <>\n          <FormTextField\n            {...{ control }}\n            name=\"email\"\n            label=\"Email\"\n            mode=\"outlined\"\n            disabled={loading}\n          />\n\n          <FormTextField\n            {...{ control }}\n            label=\"Password\"\n            name=\"password\"\n            mode=\"outlined\"\n            disabled={loading}\n            secureTextEntry\n            onSubmitEditing={onSubmit}\n          />\n        </>\n      )}\n      {loading ? null : (\n        <TouchableOpacity\n          onPress={() => navigation.navigate('Wizards', { screen: 'RecoverPasswordScreen' })}\n        >\n          <Text style={theme.dark ? styles.forgotPasswordDark : styles.forgotPassword}>\n            Forgot your password?\n          </Text>\n        </TouchableOpacity>\n      )}\n      <Button\n        mode=\"contained\"\n        disabled={loading}\n        labelStyle={{ color: theme.colors.onSurface }}\n        style={[\n          styles.button,\n          { backgroundColor: theme.colors.surface, borderColor: theme.colors.surface },\n        ]}\n        onPress={onSubmit}\n      >\n        {loading ? 'Authenticating...' : 'Log in'}\n      </Button>\n\n      <Divider>or</Divider>\n      <FacebookButton disabled={loading} style={{ marginTop: 8 }} onPress={loginWithFacebook} />\n\n      <AppleButton onPress={loginWithApple} style={{ width: '100%', flex: 1 }} />\n\n      <Button\n        labelStyle={styles.textButtonLabel}\n        style={styles.textButton}\n        onPress={() => navigation.navigate('Unauthenticated', { screen: 'SignUpScreen' })}\n      >\n        Sign up\n      </Button>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    // backgroundColor: primaryColor,\n    paddingTop: 10,\n  },\n  logo: { height: 300, width: '100%' },\n  card: { padding: 16, borderRadius: 8 },\n  cardLandscape: { height: '100%', width: '100%', justifyContent: 'center' },\n\n  animationContainer: {\n    width: '100%',\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  loadingAnimation: {\n    alignSelf: 'center',\n    marginTop: 24,\n    marginBottom: 32,\n    height: 156,\n    width: '100%',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n\n  forgotPassword: {\n    marginBottom: 16,\n    color: 'rgb(50, 50, 50)',\n  },\n  forgotPasswordDark: {\n    marginTop: 8,\n    color: 'rgb(180, 180, 180)',\n  },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent',\n  },\n  fieldsLandscape: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 400,\n  },\n  button: {\n    marginVertical: 4,\n    backgroundColor: 'white',\n    borderColor: primaryColor,\n    borderWidth: 1,\n    width: '100%',\n  },\n  textButton: {\n    marginTop: 10,\n    height: 56,\n    backgroundColor: 'transparent',\n    color: 'white',\n    width: '100%',\n  },\n  textButtonLabel: {\n    // color: '#FFFFFF',\n  },\n});\n","import * as React from 'react';\nimport { Image, ImageBackground, KeyboardAvoidingView, Platform, StyleSheet } from 'react-native';\nimport { Card, useTheme } from 'react-native-paper';\n\nimport useDevice, { ScreenOrientation } from 'app/hooks/useDevice';\nimport logoDark from '../../../../assets/images/logo-black.png';\nimport logoLight from '../../../../assets/images/logo-white.png';\nimport backgroundDark from '../../../../assets/images/webb-dark.png';\nimport backgroundLight from '../../../../assets/images/pattern.png';\nimport LoginForm from './form/LoginForm';\n\nexport default function LoginScreen() {\n  const theme = useTheme();\n  const { orientation } = useDevice();\n  return (\n    <ImageBackground\n      source={theme.dark ? backgroundDark : backgroundLight}\n      style={styles.container}\n      resizeMode=\"repeat\"\n    >\n      {orientation === ScreenOrientation.Portrait ? (\n        <>\n          <Image\n            source={theme.dark ? logoLight : logoDark}\n            style={styles.logo}\n            resizeMode=\"contain\"\n          />\n          <KeyboardAvoidingView\n            style={styles.fields}\n            behavior={Platform.OS === 'android' ? undefined : 'padding'}\n          >\n            <Card style={styles.card} elevation={3}>\n              <Card.Content>\n                <LoginForm />\n              </Card.Content>\n            </Card>\n          </KeyboardAvoidingView>\n        </>\n      ) : (\n        <KeyboardAvoidingView\n          style={styles.fieldsLandscape}\n          behavior={Platform.OS === 'android' ? undefined : 'padding'}\n        >\n          <Card style={styles.cardLandscape} elevation={3}>\n            <Image\n              source={theme.dark ? logoLight : logoDark}\n              style={styles.logo}\n              resizeMode=\"contain\"\n            />\n            <Card.Content>\n              <LoginForm />\n            </Card.Content>\n          </Card>\n        </KeyboardAvoidingView>\n      )}\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    // backgroundColor: primaryColor,\n    paddingTop: 10,\n  },\n  logo: { height: 300, width: '100%' },\n  card: { padding: 16, borderRadius: 8 },\n  cardLandscape: { height: '100%', width: '100%', justifyContent: 'center' },\n\n  fields: {\n    marginBottom: 10,\n    marginTop: -50,\n    maxWidth: 400,\n    width: '100%',\n    paddingHorizontal: 56,\n    backgroundColor: 'transparent',\n  },\n  fieldsLandscape: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 400,\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions, View } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n  fullWidth?: boolean;\n  scrollable?: boolean;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height, width } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const {\n    style,\n    children,\n    fullWidth = false,\n    scrollable = true,\n    contentContainerStyle,\n    ...rest\n  } = props;\n\n  if (!scrollable) {\n    return <View style={{ flex: 1, width: '100%' }}>{children}</View>;\n  }\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={StyleSheet.flatten([\n        styles.container,\n        { backgroundColor: theme.colors.background },\n        style,\n      ])}\n      contentContainerStyle={StyleSheet.flatten(\n        [\n          styles.content,\n          fullWidth\n            ? { paddingHorizontal: 0 }\n            : { width: width < 920 ? '100%' : 920, paddingHorizontal: 16 },\n          contentContainerStyle,\n        ].filter(Boolean)\n      )}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    alignItems: 'flex-start',\n    alignSelf: 'center',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n  centerAlignedContent: {\n    maxWidth: 920,\n  },\n});\n","import * as React from 'react';\nimport { Animated } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nexport interface ISwipeAction {\n  label: string;\n\n  backgroundColor?: string;\n  onPress(): void;\n}\nexport interface ISwipeActions {\n  rightAction?: ISwipeAction;\n  disabled?: boolean;\n  children: React.ReactNode;\n}\n\nexport default function SwipeActions(props: ISwipeActions) {\n  const { children, rightAction, disabled } = props;\n\n  const ref = React.useRef<Swipeable | null>();\n  const rightActions = (\n    progress: Animated.AnimatedInterpolation<string | number>,\n    dragX: Animated.AnimatedInterpolation<string | number>\n  ) => {\n    const scale = dragX.interpolate({\n      inputRange: [-100, 0],\n      outputRange: [1.0, 0],\n    });\n\n    const translateX = dragX.interpolate({\n      inputRange: [-150, 0],\n      outputRange: [0, 10],\n    });\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          rightAction?.onPress();\n          ref?.current?.close();\n        }}\n        style={{ height: '100%' }}\n      >\n        <Animated.View\n          style={{\n            flexGrow: 1,\n            backgroundColor: rightAction?.backgroundColor,\n            justifyContent: 'center',\n            height: '100%',\n            width: 75,\n            transform: [{ translateX }],\n          }}\n        >\n          <Animated.Text\n            style={{\n              color: 'white',\n              paddingHorizontal: 10,\n              fontWeight: '600',\n              transform: [{ scale }],\n            }}\n          >\n            {rightAction?.label}\n          </Animated.Text>\n        </Animated.View>\n      </TouchableOpacity>\n    );\n  };\n  return (\n    <Swipeable\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      ref={ref}\n      enabled={!disabled}\n      renderRightActions={rightActions}\n      childrenContainerStyle={{ height: '100%' }}\n      useNativeAnimations\n    >\n      {children}\n    </Swipeable>\n  );\n}\n","import React from 'react';\nimport { Text, TextProps } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\nfunction GradientText(props: TextProps & { children: React.ReactText }) {\n  const { style } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n  return (\n    <Text {...props} style={style}>\n      <span\n        {...props}\n        style={{\n          opacity: 1,\n          background: `linear-gradient(45deg, ${palette.primary.dark}, ${palette.primary.main})`,\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore This is ok in web\n          '-webkit-background-clip': 'text',\n          '-webkit-text-fill-color': 'transparent',\n          'background-clip': 'text',\n        }}\n      />\n    </Text>\n  );\n}\n\nexport default GradientText;\n","import { useIsFocused } from '@react-navigation/core';\nimport { useAppSelector } from 'app/state';\nimport * as React from 'react';\nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport GradientText from '../GradientText';\n\nexport interface IWizardStepProps {\n  title?: React.ReactText;\n  children?: React.ReactNode;\n  actions: React.ReactNode;\n  hideContentUntilNavigatedTo?: boolean;\n}\n\nexport function Fields({ children }: { children: React.ReactNode }) {\n  return (\n    <KeyboardAvoidingView\n      style={styles.fields}\n      behavior={Platform.OS === 'android' ? undefined : 'padding'}\n    >\n      <View style={styles.fieldContent}>{children}</View>\n    </KeyboardAvoidingView>\n  );\n}\nexport function Step(props: IWizardStepProps) {\n  const { children, title, actions, hideContentUntilNavigatedTo } = props;\n  const theme = useAppSelector((state) => state.global.theme);\n\n  const isFocused = useIsFocused();\n  if (!isFocused && hideContentUntilNavigatedTo) {\n    return null;\n  }\n  return (\n    <ScrollView\n      style={[styles.container, { backgroundColor: theme.colors.background }]}\n      contentContainerStyle={styles.content}\n    >\n      {title && (\n        <View style={styles.title}>\n          <View>\n            <GradientText\n              style={{\n                marginTop: 16,\n                textAlign: 'left',\n                fontWeight: 'bold',\n                fontSize: 72,\n              }}\n            >\n              {title}\n            </GradientText>\n          </View>\n        </View>\n      )}\n      <View style={{ width: '100%', alignItems: 'center', justifyContent: 'center' }}>\n        {children}\n      </View>\n\n      {actions}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'column',\n  },\n  content: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n  },\n  title: {\n    minWidth: 400,\n    maxWidth: 500,\n    alignSelf: 'center',\n    paddingLeft: 32,\n    marginBottom: 56,\n  },\n  fields: {\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 32,\n  },\n  fieldContent: {\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface IDotsProps {\n  count: number;\n  index: number;\n}\nexport default function Dots(props: IDotsProps) {\n  const { count, index } = props;\n  const palette = useAppSelector((state) => state.global.palette);\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      {Array.from({ length: count }).map((_, idx) => (\n        <View\n          // eslint-disable-next-line react/no-array-index-key\n          key={`paginatiom-dot-${idx}`}\n          style={[\n            idx === index ? styles.activeDot : styles.inactiveDot,\n            { backgroundColor: idx === index ? palette.primary.main : palette.primary.light },\n          ]}\n        />\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inactiveDot: {\n    width: 6,\n    height: 6,\n    marginTop: 1,\n    marginLeft: 2,\n    marginRight: 2,\n    borderRadius: 3,\n  },\n  activeDot: { width: 8, height: 8, marginLeft: 2, marginRight: 2, borderRadius: 4 },\n});\n","import * as React from 'react';\n\nimport { StyleSheet, View } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\n\nexport interface IWizardButtonsProps {\n  nextLabel: string;\n  backLabel: string;\n  onNext?(): Promise<void>;\n  onBack?(): Promise<void> | void;\n}\n\nexport default function Buttons(props: IWizardButtonsProps) {\n  const { backLabel = 'Back', nextLabel = 'Next', onNext, onBack } = props;\n  const [loading, setLoading] = React.useState(false);\n  const { palette } = useAppSelector((root) => root.global);\n\n  const onNextPress = React.useCallback(async () => {\n    try {\n      await onNext?.();\n    } catch {\n      return undefined;\n    } finally {\n      setLoading(false);\n    }\n\n    return undefined;\n  }, [onNext]);\n\n  return (\n    <View style={styles.actions}>\n      {onNextPress && (\n        <Button\n          disabled={loading}\n          loading={loading}\n          onPress={onNextPress}\n          style={[styles.next, { backgroundColor: palette.placeholder }]}\n          mode=\"contained\"\n        >\n          {nextLabel || 'Next'}\n        </Button>\n      )}\n      {onBack && (\n        <Button style={styles.back} disabled={loading} mode=\"text\" onPress={onBack}>\n          {backLabel}\n        </Button>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48,\n    width: '100%',\n    maxWidth: 500,\n    height: 80,\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300,\n    minHeight: 36,\n  },\n  back: {\n    minHeight: 36,\n  },\n});\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport * as React from 'react';\n\nimport {\n  KeyboardAvoidingView,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  StyleSheet,\n  useWindowDimensions,\n  View,\n} from 'react-native';\nimport Carousel, { ICarouselInstance } from 'react-native-reanimated-carousel';\nimport { useNavigation } from '@react-navigation/core';\nimport { IWizardStepProps } from './Step';\nimport Dots from './Dots';\nimport Buttons from './Buttons';\n\nexport interface IWizardProps {\n  dots?: boolean;\n  steps: (IWizardStepDefinition | null)[];\n}\n\nexport interface IWizardStepDefinition {\n  component: React.ComponentType<IWizardStepProps>;\n  onNext?(navigation: ReturnType<typeof useNavigation>): Promise<void>;\n  onBack?(): Promise<void> | void;\n}\n\nexport type WizardRef = ICarouselInstance;\n\nfunction Wizard(props: IWizardProps, ref: React.Ref<ICarouselInstance>) {\n  const { steps, dots } = props;\n  const [currentIndex, setIndex] = React.useState(0);\n  const navigation = useNavigation();\n  const [dimensions, setDimensions] = React.useState<LayoutRectangle>({\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n  });\n  const carouselRef = React.useRef<ICarouselInstance>(null);\n  const screen = useWindowDimensions();\n\n  React.useImperativeHandle(ref, () => ({\n    next: () => carouselRef.current?.next(),\n    prev: () => carouselRef.current?.prev(),\n    getCurrentIndex: () => carouselRef.current?.getCurrentIndex() || 0,\n    scrollTo: (opts) => carouselRef.current?.scrollTo(opts),\n  }));\n\n  const onNext = React.useCallback(\n    async function WizardNextStep() {\n      if (steps[currentIndex]?.onNext) {\n        await steps[currentIndex]?.onNext?.(navigation);\n      }\n      if (currentIndex === steps.length - 1) {\n        navigation.goBack();\n      } else {\n        carouselRef?.current?.next();\n        setIndex(currentIndex + 1);\n      }\n\n      return undefined;\n    },\n    [currentIndex, navigation, steps]\n  );\n\n  const onBack = React.useCallback(\n    async function WizardBackStep() {\n      steps[currentIndex]?.onBack?.();\n      if (currentIndex === 0) {\n        navigation.goBack();\n      } else {\n        carouselRef?.current?.prev();\n        setIndex(currentIndex - 1 || 0);\n      }\n      return undefined;\n    },\n    [currentIndex, navigation, steps]\n  );\n\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const { width, height } = dimensions;\n\n  return (\n    <KeyboardAvoidingView\n      style={StyleSheet.absoluteFill}\n      behavior={Platform.OS === 'android' ? undefined : 'padding'}\n      {...{ onLayout }}\n    >\n      {!dots ? null : (\n        <View style={styles.dots}>\n          <Dots count={steps.length} index={currentIndex} />\n        </View>\n      )}\n      <Carousel\n        autoPlay={false}\n        loop={false}\n        modeConfig={{ parallaxScrollingScale: 1, parallaxScrollingOffset: 32 }}\n        pagingEnabled={false}\n        enabled={false}\n        panGestureHandlerProps={{\n          // Disable swiping\n          activeOffsetX: [-width, width],\n        }}\n        mode=\"parallax\"\n        style={StyleSheet.absoluteFill}\n        data={steps}\n        width={width || screen.width}\n        onSnapToItem={setIndex}\n        ref={carouselRef}\n        renderItem={({ item }) => {\n          if (!item) {\n            return <View />;\n          }\n          const { component: Step } = item;\n          return (\n            <Step\n              actions={\n                <Buttons\n                  nextLabel={currentIndex === steps.length - 1 ? 'Done' : 'Next'}\n                  backLabel=\"Back\"\n                  onNext={onNext}\n                  onBack={onBack}\n                />\n              }\n            />\n          );\n        }}\n      />\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  dots: {\n    alignSelf: 'center',\n    minWidth: 400,\n    maxWidth: 500,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 48,\n    zIndex: 1100,\n  },\n  actions: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    paddingBottom: 48,\n  },\n  next: {\n    width: '100%',\n    borderRadius: 20,\n    minWidth: 300,\n  },\n  content: {\n    flexGrow: 1,\n  },\n});\n\nexport default React.forwardRef(Wizard);\n","import { passwordStrength } from 'check-password-strength';\n\nexport enum PasswordStrength {\n  TooWeak,\n  Weak,\n  Acceptable,\n  Strong,\n}\nexport default function checkPasswordComplexity(password: string) {\n  const score = passwordStrength<PasswordStrength>(password, [\n    { value: PasswordStrength.TooWeak, id: 0, minDiversity: 0, minLength: 0 },\n    { value: PasswordStrength.Weak, id: 1, minDiversity: 2, minLength: 8 },\n    { value: PasswordStrength.Acceptable, id: 2, minDiversity: 3, minLength: 10 },\n    { value: PasswordStrength.Strong, id: 3, minDiversity: 4, minLength: 16 },\n  ]);\n  return score.value;\n}\n","import { errorColor, successColor, warningColor } from 'app/constants/Colors';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { PasswordStrength } from '../../utils/checkPasswordComplexity';\n\ninterface IPasswordComplexityIndicatorProps {\n  strength: PasswordStrength;\n}\nfunction PasswordStep(props: IPasswordComplexityIndicatorProps) {\n  const { strength } = props;\n\n  const indicatorStyle = [styles.indicatorWeak, styles.indicatorOk, styles.indicatorStrong];\n\n  return (\n    <>\n      <Text style={styles.title}>{['Too weak', 'Weak', 'Acceptable', 'Strong'][strength]}</Text>\n      <View style={styles.indicator}>\n        <View style={indicatorStyle[strength]} />\n        {strength < PasswordStrength.Acceptable ? (\n          <View style={[styles.indicatorInactive, { flex: 1 / 3 }]} />\n        ) : null}\n        {[PasswordStrength.Weak, PasswordStrength.Acceptable].includes(strength) ? (\n          <View\n            style={[\n              styles.indicatorInactive,\n              { flex: strength < PasswordStrength.Acceptable ? 1 / 3 : 1 / 2 },\n            ]}\n          />\n        ) : null}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n    marginTop: 8,\n  },\n  indicator: {\n    flexDirection: 'row',\n    height: 12,\n    borderRadius: 8,\n    overflow: 'hidden',\n    marginTop: 8,\n  },\n  indicatorInactive: {\n    backgroundColor: '#AAA',\n  },\n  indicatorWeak: {\n    flex: 1 / 3,\n    backgroundColor: errorColor,\n  },\n  indicatorOk: {\n    flex: 2 / 3,\n    backgroundColor: warningColor,\n  },\n  indicatorStrong: {\n    backgroundColor: successColor,\n    flex: 1,\n  },\n});\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\nimport { useFormContext, useWatch } from 'react-hook-form';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { control } = useFormContext();\n  const { password } = useWatch({ control });\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <FormTextField\n          name=\"password\"\n          {...{ control }}\n          mode=\"flat\"\n          label=\"Password\"\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={checkPasswordComplexity(password)} />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport { useFormContext } from 'react-hook-form';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { control } = useFormContext();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <FormTextField\n          {...{ control }}\n          name=\"email\"\n          mode=\"flat\"\n          label=\"Email\"\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport { useFormContext } from 'react-hook-form';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { control } = useFormContext();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <FormTextField\n          {...{ control }}\n          mode=\"flat\"\n          label=\"Password\"\n          name=\"passwordConfirmation\"\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>Click the link in the email we sent to you to confirm your account.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport checkPasswordComplexity, { PasswordStrength } from 'app/utils/checkPasswordComplexity';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUserSignUpMutation } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\n\nexport interface SignUpFields {\n  email: string;\n  name: string;\n  password: string;\n  passwordConfirmation: string;\n}\n\nexport const signUpValidation = yup.object().shape({\n  name: yup.string().default(''),\n  email: yup.string().required('Email is required').email('This is not a valid email'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .test({\n      test: (value) => checkPasswordComplexity(value || '') >= PasswordStrength.Acceptable,\n      message: 'Password is too weak',\n      name: 'password-complexity',\n    }),\n  passwordConfirmation: yup\n    .string()\n    .oneOf([yup.ref('password')], 'Passwords must match')\n    .required('Please type the password again'),\n});\n\nexport const EMPTY_FORM_VALUES: SignUpFields = {\n  name: '',\n  email: '',\n  password: '',\n  passwordConfirmation: '',\n};\n\nexport interface ISignUpFormOpts {\n  initial?: Partial<SignUpFields>;\n  onSuccess?(): void;\n}\n\nenum SignUpSteps {\n  Email,\n  Password,\n  PasswordConfirmation,\n}\n\nexport default function useSignupForm(opts: ISignUpFormOpts) {\n  const { onSuccess } = opts;\n  const [loading, setLoading] = React.useState(false);\n  const globalState = useAppSelector((root) => root.global);\n\n  const [step, setStep] = React.useState(SignUpSteps.Email);\n\n  const notify = useNotifications();\n  const methods = useForm<SignUpFields>({\n    defaultValues: EMPTY_FORM_VALUES,\n    mode: 'all',\n  });\n\n  React.useEffect(() => {\n    methods.reset(EMPTY_FORM_VALUES);\n  }, [methods]);\n  const { setError } = methods;\n\n  const [onSignUp] = useUserSignUpMutation();\n\n  const onSubmit = React.useCallback(\n    async (fields: SignUpFields) => {\n      try {\n        const { data } = await onSignUp({\n          variables: {\n            pushToken: globalState.expoPushToken,\n            email: fields.email,\n            name: fields.name,\n            password: fields.password,\n            exitWeight: 60,\n            phone: '',\n            passwordConfirmation: fields.passwordConfirmation,\n          },\n        });\n\n        if (data?.userRegister?.fieldErrors) {\n          data?.userRegister?.fieldErrors?.forEach(({ field, message }) => {\n            setError(field as keyof SignUpFields, { type: 'custom', message });\n          });\n        }\n        if (data?.userRegister?.authenticatable?.id) {\n          onSuccess?.();\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n          throw new Error();\n        }\n      }\n    },\n    [onSignUp, globalState.expoPushToken, setError, onSuccess, notify]\n  );\n\n  const onNext = React.useCallback(\n    async function FormNext() {\n      try {\n        setLoading(true);\n        const validated = await signUpValidation.validate(methods.getValues(), {\n          abortEarly: false,\n        });\n        console.debug({ validated });\n\n        if (step === SignUpSteps.PasswordConfirmation) {\n          await onSubmit(validated);\n        }\n      } catch (error) {\n        if (error instanceof yup.ValidationError) {\n          console.debug({ inner: error.inner });\n          error.inner.forEach((validationError) => {\n            switch (step) {\n              case SignUpSteps.Email:\n                if (validationError.path === 'email') {\n                  setError('email', { message: validationError.message });\n                  throw error;\n                }\n                break;\n              case SignUpSteps.Password:\n                if (validationError.path === 'password') {\n                  setError('password', { message: validationError.message });\n                  throw error;\n                }\n                break;\n              case SignUpSteps.PasswordConfirmation:\n                if (validationError.path === 'passwordConfirmation') {\n                  setError('passwordConfirmation', { message: validationError.message });\n                  throw error;\n                }\n                break;\n              default:\n                break;\n            }\n          });\n          setStep(step + 1);\n        } else {\n          throw error;\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [methods, onSubmit, setError, step]\n  );\n\n  return React.useMemo(() => ({ ...methods, onNext, loading }), [methods, onNext, loading]);\n}\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { FormProvider } from 'react-hook-form';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useNavigation } from '@react-navigation/core';\nimport PasswordStep from './steps/Password';\nimport EmailStep from './steps/Email';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\nimport DoneStep from './steps/Done';\nimport useSignupForm from './useForm';\n\nexport default function SignupWizard() {\n  const notify = useNotifications();\n  const navigation = useNavigation();\n  const { onNext, ...methods } = useSignupForm({\n    onSuccess: () => {\n      notify.success('A confirmation link has been sent to your email');\n      navigation.navigate('Unauthenticated', { screen: 'LoginScreen' });\n    },\n  });\n  return (\n    <FormProvider {...methods}>\n      <Wizard\n        dots\n        steps={[\n          { onNext, component: EmailStep },\n          { onNext, component: PasswordStep },\n          { onNext, component: PasswordConfirmationStep },\n          { component: DoneStep },\n        ]}\n      />\n    </FormProvider>\n  );\n}\n","import * as React from 'react';\nimport { Screen } from 'app/components/layout';\nimport SignupWizard from 'app/forms/sign_up/SignupWizard';\n\nexport default function SignupScreen() {\n  return (\n    <Screen>\n      <SignupWizard />\n    </Screen>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationProp, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LoginScreen from './login/LoginScreen';\nimport SignUpScreen from './signup/SignUpScreen';\n\nexport type UnauthenticatedRoutes = {\n  LoginScreen: undefined;\n  SignUpScreen: undefined;\n  SignUpWizard: undefined;\n};\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<UnauthenticatedRoutes>();\nexport function useUnauthenticatedNavigation() {\n  return useNavigation<NavigationProp<UnauthenticatedRoutes>>();\n}\n\nexport default function Unauthenticated() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n        presentation: 'modal',\n      }}\n    >\n      <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n      <Stack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\n    </Stack.Navigator>\n  );\n}\n","import { createMutation, isRequired } from '../createMutation';\nimport { CreateDropzoneDocument } from '../reflection';\nimport { CreateDropzoneMutation } from '../operations';\n\nexport default createMutation<\n  {\n    name: string;\n    banner?: string | null;\n    federation: number;\n    primaryColor: string | null;\n    secondaryColor?: string | null;\n    lat: number | null;\n    lng: number | null;\n  },\n  Required<CreateDropzoneMutation>['createDropzone']\n>(CreateDropzoneDocument, {\n  getPayload: (result) => result.createDropzone,\n  fieldErrorMap: {\n    federation: 'federation',\n  },\n  validates: {\n    name: [isRequired('Name is required')],\n  },\n});\n","import { createMutation } from '../createMutation';\nimport { MutationUpdateDropzoneArgs } from '../schema.d';\nimport { UpdateDropzoneDocument } from '../reflection';\nimport { UpdateDropzoneMutation } from '../operations';\n\nexport default createMutation<\n  { id: number } & MutationUpdateDropzoneArgs['input']['attributes'],\n  Required<UpdateDropzoneMutation>['updateDropzone']\n>(UpdateDropzoneDocument, {\n  getPayload: (result) => result.updateDropzone,\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Name(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Name\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Name\"\n          error={state.fields.name.error}\n          value={state.fields.name.value || ''}\n          onChange={(newValue) => dispatch(actions.forms.dropzone.setField(['name', newValue]))}\n        />\n      </Fields>\n    </Step>\n  );\n}\nexport default Name;\n","import { isEqual, pick, xorBy } from 'lodash';\nimport * as React from 'react';\nimport { FlatList, StyleSheet } from 'react-native';\nimport { Card } from 'react-native-paper';\n\ninterface ICardSelect<T extends Record<string, unknown> | string> {\n  items: T[];\n  selected: T[];\n  autoSelectFirst?: boolean;\n  isSelected?(item: T): boolean;\n  renderItemLabel(item: T): React.ReactNode;\n  onChangeSelected(newItems: T[]): void;\n}\nfunction CardSelect<T extends Record<string, unknown> | string>(props: ICardSelect<T>) {\n  const { items, selected, isSelected, renderItemLabel, onChangeSelected, autoSelectFirst } = props;\n\n  React.useEffect(() => {\n    if (!selected || (!selected.length && items.length && autoSelectFirst)) {\n      onChangeSelected([items[0]]);\n    }\n  }, [selected, autoSelectFirst, onChangeSelected, items]);\n\n  return (\n    <FlatList\n      data={items}\n      contentContainerStyle={{ paddingBottom: 120 }}\n      keyExtractor={(item) => JSON.stringify(item)}\n      renderItem={({ item }) => {\n        const itemSelected = isSelected\n          ? isSelected(item)\n          : selected.some((value) => isEqual(item, value));\n\n        return (\n          <Card\n            style={[styles.card, itemSelected ? styles.active : undefined]}\n            onPress={() =>\n              onChangeSelected(\n                selected.length === 1 ? [item] : xorBy(selected, [item], JSON.stringify)\n              )\n            }\n          >\n            <Card.Title title={renderItemLabel(item)} />\n          </Card>\n        );\n      }}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 100,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  card: {\n    padding: 16,\n    marginVertical: 4,\n    flex: 1,\n    opacity: 0.5,\n  },\n  active: {\n    opacity: 1.0,\n  },\n});\nexport default React.memo(CardSelect, (previous, next) => {\n  return isEqual(\n    pick(previous, ['isDisabled', 'isSelected', 'items', 'selected']),\n    pick(next, ['isDisabled', 'isSelected', 'items', 'selected'])\n  );\n}) as typeof CardSelect;\n","import { FederationEssentialsFragment } from 'app/api/operations';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport CardSelect from './CardSelect';\n\ninterface IFederationCardSelect {\n  value?: FederationEssentialsFragment | null;\n  onSelect(jt: FederationEssentialsFragment): void;\n}\n\nexport default function FederationCardSelect(props: IFederationCardSelect) {\n  const { value, onSelect } = props;\n  const { data } = useFederationsQuery();\n\n  return (\n    <CardSelect<FederationEssentialsFragment>\n      autoSelectFirst\n      items={data?.federations || []}\n      selected={[value].filter(Boolean) as FederationEssentialsFragment[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(federation) => federation?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction Federation(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state.fields.federation.value}\n          onSelect={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n        />\n        <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n          {state.fields.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default Federation;\n","function degreesToRadians(degrees: number) {\n  return degrees * (Math.PI / 180);\n}\nexport function calculateLatLngDelta(latitude: number, mileRadius = 1) {\n  const milePerDegreeAtEquator = 69.172;\n  const milePerDegreeAtLatitude = Math.cos(degreesToRadians(latitude)) * milePerDegreeAtEquator;\n\n  // We want 2 miles either direction,\n  return mileRadius / milePerDegreeAtLatitude;\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from 'react';\nimport { LayoutRectangle, View, ViewStyle } from 'react-native';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport Constants from 'app/constants/expo';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as Location from 'expo-location';\nimport { useIsFocused } from '@react-navigation/core';\n\n// Used if user location cant be used and we have no other fallback\n// This points to Brisbane:\nconst DEFAULT_COORDS = { lat: -27.4705, lng: 153.026 };\n\ninterface IMapProps {\n  width: number | string;\n  height: number | string;\n  position: {\n    x: number;\n    y: number;\n  };\n  coords?: {\n    lat: number;\n    lng: number;\n  };\n  shape: 'round' | 'square';\n\n  children?: React.ReactNode;\n  interactive?: boolean;\n  center?: { lat: number; lng: number };\n  mapStyle?: ViewStyle;\n  containerStyle?: ViewStyle;\n  // onDragStart?(): void;\n  onDragEnd?(coords: { lat: number; lng: number }): void;\n}\nexport default function Map(props: IMapProps) {\n  const {\n    width,\n    height,\n    position,\n    children,\n    center,\n    coords: _coords,\n    shape,\n    interactive,\n    onDragEnd,\n  } = props;\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: Constants?.googleMapsWeb,\n    id: 'google-maps-script',\n  });\n\n  const { containerStyle, mapStyle } = props;\n  const map = React.useRef<GoogleMap>(null);\n  const coords = _coords || DEFAULT_COORDS;\n\n  const onLoad = React.useCallback(\n    async (component: GoogleMap) => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      map.current = component;\n      try {\n        const { status } = await Location.requestForegroundPermissionsAsync();\n        if (status !== 'granted') {\n          return;\n        }\n        // const location = await Location.getCurrentPositionAsync({});\n        // const lat = coords?.lat || location.coords.latitude;\n        // const lng = coords?.lng || location.coords.longitude;\n      } catch (error) {\n        console.log({ error });\n      } finally {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        const bounds = new window.google.maps.LatLngBounds(coords);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        map.current?.fitBounds(bounds);\n        map.current?.panTo?.(coords);\n      }\n    },\n    [coords]\n  );\n\n  const onUnmount = React.useCallback(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    map.current = null;\n  }, []);\n\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>();\n  const isFocused = useIsFocused();\n\n  return !isLoaded || !isFocused ? null : (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{\n        width,\n        height,\n        borderRadius: shape === 'round' && rootLayout?.width ? rootLayout.width / 2 : undefined,\n        overflow: 'hidden',\n        position: 'absolute',\n        top: position.y,\n        left: position.x,\n        ...containerStyle,\n      }}\n      pointerEvents={interactive ? undefined : 'none'}\n    >\n      <GoogleMap\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        onLoad={(component: GoogleMap) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          map.current = component;\n          onLoad(component);\n        }}\n        ref={map}\n        center={coords}\n        onDragEnd={() => {\n          onDragEnd?.({\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lat: map.current.center.lat(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            lng: map.current.center.lng(),\n          });\n        }}\n        onUnmount={onUnmount}\n        mapTypeId={google.maps.MapTypeId.HYBRID}\n        mapContainerStyle={{\n          width: '100%',\n          height: '100%',\n\n          // Intentional because the types for this damn map is fucked\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          ...(mapStyle as any),\n        }}\n        options={{\n          zoom: 15,\n          fullscreenControl: false,\n          streetViewControl: false,\n          center: coords,\n          mapTypeControl: false,\n          mapTypeId: google.maps.MapTypeId.HYBRID,\n          zoomControl: false,\n        }}\n      >\n        {children}\n      </GoogleMap>\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Divider, List, Searchbar } from 'react-native-paper';\nimport debounce from 'lodash/debounce';\nimport { GeocodedLocation } from 'app/api/schema.d';\nimport { first } from 'lodash';\nimport { useAddressToLocationLazyQuery } from 'app/api/reflection';\n\ninterface IAddressSearchBarProps {\n  value: string;\n  autocomplete?: boolean;\n  selectedLocation?: GeocodedLocation;\n  onChange(value: string): void;\n  onSelect(value: GeocodedLocation): void;\n}\nexport default function AddressSearchBar(props: IAddressSearchBarProps) {\n  const { value, onChange: onChangeText, onSelect } = props;\n  const [suggestions, setSuggestions] = React.useState<GeocodedLocation[]>([]);\n  const [selected, setSelected] = React.useState<GeocodedLocation>();\n  const [fetchLocation, { data }] = useAddressToLocationLazyQuery();\n\n  const fetchSuggestions = React.useCallback(\n    (search: string) => {\n      fetchLocation({\n        variables: {\n          search,\n        },\n      });\n    },\n    [fetchLocation]\n  );\n\n  const fetchSuggestionsDebounced = React.useMemo(\n    () => debounce<typeof fetchSuggestions>(fetchSuggestions),\n    [fetchSuggestions]\n  );\n\n  React.useEffect(() => {\n    if (data?.geocode) {\n      setSuggestions([data.geocode]);\n    }\n  }, [data?.geocode]);\n\n  React.useEffect(() => {\n    if (value && value?.length > 4) {\n      fetchSuggestionsDebounced(value);\n    } else if (!value) {\n      setSuggestions([]);\n    }\n  }, [value, fetchSuggestionsDebounced]);\n\n  const onPickResult = React.useCallback(\n    (location: GeocodedLocation) => {\n      onSelect(location);\n      onChangeText(location.formattedString || '');\n      setSuggestions([]);\n      setSelected(location);\n    },\n    [onChangeText, onSelect]\n  );\n\n  return (\n    <View style={{ width: '100%', borderRadius: 3, backgroundColor: 'white' }}>\n      <Searchbar\n        {...{ value, onChangeText }}\n        allowFontScaling\n        numberOfLines={1}\n        onSubmitEditing={() => {\n          if (first(suggestions)) {\n            onPickResult(first(suggestions) as GeocodedLocation);\n          }\n        }}\n      />\n      {suggestions\n        ?.filter((suggestion) => suggestion.formattedString !== selected?.formattedString)\n        .map((item) => {\n          return (\n            <>\n              <Divider />\n              <List.Item\n                title={item.formattedString}\n                onPress={() => {\n                  onPickResult(item);\n                }}\n              />\n            </>\n          );\n        })}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, useWindowDimensions, View } from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { Step, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { calculateLatLngDelta } from 'app/utils/calculateLatLngDelta';\nimport Map from 'app/components/map/Map';\nimport AddressSearchBar from 'app/components/input/search/AddressSearchBar';\nimport { useIsFocused } from '@react-navigation/core';\n\nfunction LocationWizardStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const [searchText, setSearchText] = React.useState('');\n  const dispatch = useAppDispatch();\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n\n      dispatch(actions.forms.dropzone.setField(['lat', location.coords.latitude]));\n      dispatch(actions.forms.dropzone.setField(['lng', location.coords.longitude]));\n\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (state.fields.lat.value === null || state.fields.lng.value == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, state.fields.lat.value, state.fields.lng.value]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    state.fields.lat.value && state.fields.lng.value\n      ? {\n          latitude: state.fields.lat.value,\n          longitude: state.fields.lng.value,\n          latitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n          longitudeDelta: calculateLatLngDelta(state.fields.lat.value),\n        }\n      : undefined;\n\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    (visible ? fadeIn : fadeOut).current.start();\n  }, []);\n\n  const { height, width } = useWindowDimensions();\n  const [isDragging, setDragging] = React.useState(false);\n  const isFocused = useIsFocused();\n\n  if (!isFocused) {\n    return null;\n  }\n\n  return (\n    <Step {...props} title=\"Location\" hideContentUntilNavigatedTo>\n      <Map\n        mapStyle={{\n          ...StyleSheet.absoluteFillObject,\n        }}\n        position={{\n          x: 0,\n          y: 0,\n        }}\n        {...{ height, width }}\n        coords={\n          region?.latitude && region?.longitude\n            ? { lat: region?.latitude, lng: region?.longitude }\n            : undefined\n        }\n        onDragStart={() => {\n          setDragging(true);\n          setCoordinateFade(false);\n        }}\n        center={center || undefined}\n        onDragEnd={(r) => {\n          fadeOut.current?.stop();\n          fadeIn.current?.stop();\n          setCoordinateFade(true);\n          setDragging(false);\n          dispatch(actions.forms.dropzone.setField(['lat', r.lat]));\n          dispatch(actions.forms.dropzone.setField(['lng', r.lng]));\n        }}\n        interactive\n      >\n        {!region ? null : (\n          <View style={styles.markerFixed} pointerEvents=\"none\">\n            <MaterialCommunityIcons\n              pointerEvents=\"none\"\n              size={60}\n              style={{\n                color: '#ffffff',\n                textShadowColor: 'rgba(14,14,14,0.8)',\n                textShadowOffset: {\n                  width: 5,\n                  height: 5,\n                },\n                textShadowRadius: 10,\n                zIndex: 10,\n              }}\n              name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n            />\n          </View>\n        )}\n      </Map>\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={30} />\n      </TouchableOpacity>\n\n      <View style={styles.titleContainer}>\n        <View style={{ width: 300, display: 'none', alignSelf: 'flex-start', marginLeft: 32 }}>\n          <AddressSearchBar\n            value={searchText}\n            onChange={setSearchText}\n            autocomplete\n            onSelect={(item) => {\n              dispatch(actions.forms.dropzone.setField(['lat', item.lat]));\n              dispatch(actions.forms.dropzone.setField(['lng', item.lng]));\n            }}\n          />\n        </View>\n        <Animated.Text\n          style={{\n            fontSize: 24,\n            marginTop: 20,\n            opacity: opacity.current,\n            textAlign: 'center',\n            color: '#ffffff',\n            textShadowColor: 'rgba(14,14,14,0.8)',\n            textShadowOffset: {\n              width: 3,\n              height: 3,\n            },\n            textShadowRadius: 10,\n          }}\n        >\n          {!region?.latitude || !region?.longitude ? null : (\n            <>\n              {region?.latitude?.toFixed(5)},{region?.longitude?.toFixed(5)}\n            </>\n          )}\n        </Animated.Text>\n      </View>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  titleContainer: {\n    position: 'absolute',\n    top: 32,\n    left: 0,\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    zIndex: 100,\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: '30%',\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 12,\n  },\n});\n\nexport default LocationWizardStep;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport { useAppSelector } from '../../state';\n\ninterface IPhonePreview {\n  primaryColor?: string;\n}\n\nfunction PhonePreview(props: IPhonePreview) {\n  const { primaryColor } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={styles.previewContainer}>\n        <View style={[styles.previewAppBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: theme.colors.surface }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Phone</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 200,\n    width: 100,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    backgroundColor: '#EFEFEF',\n    alignSelf: 'center',\n  },\n  previewTabButton: {\n    width: 25,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 30,\n  },\n  previewTabButton2: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 59,\n  },\n  previewTabButton3: {\n    width: 9,\n    height: 9,\n    borderRadius: 4.5,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 4,\n    left: 70,\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '96%',\n    borderRadius: 2,\n    height: '20%',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n  },\n  previewLoadCard2: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '37%',\n  },\n  previewLoadCard3: {\n    width: '96%',\n    height: '20%',\n    borderRadius: 2,\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    marginHorizontal: '2%',\n    position: 'absolute',\n    top: '59%',\n  },\n  previewButton: {\n    width: '35%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 22,\n    right: 5,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default PhonePreview;\n","import * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Surface } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\n\ninterface IWebPreview {\n  primaryColor?: string;\n}\n\nfunction WebPreview(props: IWebPreview) {\n  const { primaryColor } = props;\n  const { palette } = useAppSelector((root) => root.global);\n\n  return (\n    <View>\n      <Surface style={[styles.previewContainer, { backgroundColor: '#EFEFEF' }]}>\n        <View style={[styles.previewAppBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewLoadCard]} />\n        <View style={[styles.previewLoadCard2]} />\n        <View style={[styles.previewLoadCard3]} />\n        <View style={[styles.previewButton, { backgroundColor: primaryColor }]} />\n        <View style={[styles.previewTabBar, { backgroundColor: '#FFFFFF' }]} />\n        <View style={[styles.previewTabButton, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton2, { backgroundColor: palette.placeholder }]} />\n        <View style={[styles.previewTabButton3, { backgroundColor: palette.placeholder }]} />\n      </Surface>\n      <Text style={styles.label}>Web</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 8,\n  },\n  previewContainer: {\n    height: 100,\n    width: 170,\n    borderRadius: 5,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderColor: '#CCCCCC',\n    alignSelf: 'center',\n  },\n\n  previewAppBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    top: 0,\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5,\n  },\n  previewTabButton: {\n    width: 15,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 20,\n  },\n  previewTabButton2: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 38,\n  },\n  previewTabButton3: {\n    width: 5,\n    height: 5,\n    borderRadius: 3,\n    backgroundColor: 'blue',\n    position: 'absolute',\n    bottom: 2,\n    left: 45,\n  },\n  previewTabBar: {\n    width: '100%',\n    height: '8.5%',\n    backgroundColor: '#DDDDDD',\n    position: 'absolute',\n    bottom: 0,\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n  },\n  previewLoadCard: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '2%',\n  },\n  previewLoadCard2: {\n    width: '30%',\n    height: '60%',\n    backgroundColor: '#FFFFFF',\n    marginVertical: '2%',\n    position: 'absolute',\n    top: '15%',\n    left: '35%',\n  },\n  previewLoadCard3: {\n    width: '30%',\n    height: '60%',\n    marginVertical: '2%',\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '15%',\n    left: '68%',\n  },\n  previewButton: {\n    width: '12%',\n    height: '6%',\n    position: 'absolute',\n    bottom: 15,\n    right: 8,\n    borderRadius: 5,\n    backgroundColor: '#DDDDDD',\n  },\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n  },\n});\n\nexport default WebPreview;\n","import * as React from 'react';\nimport { Button, Portal, Dialog } from 'react-native-paper';\nimport { TriangleColorPicker } from 'react-native-color-picker';\n// import SliderComponent from '@react-native-community/slider';\n\ninterface IColorPickerDialog {\n  open: boolean;\n  value: string;\n  onChange(color: string): void;\n  onClose(): void;\n}\nexport default function ColorPickerDialog(props: IColorPickerDialog) {\n  const { value, onChange, open, onClose } = props;\n\n  const ref = React.useRef<TriangleColorPicker>();\n  return (\n    <Portal>\n      <Dialog visible={!!open} onDismiss={() => onClose()}>\n        <Dialog.Title>Custom color</Dialog.Title>\n        <Dialog.Content style={{ padding: 20, height: 400 }}>\n          <TriangleColorPicker\n            style={{ flex: 1 }}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            sliderComponent={() => null}\n            defaultColor={value}\n            hideSliders\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            ref={ref}\n          />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={() => onClose()}>Cancel</Button>\n          <Button\n            onPress={() => {\n              if (ref.current) {\n                onChange(ref.current?.getColor());\n              }\n            }}\n          >\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, HelperText, List, Surface, TouchableRipple } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport manipulate from 'color';\nimport ColorPickerDialog from './ColorPickerDialog';\n\nconst COLOR_PRESETS = [\n  '#000000',\n  '#FF1414',\n  '#D6116B',\n  '#B70E97',\n  '#6718AC',\n  '#1E47AB',\n  '#11839E',\n  '#0DA583',\n  '#10C626',\n  '#92EA12',\n  '#FF8B14',\n  '#FFB214',\n];\n\ninterface IColorPicker {\n  title: string;\n  helperText: string;\n  value: string;\n  error?: string | null;\n  onChange(color: string): void;\n}\n\nfunction ColorPicker(props: IColorPicker) {\n  const { value, title, helperText, onChange, error } = props;\n\n  const isCustomColor = !COLOR_PRESETS.includes(value);\n  const [isDialogOpen, setDialogOpen] = React.useState(false);\n  return (\n    <>\n      <ColorPickerDialog\n        open={isDialogOpen}\n        value={value}\n        onChange={(color) => {\n          onChange(color);\n          setDialogOpen(false);\n        }}\n        onClose={() => setDialogOpen(false)}\n      />\n      <Card style={styles.card}>\n        <List.Subheader>{title}</List.Subheader>\n\n        <Card.Content style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n          {COLOR_PRESETS.map((color) => (\n            <TouchableRipple onPress={() => onChange(color)}>\n              <Surface\n                style={[\n                  styles.colorBox,\n                  { flexDirection: 'row' },\n                  color === value ? { borderWidth: 2, borderColor: 'black' } : {},\n                ]}\n              >\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).lighten(0.6).hex(),\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: color,\n                  }}\n                />\n                <View\n                  style={{\n                    height: '100%',\n                    width: '33%',\n                    backgroundColor: manipulate(color).darken(0.3).hex(),\n                  }}\n                />\n              </Surface>\n            </TouchableRipple>\n          ))}\n          <TouchableRipple onPress={() => setDialogOpen(true)}>\n            <Surface\n              style={[\n                styles.colorBox,\n                { backgroundColor: isCustomColor ? value : '#FFFFFF' },\n                isCustomColor ? { borderWidth: 2, borderColor: 'black' } : {},\n              ]}\n            >\n              <MaterialIcons name=\"add\" size={1} />\n            </Surface>\n          </TouchableRipple>\n        </Card.Content>\n        <HelperText type={error ? 'error' : 'info'}>{error || helperText}</HelperText>\n      </Card>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16, height: 200 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n\n  colorBox: {\n    height: 25,\n    width: 25,\n    margin: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default ColorPicker;\n","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { PhonePreview, WebPreview } from 'app/components/theme_preview';\nimport ColorPicker from 'app/components/input/colorpicker';\n\nfunction ThemingStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Branding\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'flex-end',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n          <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n        </View>\n\n        <ColorPicker\n          title=\"Brand color\"\n          helperText=\"This color is used for active elements and calls to action\"\n          error={state.fields.primaryColor.error}\n          onChange={(color) => dispatch(actions.forms.dropzone.setField(['primaryColor', color]))}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default ThemingStep;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Setup complete\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import { useUpdateRoleMutation } from 'app/api/reflection';\nimport * as React from 'react';\nimport { List, Switch } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { RoleDetailedFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IPermissionListItem {\n  title: string;\n  description?: string;\n  role: RoleDetailedFragment;\n  permissionName: string;\n}\n\nexport default function PermissionListItem(props: IPermissionListItem) {\n  const { title, description, role, permissionName } = props;\n  const canChangePermissions = useRestriction(Permission.GrantPermission);\n  const [mutationUpdatePermission] = useUpdateRoleMutation();\n  const notify = useNotifications();\n\n  return (\n    <List.Item\n      disabled={!canChangePermissions}\n      style={{ width: '100%' }}\n      right={() => (\n        <Switch\n          value={role.permissions.includes(permissionName)}\n          onValueChange={async () => {\n            const result = await mutationUpdatePermission({\n              variables: {\n                roleId: Number(role.id),\n                permissionName,\n                enabled: !role.permissions.includes(permissionName),\n              },\n              optimisticResponse: {\n                updateRole: {\n                  role: {\n                    ...role,\n                    permissions: !role.permissions.includes(permissionName)\n                      ? role.permissions.filter((name) => name !== permissionName)\n                      : [...role.permissions, permissionName],\n                  },\n                  errors: null,\n                  fieldErrors: null,\n                },\n              },\n            });\n\n            if (result?.data?.updateRole?.errors?.length) {\n              result?.data?.updateRole?.errors?.map((message) => notify.error(message));\n            }\n          }}\n        />\n      )}\n      {...{ title, description }}\n    />\n  );\n}\n","import * as React from 'react';\nimport { capitalize } from 'lodash';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\nimport { FlatList } from 'react-native';\nimport { useDropzonePermissionsLazyQuery } from 'app/api/reflection';\nimport { Paragraph } from 'react-native-paper';\n\ninterface IPermissionWizardScreen extends IWizardStepProps {\n  permission: Permission;\n  title: string;\n  description?: string;\n}\n\nfunction PermissionWizardScreen(props: IPermissionWizardScreen) {\n  const { permission, description, ...rest } = props;\n  const dropzoneForm = useAppSelector((root) => root.forms.dropzone);\n  const [queryRoles, { data, loading, called }] = useDropzonePermissionsLazyQuery();\n\n  React.useEffect(() => {\n    if (dropzoneForm.original?.id) {\n      queryRoles({\n        variables: {\n          id: dropzoneForm.original.id,\n        },\n      });\n    }\n  }, [dropzoneForm.original, queryRoles]);\n\n  return (\n    <Step {...rest}>\n      {description && <Paragraph>{description}</Paragraph>}\n      <Fields>\n        {!(called && !loading && data?.dropzone?.roles?.length) ? null : (\n          <FlatList\n            data={data?.dropzone?.roles || []}\n            contentContainerStyle={{ paddingBottom: 200 }}\n            keyExtractor={(item) => item.id.toString()}\n            renderItem={({ item: role }) => (\n              <PermissionListItem\n                permissionName={permission}\n                role={role}\n                title={capitalize(role?.name?.replace(/_/, ' '))}\n              />\n            )}\n          />\n        )}\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PermissionWizardScreen;\n","import * as React from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Platform } from 'react-native';\n\nexport default function useImagePicker() {\n  const onPickImage = React.useCallback(async () => {\n    if (Platform.OS !== 'web') {\n      const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (status !== 'granted') {\n        console.error('Sorry, we need camera roll permissions to make this work!');\n      }\n    }\n    const result = (await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 0.1,\n      base64: true,\n    })) as { base64: string };\n\n    return result?.base64;\n  }, []);\n\n  return onPickImage;\n}\n","import * as React from 'react';\nimport { Avatar, Paragraph, TouchableRipple, useTheme } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { View, StyleSheet } from 'react-native';\nimport LottieView from 'app/components/LottieView';\n\nfunction Logo(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const pickImage = useImagePicker();\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        dispatch(actions.forms.dropzone.setField(['banner', `data:image/jpeg;base64,${base64}`]));\n      } else {\n        console.log({ base64 });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n  const theme = useTheme();\n\n  return (\n    <Step {...props} title=\"Banner\">\n      <Fields>\n        <View style={styles.avatarContainer}>\n          <TouchableRipple onPress={onPickImage}>\n            {!state?.fields?.banner?.value ? (\n              <LottieView\n                style={{ height: 175, width: 175 }}\n                autoPlay\n                loop={false}\n                // eslint-disable-next-line global-require\n                source={require('../../../../../assets/images/image-pick.json')}\n              />\n            ) : (\n              <Avatar.Image\n                size={175}\n                source={{ uri: state?.fields?.banner?.value }}\n                style={{\n                  borderWidth: StyleSheet.hairlineWidth,\n                  backgroundColor: theme.colors.primary,\n                }}\n              />\n            )}\n          </TouchableRipple>\n          <Paragraph style={{ paddingHorizontal: 48, marginTop: 24 }}>\n            Your logo is displayed as an avatar for your dropzone throughout the app.\n          </Paragraph>\n        </View>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarContainer: { marginBottom: 100, alignItems: 'center', justifyContent: 'center' },\n  paragraph: { marginTop: 16 },\n});\nexport default Logo;\n","import * as React from 'react';\nimport { DropzoneFields } from 'app/components/forms/dropzone/slice';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport type { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useMutationCreateDropzone from 'app/api/hooks/useMutationCreateDropzone';\nimport useMutationUpdateDropzone from 'app/api/hooks/useMutationUpdateDropzone';\nimport camelize from 'lodash/camelCase';\nimport { Permission } from 'app/api/schema.d';\nimport { StackActions, useNavigation } from '@react-navigation/core';\nimport { useNotifications } from 'app/providers/notifications';\nimport NameStep from './steps/Name';\nimport FederationStep from './steps/Federation';\nimport LocationStep from './steps/Location';\nimport ThemingStep from './steps/Theming';\nimport DoneStep from './steps/Done';\nimport PermissionStep from './steps/Permissions';\nimport LogoStep from './steps/Logo';\n\nfunction DropzoneSetupScreen() {\n  const dropzone = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateDropzone = useMutationCreateDropzone({\n    onError: (error) => {\n      notify.error(error);\n    },\n    onSuccess: (payload) => console.log(payload),\n    onFieldError: (field, value) => {\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value]));\n      console.log(field, value);\n    },\n  });\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (error) => notify.error(error),\n    onSuccess: (payload) => null,\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.dropzone.setFieldError([field as keyof DropzoneFields, value])),\n  });\n  const onComplete = React.useCallback(() => {\n    navigation.dispatch(\n      StackActions.replace('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: {\n            screen: 'ManifestScreen',\n          },\n        },\n      })\n    );\n  }, [navigation]);\n\n  const onNameNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.name.value]);\n\n  const onFederationNext = React.useCallback(async (): Promise<void> => {\n    if (!dropzone.fields.name.value) {\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Your dropzone must have a name']));\n      throw new Error();\n    }\n    if (!dropzone.fields.federation.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError([\n          'federation',\n          'Your dropzone must have an associated organization',\n        ])\n      );\n      throw new Error();\n    }\n  }, [dispatch, dropzone.fields.federation.value, dropzone.fields.name.value]);\n\n  const onLogoNext = React.useCallback(async () => {\n    if (!dropzone.fields.primaryColor.value) {\n      dispatch(\n        actions.forms.dropzone.setFieldError(['primaryColor', 'Please pick a primary color'])\n      );\n      throw new Error();\n    }\n    // Create or update dropzone\n    const result = !dropzone.original?.id\n      ? await mutationCreateDropzone.mutate({\n          federation: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          banner: dropzone.fields.banner.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value as number,\n          lng: dropzone.fields.lng.value as number,\n        })\n      : await mutationUpdateDropzone.mutate({\n          id: Number(dropzone.original.id),\n          federation: Number(dropzone.fields.federation.value?.id),\n          name: dropzone.fields.name.value || '',\n          primaryColor: dropzone.fields.primaryColor.value,\n          secondaryColor: dropzone.fields.secondaryColor.value,\n          lat: dropzone.fields.lat.value,\n          lng: dropzone.fields.lng.value,\n          banner: dropzone.fields.banner.value || '',\n        });\n\n    if (!result?.errors?.length && result?.dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(result?.dropzone));\n      dispatch(actions.global.setDropzone(result?.dropzone));\n      if (result.dropzone.primaryColor) {\n        dispatch(actions.global.setPrimaryColor(result?.dropzone?.primaryColor));\n      }\n      if (result.dropzone.secondaryColor) {\n        dispatch(actions.global.setAccentColor(result?.dropzone?.secondaryColor));\n      }\n    } else if (result?.fieldErrors?.length) {\n      result?.fieldErrors?.find(({ field, message }) => {\n        switch (camelize(field)) {\n          case 'primaryColor':\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            wizard.current?.scrollTo({ index: 3 });\n            return true;\n          case 'federation':\n            wizard.current?.scrollTo({ index: 1 });\n            dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            return true;\n          case 'name':\n            wizard.current?.scrollTo({ index: 0 });\n            dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            return true;\n          case 'lat':\n          case 'lng':\n            wizard.current?.scrollTo({ index: 2 });\n            dispatch(actions.forms.dropzone.setFieldError(['lat', message]));\n            return true;\n          default:\n            break;\n        }\n        return false;\n      });\n      throw new Error();\n    }\n  }, [\n    dispatch,\n    dropzone.fields.banner.value,\n    dropzone.fields.federation.value?.id,\n    dropzone.fields.lat.value,\n    dropzone.fields.lng.value,\n    dropzone.fields.name.value,\n    dropzone.fields.primaryColor.value,\n    dropzone.fields.secondaryColor.value,\n    dropzone.original?.id,\n    mutationCreateDropzone,\n    mutationUpdateDropzone,\n  ]);\n\n  const noop = React.useCallback(() => Promise.resolve(), []);\n  const wizard = React.useRef<WizardRef>();\n\n  return (\n    <Wizard\n      dots\n      steps={[\n        {\n          onBack: () => {\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.dropzone.reset());\n          },\n          onNext: onNameNext,\n          component: NameStep,\n        },\n        {\n          onNext: onFederationNext,\n          component: FederationStep,\n        },\n        { component: LocationStep },\n        { component: ThemingStep, onNext: noop },\n        {\n          onNext: onLogoNext,\n          component: LogoStep,\n        },\n        {\n          component: (stepProps) => (\n            <PermissionStep\n              {...stepProps}\n              permission={Permission.CreateSlot}\n              title=\"Manifest\"\n              description=\"Who can manifest themselves on loads?\"\n            />\n          ),\n        },\n        {\n          component: (stepProps) => (\n            <PermissionStep\n              {...stepProps}\n              description=\"Who can manifest other people on loads?\"\n              permission={Permission.CreateUserSlot}\n              title=\"Manifest others\"\n            />\n          ),\n        },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.global.setDropzone(dropzone.original));\n            if (dropzone.fields.primaryColor.value) {\n              dispatch(actions.global.setPrimaryColor(dropzone.fields.primaryColor.value));\n            }\n            if (dropzone.fields.secondaryColor.value) {\n              dispatch(actions.global.setAccentColor(dropzone.fields.secondaryColor.value));\n            }\n            dispatch(actions.global.setDropzone(dropzone.original));\n\n            dispatch(actions.forms.dropzone.setOpen(false));\n            dispatch(actions.forms.dropzone.reset());\n\n            // Set complete-flag to force navigation from dropzone screen\n            dispatch(actions.screens.dropzoneWizard.complete());\n            onComplete();\n          },\n        },\n      ]}\n    />\n  );\n}\n\nexport default DropzoneSetupScreen;\n","import { createMutation, isEmail, isRequired, isNumeric, validates } from '../createMutation';\nimport { UpdateUserMutation, UpdateUserMutationVariables } from '../operations';\nimport { UpdateUserDocument } from '../reflection';\n\nexport default createMutation<\n  UpdateUserMutationVariables,\n  Required<UpdateUserMutation>['updateUser']\n>(UpdateUserDocument, {\n  getPayload: (result) => result.updateUser,\n  validates: {\n    email: [isRequired('Email is required'), isEmail('Not a valid email')],\n    name: [isRequired('Name is required')],\n    exitWeight: [\n      isRequired('Exit weight is required'),\n      isNumeric('Exit weight must be a valid number'),\n      validates('Exit weight seems too low?', ({ exitWeight }) => {\n        return Number(exitWeight) > 30;\n      }),\n    ],\n  },\n});\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport FederationCardSelect from 'app/components/input/card_select/FederationCardSelect';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Affiliation\">\n      <Fields>\n        <FederationCardSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onSelect={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationWizardSceen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title={`${state.federation?.value?.name?.toUpperCase()} Number`}>\n      <Fields>\n        <TextInput\n          value={state.fields?.apfNumber?.value || ''}\n          mode=\"flat\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n          onChangeText={(newValue) =>\n            dispatch(actions.forms.user.setField(['apfNumber', newValue]))\n          }\n          label={`${state.federation.value?.name} ID`}\n        />\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default FederationWizardSceen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction RealName(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Real name\">\n      <Fields>\n        <TextInput\n          value={state.fields?.name?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n          label=\"Name\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n          {state.fields.name.error || ''}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default RealName;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction UserInfoScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Nickname\">\n      <Fields>\n        <TextInput\n          value={state.fields?.nickname?.value || ''}\n          mode=\"flat\"\n          onChangeText={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n          label=\"Nickname\"\n          style={{ backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n          {state.fields.nickname.error || 'This will be displayed as your preferred name'}\n        </HelperText>\n      </Fields>\n    </Step>\n  );\n}\nexport default UserInfoScreen;\n","import { LicenseDetailsFragment, LicenseEssentialsFragment } from 'app/api/operations';\nimport { useLicensesQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport CardSelect from './CardSelect';\n\ninterface ILicenseSelect {\n  value?: LicenseEssentialsFragment | null;\n  federationId?: number | null;\n  onSelect(jt: LicenseDetailsFragment): void;\n}\n\nexport default function LicenseCardSelect(props: ILicenseSelect) {\n  const { federationId, onSelect, value } = props;\n  const { data } = useLicensesQuery({\n    variables: {\n      federationId,\n    },\n  });\n  return (\n    <CardSelect<LicenseDetailsFragment>\n      autoSelectFirst\n      items={data?.licenses || []}\n      selected={[value].filter(Boolean) as LicenseDetailsFragment[]}\n      isSelected={(item) => item.id === value?.id}\n      renderItemLabel={(license) => license?.name}\n      onChangeSelected={([first]) => (first ? onSelect(first) : null)}\n    />\n  );\n}\n","import * as React from 'react';\nimport { HelperText } from 'react-native-paper';\nimport LicenseCardSelect from 'app/components/input/card_select/LicenseCardSelect';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction FederationStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"License\">\n      <Fields>\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseCardSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onSelect={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </Fields>\n    </Step>\n  );\n}\nexport default FederationStep;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { HelperText, Surface, TextInput } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport Select from 'app/components/input/select/Select';\n\nfunction RigWizardScreen(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n  const [isOtherMake, setIsOtherMake] = React.useState(false);\n\n  return (\n    <Step {...props} title=\"Your rig\">\n      <Fields>\n        <Select<string>\n          label=\"Manufacturer\"\n          onChange={(value) => {\n            setIsOtherMake(value === 'other');\n            dispatch(actions.forms.rig.setField(['make', value]));\n          }}\n          value={state.fields.make.value}\n          options={[\n            'Icon',\n            'Javelin',\n            'Mirage',\n            'Vector',\n            'PA (Talon)',\n            'Infinity',\n            'Parachutes de France',\n            'Parachute Systems',\n            'Racer',\n          ]\n            .map((label) => ({ label, value: label }))\n            .concat([{ label: 'Other', value: 'other' }])}\n        />\n        {!isOtherMake ? null : (\n          <Surface style={styles.card}>\n            <TextInput\n              style={{ backgroundColor: 'transparent' }}\n              mode=\"flat\"\n              label=\"Other manufacturer\"\n              error={!!state.fields.make.error}\n              value={state.fields.make.value || ''}\n              onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n            />\n          </Surface>\n        )}\n        {state.fields.make.error && (\n          <HelperText type={state.fields.make.error ? 'error' : 'info'}>\n            {state.fields.make.error || ''}\n          </HelperText>\n        )}\n\n        <Surface style={styles.card}>\n          <TextInput\n            style={{ backgroundColor: 'transparent' }}\n            mode=\"flat\"\n            label=\"Model\"\n            error={!!state.fields.model.error}\n            value={state.fields.model.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n          />\n          <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n            {state.fields.model.error || 'e.g G4.1'}\n          </HelperText>\n        </Surface>\n        <Surface style={styles.card}>\n          <TextInput\n            style={{ backgroundColor: 'transparent' }}\n            mode=\"flat\"\n            label=\"Serial number\"\n            error={!!state.fields.serial.error}\n            value={state.fields.serial.value || ''}\n            onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n          />\n          {state.fields.serial.error && (\n            <HelperText type={state.fields.serial.error ? 'error' : 'info'}>\n              {state.fields.serial.error}\n            </HelperText>\n          )}\n        </Surface>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n    backgroundColor: 'transparent',\n    marginVertical: 16,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { marginVertical: 8 },\n  title: {\n    color: 'white',\n    marginBottom: 16,\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default RigWizardScreen;\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport DayPicker from 'react-day-picker';\nimport Menu from 'app/components/popover/Menu';\nimport 'react-day-picker/lib/style.css';\nimport format from 'date-fns/format';\nimport { View } from 'react-native';\n\ninterface IDatepicker {\n  label: string;\n  value: number;\n  disabled?: boolean;\n  onChange(value: number): void;\n}\nexport default function DatePicker(props: IDatepicker) {\n  const { disabled, label, value, onChange } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const left = React.useCallback(() => <List.Icon icon=\"calendar\" />, []);\n  return (\n    <Menu\n      {...{ open, setOpen }}\n      anchor={\n        <List.Item\n          onPress={() => setOpen(true)}\n          disabled={!!disabled}\n          title={label}\n          description={value ? format(value * 1000, 'yyyy/MM/dd') : 'No date selected'}\n          left={left}\n        />\n      }\n    >\n      <View style={{ zIndex: 1500 }}>\n        <DayPicker\n          selectedDays={value ? [new Date(value * 1000)] : []}\n          onDayClick={(date) => {\n            onChange(date.getTime() / 1000);\n            setOpen(false);\n          }}\n        />\n      </View>\n    </Menu>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, HelperText, List } from 'react-native-paper';\nimport DatePicker from 'app/components/input/date_picker/DatePicker';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nfunction ReserveRepackStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Next reserve repack?\">\n      <Fields>\n        <Card style={styles.card}>\n          <List.Subheader>Due date</List.Subheader>\n          <DatePicker\n            label=\"Reserve repack due date\"\n            value={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n            onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n          />\n          <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n            {state.fields.repackExpiresAt.error || ''}\n          </HelperText>\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  title: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 80,\n    textAlign: 'center',\n  },\n});\n\nexport default ReserveRepackStep;\n","import * as React from 'react';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport CardSelect from 'app/components/input/card_select/CardSelect';\n\nfunction AskForRigStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Got a rig?\">\n      <Fields>\n        <CardSelect\n          items={[\n            { value: false, label: 'I have my own rig' },\n            { value: true, label: 'I dont have my own rig' },\n          ]}\n          renderItemLabel={({ label }) => label}\n          onChangeSelected={(options) =>\n            dispatch(actions.screens.userWizard.skipRigSetup(options[0].value))\n          }\n          isSelected={({ value }) => value === state.skipRigSetup}\n          selected={[\n            state.skipRigSetup\n              ? { value: true, label: 'I dont have my own rig' }\n              : { value: false, label: 'I have my own rig' },\n          ]}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default AskForRigStep;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Card, Paragraph } from 'react-native-paper';\nimport { ceil } from 'lodash';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport NumberField, { NumberFieldType } from 'app/components/input/number_input/NumberField';\n\nfunction WingloadingWizardScreen(props: IWizardStepProps) {\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const userForm = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Step {...props} title=\"Wing Loading\">\n      <Fields>\n        <View\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <View style={styles.wingLoadingCardLeft}>\n            <Avatar.Text\n              label={ceil(\n                (2.205 * Number(userForm.fields.exitWeight.value || 50)) /\n                  (rigForm.fields.canopySize.value || 150),\n                2\n              ).toString()}\n              size={100}\n              style={styles.wingLoading}\n            />\n          </View>\n          <View style={styles.wingLoadingCardRight}>\n            <Card.Title title=\"Your wingloading\" style={{ paddingLeft: 0 }} />\n            <Paragraph>\n              Your wingloading is an indicator of your descent rate under canopy\n            </Paragraph>\n          </View>\n        </View>\n\n        <Card style={styles.card} elevation={3}>\n          <NumberField\n            label=\"Your exit weight\"\n            variant={NumberFieldType.Weight}\n            value={Number(userForm?.fields?.exitWeight?.value) || 50}\n            onChange={(value) =>\n              dispatch(actions.forms.user.setField(['exitWeight', value.toString()]))\n            }\n            error={userForm.fields.exitWeight?.error}\n            helperText=\"Your weight in kg's with all equipment on\"\n          />\n          <NumberField\n            label=\"Canopy Size\"\n            variant={NumberFieldType.CanopySize}\n            value={Number(rigForm?.fields?.canopySize?.value) || 120}\n            onChange={(value) => dispatch(actions.forms.rig.setField(['canopySize', value]))}\n            helperText=\"Size of your main canopy in square feet\"\n            error={userForm.fields.exitWeight?.error}\n          />\n        </Card>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: { padding: 8, paddingRight: 16, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginVertical: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WingloadingWizardScreen;\n","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Step, Fields, IWizardStepProps } from 'app/components/carousel_wizard';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction Done(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Profile updated\">\n      <Fields>\n        <View style={{ flexGrow: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <LottieView\n            loop={false}\n            autoPlay\n            speed={1.2}\n            style={{ height: 300, width: 300 }}\n            source={lottieDoneAnimation as unknown as string}\n          />\n        </View>\n      </Fields>\n    </Step>\n  );\n}\nexport default Done;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Paragraph, TouchableRipple, useTheme } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useImagePicker from 'app/hooks/useImagePicker';\n\nfunction AvatarStep(props: IWizardStepProps) {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  const pickImage = useImagePicker();\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        dispatch(actions.forms.user.setField(['image', `data:image/jpeg;base64,${base64}`]));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n\n  return (\n    <Step {...props} title=\"Avatar\">\n      <Fields>\n        <View style={styles.avatarContainer}>\n          <TouchableRipple onPress={onPickImage}>\n            {!state?.fields?.image?.value ? (\n              <Avatar.Icon size={175} icon=\"camera\" />\n            ) : (\n              <Avatar.Image\n                size={175}\n                source={{ uri: state?.fields?.image?.value }}\n                style={{\n                  backgroundColor: theme.colors.primary,\n                }}\n              />\n            )}\n          </TouchableRipple>\n          <Paragraph style={styles.paragraph}>Press to upload a photo</Paragraph>\n        </View>\n      </Fields>\n    </Step>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarContainer: { marginBottom: 100, alignItems: 'center', justifyContent: 'center' },\n  paragraph: { marginTop: 16 },\n});\n\nexport default AvatarStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport {\n  useJoinFederationMutation,\n  useCreateRigMutation,\n  useUpdateRigMutation,\n} from 'app/api/reflection';\nimport useMutationUpdateUser from 'app/api/hooks/useMutationUpdateUser';\nimport { UserFields } from 'app/components/forms/user/slice';\nimport { License, Rig } from 'app/api/schema.d';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport { useRoute } from '@react-navigation/core';\nimport { useNotifications } from 'app/providers/notifications';\nimport FederationStep from './steps/Federation';\nimport FederationNumberStep from './steps/FederationNumber';\nimport RealNameStep from './steps/RealName';\nimport NicknameStep from './steps/Nickname';\nimport LicenseStep from './steps/License';\nimport RigStep from './steps/Rig';\nimport ReserveRepackStep from './steps/ReserveRepack';\nimport AskForRigStep from './steps/AskForRig';\nimport WingloadingStep from './steps/Wingloading';\nimport DoneStep from './steps/Done';\nimport AvatarStep from './steps/Avatar';\n\nfunction UserWizardScreen() {\n  const userForm = useAppSelector((root) => root.forms.user);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const state = useAppSelector((root) => root.screens.userWizard);\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const wizard = React.useRef<WizardRef>(null);\n  const { params } = useRoute<{ key: string; name: string; params: { index: number } }>();\n  console.debug('PARAMS', params);\n\n  React.useEffect(() => {\n    if (params?.index !== undefined && wizard.current) {\n      console.debug('SETTING INDEX', params.index);\n      wizard.current?.scrollTo({ index: params.index });\n    }\n  }, [params?.index]);\n\n  const [joinFederation] = useJoinFederationMutation();\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: () => null,\n    onError: notify.error,\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n  });\n  const [mutationUpdateRig] = useUpdateRigMutation();\n  const [mutationCreateRig] = useCreateRigMutation();\n\n  const onNameNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.name.value || !/\\s/.test(userForm.fields.name.value)) {\n      dispatch(\n        actions.forms.user.setFieldError(['name', 'Please enter your full name, including surname'])\n      );\n      throw new Error();\n    }\n  }, [dispatch, userForm.fields.name.value]);\n\n  const onNicknameNext = React.useCallback(async () => {\n    // Update user license\n    const result = await mutationUpdateUser.mutate({\n      dropzoneUser: userForm.original?.id?.toString(),\n      nickname: userForm.fields.nickname.value,\n      name: userForm.fields.name.value,\n    });\n\n    if (result?.errors) {\n      throw new Error();\n    }\n  }, [\n    mutationUpdateUser,\n    userForm.fields.name.value,\n    userForm.fields.nickname.value,\n    userForm.original?.id,\n  ]);\n\n  const onFederationNext = React.useCallback(async () => {\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          federation: userForm.federation?.value?.id,\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [dispatch, joinFederation, userForm.federation.value?.id, userForm.federation.value?.name]);\n\n  const onFederationNumberNext = React.useCallback(async () => {\n    // Validate\n    if (\n      userForm.federation.value?.name?.toLowerCase() === 'apf' &&\n      !userForm.fields.apfNumber.value\n    ) {\n      dispatch(actions.forms.user.setFieldError(['apfNumber', 'Please enter your APF number']));\n      throw new Error();\n    }\n\n    if (userForm.federation.value?.name?.toLowerCase() === 'apf') {\n      const mutationResult = await joinFederation({\n        variables: {\n          uid: userForm.fields.apfNumber.value,\n          federation: userForm.federation?.value?.id,\n        },\n      });\n      const license = mutationResult?.data?.joinFederation?.userFederation?.license;\n      console.debug('FOUND LICENSE', mutationResult?.data?.joinFederation);\n\n      if (license) {\n        dispatch(actions.forms.user.setField(['license', license as License]));\n      }\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation.value?.id,\n    userForm.federation.value?.name,\n    userForm.fields.apfNumber.value,\n  ]);\n\n  const onLicenseNext = React.useCallback(async () => {\n    // Validate\n    if (!userForm.fields.license?.value?.id) {\n      dispatch(actions.forms.user.setFieldError(['license', 'You must select a license']));\n      throw new Error();\n    }\n\n    if (!userForm.federation?.value?.id) {\n      dispatch(actions.forms.user.setFieldError(['license', 'You must select a federation']));\n      throw new Error();\n    }\n\n    try {\n      const response = await joinFederation({\n        variables: {\n          federation: userForm.federation?.value?.id,\n          license: userForm.fields.license?.value?.id,\n        },\n      });\n      if (response.data?.joinFederation?.errors) {\n        response.data?.joinFederation?.errors?.map((message) =>\n          dispatch(actions.forms.user.setFieldError(['license', message]))\n        );\n        throw new Error();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [\n    dispatch,\n    joinFederation,\n    userForm.federation?.value?.id,\n    userForm.fields.license?.value?.id,\n  ]);\n\n  const onRigNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.make?.value) {\n      dispatch(actions.forms.rig.setFieldError(['make', 'Please select manufacturer']));\n      throw new Error();\n    }\n\n    if (!rigForm.fields.model?.value) {\n      dispatch(actions.forms.rig.setFieldError(['model', 'Please enter a model name']));\n      throw new Error();\n    }\n\n    // Create user rig\n    try {\n      if (!rigForm.original?.id) {\n        console.debug('CREATING RIG');\n        const response = await mutationCreateRig({\n          variables: {\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.user?.id),\n          },\n        });\n        if (response?.data?.createRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.createRig?.rig as Rig));\n        } else {\n          console.debug('ERROR CREATING RIG', response?.data?.createRig);\n        }\n      } else {\n        console.debug('RIG ID IS', rigForm.original?.id);\n        const response = await mutationUpdateRig({\n          variables: {\n            id: Number(rigForm.original?.id),\n            make: rigForm.fields.make.value,\n            model: rigForm.fields.model.value,\n            serial: rigForm.fields.serial.value,\n            userId: Number(userForm.original?.user?.id),\n          },\n        });\n        if (response?.data?.updateRig?.rig) {\n          dispatch(actions.forms.rig.setOriginal(response?.data?.updateRig?.rig as Rig));\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [\n    rigForm.fields.make.value,\n    rigForm.fields.model.value,\n    rigForm.fields.serial.value,\n    rigForm.original?.id,\n    dispatch,\n    mutationCreateRig,\n    userForm.original?.user?.id,\n    mutationUpdateRig,\n  ]);\n\n  const onReserveRepackNext = React.useCallback(async () => {\n    try {\n      // Validate\n      if (!rigForm.fields.repackExpiresAt?.value) {\n        dispatch(\n          actions.forms.rig.setFieldError([\n            'repackExpiresAt',\n            \"Select repack date, even if it's in the past\",\n          ])\n        );\n        throw new Error();\n      }\n\n      // Update repack expiry date\n      const { data } = await mutationUpdateRig({\n        variables: {\n          id: Number(rigForm.original?.id),\n          repackExpiresAt: rigForm.fields.repackExpiresAt.value,\n        },\n      });\n      console.debug('Updated rig', data);\n      if (data?.updateRig?.rig) {\n        dispatch(actions.forms.rig.setOriginal(data?.updateRig?.rig as Rig));\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [dispatch, mutationUpdateRig, rigForm.fields.repackExpiresAt.value, rigForm.original?.id]);\n\n  const onWingloadingNext = React.useCallback(async () => {\n    // Validate\n    if (!rigForm.fields.canopySize?.value) {\n      dispatch(actions.forms.rig.setFieldError(['canopySize', 'You must provide a canopy size']));\n      throw new Error();\n    }\n\n    if (!userForm.fields.exitWeight?.value) {\n      dispatch(actions.forms.user.setFieldError(['exitWeight', 'You must enter your exit weight']));\n      throw new Error();\n    }\n\n    await mutationUpdateRig({\n      variables: {\n        id: Number(rigForm.original?.id),\n        canopySize: rigForm.fields.canopySize.value,\n      },\n    });\n    await mutationUpdateUser.mutate({\n      dropzoneUser: userForm.original?.id,\n      exitWeight: Number(userForm.fields.exitWeight?.value),\n    });\n  }, [\n    rigForm.fields.canopySize.value,\n    rigForm.original?.id,\n    userForm.fields.exitWeight?.value,\n    userForm.original?.id,\n    dispatch,\n    mutationUpdateRig,\n    mutationUpdateUser,\n  ]);\n\n  const onImageNext = React.useCallback(async () => {\n    try {\n      if (\n        userForm.fields.image?.value &&\n        userForm.fields.image?.value !== userForm.original?.user?.image\n      ) {\n        // Upload image\n        await mutationUpdateUser.mutate({\n          dropzoneUser: userForm?.original?.id,\n          image: userForm.fields.image.value,\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [\n    mutationUpdateUser,\n    userForm.fields.image.value,\n    userForm.original?.id,\n    userForm.original?.user?.image,\n  ]);\n\n  const steps = React.useMemo(\n    () =>\n      [\n        {\n          component: RealNameStep,\n          onNext: onNameNext,\n          onBack: () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n        { component: NicknameStep, onNext: onNicknameNext },\n        { component: AvatarStep, onNext: onImageNext },\n        { component: FederationStep, onNext: onFederationNext },\n        userForm.federation?.value?.id && userForm?.federation?.value?.name?.toLowerCase() === 'apf'\n          ? { component: FederationNumberStep, onNext: onFederationNumberNext }\n          : null,\n        { component: LicenseStep, onNext: onLicenseNext },\n        { component: AskForRigStep },\n        state?.skipRigSetup ? null : { component: RigStep, onNext: onRigNext },\n        state?.skipRigSetup ? null : { component: ReserveRepackStep, onNext: onReserveRepackNext },\n        state?.skipRigSetup ? null : { component: WingloadingStep, onNext: onWingloadingNext },\n        {\n          component: DoneStep,\n          onNext: async () => {\n            dispatch(actions.forms.user.setOpen(false));\n            dispatch(actions.forms.rig.setOpen(false));\n            dispatch(actions.forms.user.reset());\n            dispatch(actions.forms.rig.reset());\n          },\n        },\n      ].filter(Boolean),\n    [\n      dispatch,\n      onFederationNext,\n      onFederationNumberNext,\n      onImageNext,\n      onLicenseNext,\n      onNameNext,\n      onNicknameNext,\n      onReserveRepackNext,\n      onRigNext,\n      onWingloadingNext,\n      state?.skipRigSetup,\n      userForm.federation?.value?.id,\n      userForm.federation?.value?.name,\n    ]\n  );\n\n  return <Wizard ref={wizard} dots {...{ steps }} />;\n}\n\nexport default UserWizardScreen;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction EmailStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Email\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Email\"\n          value={fields.email.value || ''}\n          error={fields.email.error}\n          onChangeText={(newText) => {\n            dispatch(actions.screens.signup.setField(['email', newText]));\n          }}\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default EmailStep;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Check your email\">\n      <Fields>\n        <Paragraph>We've sent you a link to restore your password.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useRecoverPasswordMutation } from 'app/api/reflection';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport EmailStep from './steps/Email';\nimport DoneStep from './steps/Done';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n  const wizard = React.useRef<WizardRef>(null);\n  const [onRecover] = useRecoverPasswordMutation();\n\n  const onClickRecover = React.useCallback(async () => {\n    try {\n      await onRecover({\n        variables: {\n          email: state.fields.email.value,\n          redirectUrl: '',\n        },\n      });\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['email', e.message]));\n      }\n      throw e;\n    }\n  }, [dispatch, onRecover, state.fields.email.value]);\n\n  return (\n    <Wizard\n      dots\n      ref={wizard}\n      steps={[{ onNext: onClickRecover, component: EmailStep }, { component: DoneStep }]}\n    />\n  );\n}\n","import { StyleSheet, Text, View } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { Avatar } from 'react-native-paper';\nimport { successColor, warningColor } from '../../../constants/Colors';\nimport LottieView from '../../../components/LottieView';\nimport { useConfirmUserMutation } from '../../../api/reflection';\nimport { actions, useAppDispatch } from '../../../state';\nimport { User } from '../../../api/schema.d';\n\nfunction ConfirmUserScreen() {\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n  const dispatch = useAppDispatch();\n  const [confirmUser, mutation] = useConfirmUserMutation();\n  const animation = React.useRef<LottieView>(null);\n  const [error, setError] = React.useState(false);\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (route?.params?.token) {\n      confirmUser({\n        variables: {\n          token: route.params.token,\n        },\n      })\n        .then(({ data, errors }) => {\n          if (data?.userConfirmRegistrationWithToken?.credentials?.accessToken) {\n            dispatch(\n              actions.global.setCredentials(data.userConfirmRegistrationWithToken.credentials)\n            );\n            dispatch(\n              actions.global.setUser(data.userConfirmRegistrationWithToken.authenticatable as User)\n            );\n            navigation.navigate('Limbo', { screen: 'DropzoneSelectScreen' });\n          } else {\n            setError(true);\n          }\n        })\n        .catch(() => {\n          setError(true);\n        });\n    }\n  }, [confirmUser, dispatch, navigation, route.params?.token]);\n\n  if (mutation.loading) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>OpenManifest</Text>\n        <LottieView\n          autoPlay\n          loop\n          ref={animation}\n          style={{\n            width: 120,\n            height: 120,\n            marginTop: 24,\n            marginBottom: 32,\n          }}\n          // eslint-disable-next-line global-require\n          source={require('../../../../assets/images/loading.json')}\n        />\n        <Text style={styles.subtitle}>Confirming...</Text>\n      </View>\n    );\n  }\n\n  return !error ? (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"check\" style={styles.icon} />\n      <Text style={styles.title}>All done!</Text>\n      <Text style={styles.subtitle}>You can now log in</Text>\n    </View>\n  ) : (\n    <View style={styles.container}>\n      <Avatar.Icon icon=\"close\" style={styles.errorIcon} />\n      <Text style={styles.title}>Oops!</Text>\n      <Text style={styles.subtitle}>Something went wrong.</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    backgroundColor: '#EFEFEF',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    backgroundColor: successColor,\n    marginBottom: 16,\n  },\n  errorIcon: {\n    backgroundColor: warningColor,\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 38,\n    marginBottom: 16,\n  },\n  subtitle: {\n    fontSize: 26,\n    textAlign: 'center',\n  },\n});\n\nexport default ConfirmUserScreen;\n","import * as React from 'react';\nimport { Paragraph } from 'react-native-paper';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport LottieView from 'app/components/LottieView';\nimport lottieDoneAnimation from '../../../../../assets/images/finished-2.json';\n\nfunction DoneStep(props: IWizardStepProps) {\n  return (\n    <Step {...props} title=\"Password changed\">\n      <Fields>\n        <LottieView\n          loop={false}\n          autoPlay\n          speed={1.2}\n          style={{ height: 300, width: 300, alignSelf: 'center' }}\n          source={lottieDoneAnimation as unknown as string}\n        />\n        <Paragraph>Your password has been changed. You can now log in again.</Paragraph>\n      </Fields>\n    </Step>\n  );\n}\n\nexport default DoneStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\nimport PasswordComplexityIndicator from 'app/components/input/PasswordComplexityIndicator';\nimport checkPasswordComplexity from 'app/utils/checkPasswordComplexity';\n\nfunction PasswordStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.password.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.password.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['password', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n        <PasswordComplexityIndicator strength={checkPasswordComplexity(fields.password.value)} />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordStep;\n","import * as React from 'react';\nimport TextInput from 'app/components/input/text/TextField';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Step, IWizardStepProps, Fields } from 'app/components/carousel_wizard/Step';\n\nfunction PasswordConfirmationStep(props: IWizardStepProps) {\n  const { fields } = useAppSelector((state) => state.screens.signup);\n  const dispatch = useAppDispatch();\n  return (\n    <Step {...props} title=\"Repeat password\">\n      <Fields>\n        <TextInput\n          mode=\"flat\"\n          label=\"Password\"\n          error={fields.passwordConfirmation.error}\n          textContentType=\"password\"\n          secureTextEntry\n          passwordRules=\"required: upper; required: lower; required: digit; minlength: 8;\"\n          value={fields.passwordConfirmation.value}\n          onChangeText={(newValue) =>\n            dispatch(actions.screens.signup.setField(['passwordConfirmation', newValue]))\n          }\n          style={{ width: '100%', backgroundColor: 'transparent', fontSize: 32, height: 70 }}\n        />\n      </Fields>\n    </Step>\n  );\n}\n\nexport default PasswordConfirmationStep;\n","import * as React from 'react';\nimport { Wizard } from 'app/components/carousel_wizard';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useUpdateLostPasswordMutation } from 'app/api/reflection';\nimport checkPasswordComplexity, { PasswordStrength } from 'app/utils/checkPasswordComplexity';\nimport { User } from 'app/api/schema.d';\nimport { useNavigation, useRoute } from '@react-navigation/core';\nimport { WizardRef } from 'app/components/carousel_wizard/Wizard';\nimport DoneStep from './steps/Done';\nimport PasswordStep from './steps/Password';\nimport PasswordConfirmationStep from './steps/PasswordConfirmation';\n\nexport default function SignupWizard() {\n  const state = useAppSelector((root) => root.screens.signup);\n  const dispatch = useAppDispatch();\n  const route = useRoute<{\n    key: string;\n    name: string;\n    // eslint-disable-next-line camelcase\n    params?: { token?: string };\n  }>();\n\n  const [updatePassword] = useUpdateLostPasswordMutation();\n  const wizard = React.useRef<WizardRef>(null);\n\n  const onChangePassword = React.useCallback(async () => {\n    try {\n      if (state.fields.password.value !== state.fields.passwordConfirmation.value) {\n        throw new Error('Password mismatch. Did you type exactly the same password?');\n      }\n      if (!route.params?.token) {\n        throw new Error('Security token missing - try clicking the link in the email again');\n      }\n      const result = await updatePassword({\n        variables: {\n          password: state.fields.password.value,\n          passwordConfirmation: state.fields.passwordConfirmation.value,\n          token: route.params.token,\n        },\n      });\n\n      if (result?.data?.userUpdatePasswordWithToken?.authenticatable) {\n        dispatch(\n          actions.global.setUser(result.data.userUpdatePasswordWithToken.authenticatable as User)\n        );\n        return;\n      }\n      if (result.errors?.length) {\n        throw new Error(result.errors[0].message);\n      }\n      throw new Error('Password change failed');\n    } catch (e) {\n      if (e instanceof Error) {\n        dispatch(actions.screens.signup.setFieldError(['passwordConfirmation', e.message]));\n      }\n      throw e;\n    }\n  }, [\n    dispatch,\n    route.params?.token,\n    state.fields.password.value,\n    state.fields.passwordConfirmation.value,\n    updatePassword,\n  ]);\n\n  const navigation = useNavigation();\n\n  const validatePassword = React.useCallback(async () => {\n    if (checkPasswordComplexity(state.fields.password.value) < PasswordStrength.Acceptable) {\n      dispatch(actions.screens.signup.setFieldError(['password', 'Password too weak']));\n      throw new Error('Password too weak');\n    }\n  }, [dispatch, state.fields.password.value]);\n\n  const onFinished = React.useCallback(async () => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    navigation.replace('Unauthenticated', { screen: 'LoginScreen' });\n    throw new Error('Error thrown to prevent navigation.goBack');\n  }, [navigation]);\n\n  return (\n    <Wizard\n      dots\n      ref={wizard}\n      steps={[\n        { onBack: navigation.goBack, onNext: validatePassword, component: PasswordStep },\n        { onNext: onChangePassword, component: PasswordConfirmationStep },\n        { component: DoneStep, onNext: onFinished },\n      ]}\n    />\n  );\n}\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { UserRoutes } from './routes';\n\nexport function useUserNavigation() {\n  return useNavigation<NavigationProp<UserRoutes>>();\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { RefreshControl, FlatList, StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Card, FAB, List, ProgressBar, useTheme } from 'react-native-paper';\n\nimport SkeletonContent from 'app/components/Skeleton';\nimport NoResults from 'app/components/NoResults';\nimport { Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { DropzoneUserEssentialsFragment, DropzoneUsersQueryVariables } from 'app/api/operations';\nimport { useDropzoneContext } from 'app/providers';\nimport omitBy from 'lodash/omitBy';\nimport isEmpty from 'lodash/isEmpty';\nimport { useUserNavigation } from '../useUserNavigation';\n\nfunction UserCardSkeleton() {\n  const theme = useTheme();\n  return (\n    <SkeletonContent\n      isLoading\n      containerStyle={{\n        height: 75,\n        backgroundColor: theme.colors.surface,\n        width: '100%',\n        padding: 16,\n        margin: 1,\n        flexDirection: 'row',\n      }}\n      layout={[\n        { key: 'user-avatar', height: 48, width: 48, marginHorizontal: 12, borderRadius: 48 / 2 },\n        {\n          key: 'list-container',\n          flexDirection: 'column',\n          children: [\n            {\n              key: 'user-name',\n              height: 14,\n              width: 180,\n              marginTop: 2,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n            {\n              key: 'user-role',\n              height: 14,\n              width: 100,\n              marginTop: 8,\n              marginLeft: 8,\n              borderRadius: 55 / 2,\n            },\n          ],\n        },\n      ]}\n    />\n  );\n}\n\nconst loadingFragment: DropzoneUserEssentialsFragment = {\n  id: '__LOADING__',\n  hasCredits: false,\n  walletId: '__LOADING__',\n  hasExitWeight: false,\n  hasLicense: false,\n  hasMembership: false,\n  user: {\n    id: '__LOADING__',\n  },\n};\n\nexport type UserListRoute = {\n  UserListScreen: undefined;\n};\n\nexport default function UsersScreen() {\n  const global = useAppSelector((root) => root.global);\n  const state = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { dropzone },\n    dialogs,\n  } = useDropzoneContext();\n\n  const { data, loading, refetch } = useDropzoneUsersQuery({\n    variables: omitBy<DropzoneUsersQueryVariables>(\n      {\n        dropzoneId: dropzone?.id as string,\n        search: state.searchText,\n      },\n      isEmpty\n    ) as DropzoneUsersQueryVariables,\n    skip: !dropzone?.id,\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const navigation = useUserNavigation();\n\n  const isFocused = useIsFocused();\n  React.useEffect(() => {\n    if (state.isSearchVisible && !isFocused) {\n      dispatch(actions.screens.users.setSearchVisible(false));\n    }\n  }, [dispatch, isFocused, state.isSearchVisible]);\n\n  const canCreateUser = useRestriction(Permission.CreateUser);\n  const { width } = useWindowDimensions();\n\n  const cardWidth = 370;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n\n  const users = React.useMemo(() => data?.dropzoneUsers?.edges || [], [data?.dropzoneUsers?.edges]);\n  console.debug({ users, numColumns });\n  const initialLoading = !users?.length && loading;\n  const theme = useTheme();\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: theme.colors.surface }}>\n      <ProgressBar indeterminate color={global.theme.colors.primary} visible={loading} />\n      {users?.length ? null : (\n        <View style={styles.empty}>\n          <NoResults title=\"No users\" subtitle=\"\" />\n        </View>\n      )}\n      <FlatList<DropzoneUserEssentialsFragment>\n        data={initialLoading ? new Array(8).fill(loadingFragment) : users.map((edge) => edge?.node)}\n        onRefresh={() =>\n          refetch({\n            dropzoneId: global.currentDropzoneId?.toString(),\n            search: state.searchText,\n          })\n        }\n        keyExtractor={(item, idx) => `user-${item?.id || idx}-${idx}`}\n        style={{\n          flex: 1,\n          paddingTop: 0,\n        }}\n        refreshing={loading}\n        refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n        numColumns={numColumns}\n        contentContainerStyle={{ width: '100%' }}\n        renderItem={({ item }) =>\n          item.id === '__LOADING__' ? (\n            <UserCardSkeleton />\n          ) : (\n            <Card\n              key={`user-${item?.id}`}\n              style={{\n                margin: 0,\n                marginVertical: 0,\n                borderRadius: 2,\n                width: `${100 / numColumns}%`,\n              }}\n            >\n              <Card.Content\n                style={{ paddingLeft: 0, paddingTop: 4, paddingRight: 0, paddingBottom: 4 }}\n              >\n                <List.Item\n                  style={{ width: '100%' }}\n                  title={item?.user.name}\n                  titleStyle={{ fontWeight: 'bold' }}\n                  descriptionStyle={{ fontSize: 12 }}\n                  description={item?.role?.name?.replace('_', ' ').toUpperCase()}\n                  left={() =>\n                    !item?.user?.image ? (\n                      <Avatar.Icon\n                        icon=\"account\"\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                        }}\n                        size={48}\n                      />\n                    ) : (\n                      <Avatar.Image\n                        source={{ uri: item?.user.image }}\n                        style={{\n                          alignSelf: 'center',\n                          marginHorizontal: 22,\n                          backgroundColor: global.palette.primary.light,\n                        }}\n                        size={48}\n                      />\n                    )\n                  }\n                  right={() => <List.Icon icon=\"chevron-right\" />}\n                  onPress={() =>\n                    navigation.navigate('ProfileScreen', {\n                      userId: item?.id,\n                    })\n                  }\n                />\n              </Card.Content>\n            </Card>\n          )\n        }\n      />\n\n      {canCreateUser && (\n        <FAB\n          style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n          small\n          icon=\"plus\"\n          onPress={dialogs.createUser.open}\n          label=\"Add user\"\n        />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import * as React from 'react';\nimport { Appbar, TextInput } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { StyleSheet, View } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useAppSelector } from 'app/state';\n\ninterface ISearchableAppBar extends StackHeaderProps {\n  searchVisible: boolean;\n  searchText: string;\n  setSearchVisible(visible: boolean): void;\n  onSearch(text: string): void;\n}\n\nfunction AppBar({\n  navigation,\n  onSearch,\n  options,\n  back,\n  searchText,\n  searchVisible,\n  setSearchVisible,\n}: ISearchableAppBar) {\n  const { theme } = useAppSelector((root) => root.global);\n  return (\n    <Appbar.Header\n      style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n    >\n      {back ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n      {searchVisible ? <Appbar.BackAction onPress={() => setSearchVisible(false)} /> : null}\n      {searchVisible ? (\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Search users...\"\n            value={searchText || ''}\n            onChangeText={(text) => onSearch(text)}\n            autoFocus\n          />\n        </View>\n      ) : (\n        <Appbar.Content title={options.title} titleStyle={{ fontWeight: 'bold' }} />\n      )}\n      {searchVisible ? (\n        <MaterialIcons\n          name=\"close\"\n          onPress={() => setSearchVisible(!searchVisible)}\n          color={theme.colors.text}\n          size={24}\n          style={styles.icon}\n        />\n      ) : (\n        <MaterialIcons\n          name=\"search\"\n          onPress={() => setSearchVisible(!searchVisible)}\n          color={theme.colors.text}\n          size={24}\n          style={styles.icon}\n        />\n      )}\n    </Appbar.Header>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexGrow: 1,\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: '#FFFFFF',\n    fontSize: 20,\n  },\n  icon: {\n    marginHorizontal: 8,\n  },\n});\n\nexport default AppBar;\n","import NumberField from 'app/components/input/number_input/NumberField';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { Checkbox, HelperText, List } from 'react-native-paper';\nimport { Permission } from '../../../api/schema.d';\nimport useRestriction from '../../../hooks/useRestriction';\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport TextInput from '../../input/text/TextField';\nimport { FieldItem } from './slice';\n\ninterface IFormItemItem {\n  value: string | number | boolean;\n  onChange(value: FieldItem): void;\n  config: FieldItem;\n}\n\nexport default function RigInspectionItem(props: IFormItemItem) {\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const { value, onChange, config } = props;\n\n  if (config?.valueType && config?.valueType === 'string') {\n    return (\n      <View style={{ flex: 1 }}>\n        <TextInput\n          disabled={!canInspect}\n          style={{ marginVertical: 8 }}\n          value={value as string}\n          onChange={(text) => onChange({ ...config, value: text })}\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'boolean') {\n    return (\n      <List.Item\n        title={config.label || ''}\n        disabled={!canInspect}\n        description={config.description}\n        style={{ marginVertical: 8 }}\n        right={() => <Checkbox.Android status={value ? 'checked' : 'unchecked'} />}\n        onPress={() => onChange({ ...config, value: !value as boolean })}\n      />\n    );\n  }\n  if (config?.valueType && config?.valueType === 'integer') {\n    return (\n      <View style={{ flex: 1 }}>\n        <NumberField\n          disabled={!canInspect}\n          value={value as number}\n          mode=\"outlined\"\n          helperText={config.description || 'No description'}\n          onChange={(text) => onChange({ ...config, value: text as number })}\n          label={config.label || ''}\n        />\n      </View>\n    );\n  }\n  if (config?.valueType && config?.valueType === 'date') {\n    return (\n      <View style={{ flex: 1 }}>\n        <DatePicker\n          disabled={!canInspect}\n          value={Number(value)}\n          onChange={(time) =>\n            onChange({\n              ...config,\n              value: time.toString() as string,\n            })\n          }\n          label={config.label || ''}\n        />\n        <HelperText type=\"info\">{config.description || 'No description'}</HelperText>\n      </View>\n    );\n  }\n\n  return null;\n}\n","import * as React from 'react';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\nimport RigInspectionItem from '../rig_inspection_template/RigInspectionItem';\n\nexport default function RigInspectionForm() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {state.fields.map((item, index) => {\n        return (\n          <RigInspectionItem\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            config={item}\n            value={item?.value || ''}\n            onChange={(value) => dispatch(actions.forms.rigInspection.setField([index, value]))}\n          />\n        );\n      })}\n    </>\n  );\n}\n","import { createMutation } from '../createMutation';\nimport { RigInput, UpdateRigPayload } from '../schema.d';\nimport { UpdateRigDocument } from '../reflection';\n\nexport default createMutation<{ id: number } & RigInput, UpdateRigPayload>(UpdateRigDocument, {\n  getPayload: (result) => result.updateRig,\n  fieldErrorMap: {},\n});\n","import { format } from 'date-fns';\nimport * as React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { Avatar, Card, Chip, Divider, ProgressBar, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  RigInspectionEssentialsFragment,\n  RigEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n} from 'app/api/operations';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useRestriction from 'app/hooks/useRestriction';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport useMutationUpdateRig from 'app/api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { errorColor, successColor } from 'app/constants/Colors';\n\nimport { Permission } from 'app/api/schema.d';\nimport { AvailableRigsDocument, DropzoneUsersDetailedDocument } from 'app/api/reflection';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUserNavigation } from '../useUserNavigation';\n\nexport interface IRigCardProps {\n  rig: RigEssentialsFragment;\n  dropzoneUser?: DropzoneUserEssentialsFragment | null;\n  rigInspection?: RigInspectionEssentialsFragment;\n  onSuccessfulImageUpload?(): void;\n  onPress?(): void;\n}\nexport default function RigCard(props: IRigCardProps) {\n  const { rig, rigInspection, dropzoneUser, onSuccessfulImageUpload, onPress } = props;\n  const [isUploading, setUploading] = React.useState(false);\n  const { accent } = useAppSelector((root) => root.global.theme.colors);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const pickImage = useImagePicker();\n\n  const updateRig = useMutationUpdateRig({\n    mutation: {\n      refetchQueries: [AvailableRigsDocument, DropzoneUsersDetailedDocument],\n    },\n    onSuccess: () => {\n      setUploading(false);\n      onSuccessfulImageUpload?.();\n      notify.success('Image uploaded');\n    },\n    onError: (err) => {\n      console.log(err);\n      setUploading(false);\n      notify.error('Upload failed');\n    },\n  });\n  const [isPackingCardMenuOpen, setPackingCardMenuOpen] = React.useState<boolean>(false);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const result = pickImage();\n\n      setUploading(true);\n      // Upload image\n      await updateRig.mutate({\n        id: Number(rig?.id),\n        packingCard: `data:image/jpeg;base64,${result}`,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [pickImage, rig?.id, updateRig]);\n\n  const canManageDropzoneRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const navigation = useUserNavigation();\n  const canUpdateRig =\n    currentUser?.user?.id === rig.owner?.id || (rig?.dropzone?.id && canManageDropzoneRigs);\n\n  const theme = useTheme();\n\n  return (\n    <Card onPress={onPress} style={{ marginVertical: 16, maxWidth: 500 }}>\n      <ProgressBar visible={isUploading} indeterminate color={accent} />\n      <Card.Title title={rig.name || `${rig.make} ${rig.model}`} />\n      <Card.Content>\n        <View style={styles.content}>\n          <View style={styles.left}>\n            <Avatar.Icon\n              icon=\"parachute\"\n              size={70}\n              style={{ backgroundColor: theme.dark ? theme.colors.surface : theme.colors.primary }}\n            />\n          </View>\n          <View style={styles.right}>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>Container</Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.make} {rig.model}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Main canopy size\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.canopySize}\n              </Text>\n            </View>\n            <View style={styles.textRow}>\n              <Text style={[styles.label, { color: theme.colors.onSurface }]}>\n                Repack expiry date\n              </Text>\n              <Text style={[styles.description, { color: theme.colors.onSurface }]}>\n                {rig.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : 'N/A'}\n              </Text>\n            </View>\n          </View>\n        </View>\n        <View style={{ flexDirection: 'row', marginTop: 8 }} />\n      </Card.Content>\n      <Card.Actions style={{ justifyContent: 'flex-end' }} pointerEvents=\"box-none\">\n        <Menu\n          setOpen={setPackingCardMenuOpen}\n          open={isPackingCardMenuOpen}\n          anchor={\n            <Chip\n              mode=\"outlined\"\n              icon=\"camera\"\n              style={{ height: 24, alignItems: 'center' }}\n              textStyle={{ marginTop: 0 }}\n              onPress={() => {\n                if (canUpdateRig) {\n                  setPackingCardMenuOpen(true);\n                } else if (rig?.packingCard) {\n                  dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                }\n              }}\n            >\n              {!rig.packingCard ? 'No packing card' : 'Packing card'}\n            </Chip>\n          }\n        >\n          <MenuItem\n            title=\"Upload new\"\n            icon=\"camera\"\n            onPress={() => {\n              onPickImage();\n              setPackingCardMenuOpen(false);\n            }}\n          />\n\n          {!rig.packingCard ? null : (\n            <>\n              <Divider />\n              <MenuItem\n                title=\"View\"\n                icon=\"eye\"\n                onPress={() => {\n                  setPackingCardMenuOpen(false);\n                  if (rig.packingCard) {\n                    dispatch(actions.imageViewer.setOpen(rig.packingCard));\n                  }\n                }}\n              />\n            </>\n          )}\n        </Menu>\n\n        <Chip\n          mode=\"outlined\"\n          style={[\n            styles.chip,\n            {\n              backgroundColor: rigInspection?.inspectedBy?.user?.name ? successColor : errorColor,\n            },\n          ]}\n          onPress={() => {\n            navigation.navigate('RigInspectionScreen', {\n              rigId: rig.id,\n              dropzoneUserId: dropzoneUser?.id as string,\n            });\n          }}\n        >\n          <View style={styles.innerChip}>\n            <View style={{ marginRight: 8 }}>\n              <MaterialCommunityIcons name=\"eye-check-outline\" color=\"#FFFFFF\" size={18} />\n            </View>\n            <Text style={{ color: 'white' }}>\n              {rigInspection?.inspectedBy?.user?.name || 'Not inspected'}\n            </Text>\n          </View>\n        </Chip>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n    justifyContent: 'space-between',\n    flex: 1,\n  },\n  left: {\n    flex: 0.25,\n  },\n  right: {\n    flex: 0.75,\n  },\n  textRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  label: {\n    fontWeight: '500',\n    width: 130,\n    textAlign: 'left',\n    marginRight: 16,\n    marginVertical: 4,\n  },\n  description: {\n    fontWeight: 'normal',\n    flexGrow: 1,\n  },\n});\n","import { RouteProp, useNavigation, useRoute } from '@react-navigation/core';\nimport { startOfDay } from 'date-fns';\nimport * as React from 'react';\nimport { Button, Card, Checkbox, Divider, Paragraph } from 'react-native-paper';\nimport { KeyboardAvoidingView, Platform, View } from 'react-native';\nimport RigInspectionForm from 'app/components/forms/rig_inspection/RigInspectionForm';\nimport {\n  DropzoneDocument,\n  DropzoneUserProfileDocument,\n  useCreateRigInspectionMutation,\n  useRigInspectionTemplateQuery,\n} from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { Query, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { DropzoneUserProfileQuery, DropzoneUserProfileQueryVariables } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport { Screen } from 'app/components/layout';\nimport { useNotifications } from 'app/providers/notifications';\nimport RigCard from '../equipment/RigCard';\n\nexport type RigInspectionRoute = {\n  RigInspectionScreen: {\n    rigId: string;\n    dropzoneUserId: string;\n  };\n};\nexport default function RigInspectionScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspection);\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n\n  const notify = useNotifications();\n  const route = useRoute<RouteProp<RigInspectionRoute>>();\n  const { rigId, dropzoneUserId } = route.params;\n  const { dropzoneUser } = useUserProfile({\n    id: dropzoneUserId,\n  });\n  const { data: rigInspectionQuery } = useRigInspectionTemplateQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id as string,\n    },\n    skip: !currentDropzone?.dropzone?.id,\n  });\n\n  const rig = React.useMemo(\n    () => dropzoneUser?.user?.rigs?.find(({ id }) => id === rigId),\n    [dropzoneUser?.user?.rigs, rigId]\n  );\n\n  const canInspect = useRestriction(Permission.ActAsRigInspector);\n  const [mutationCreateRigInspection, mutation] = useCreateRigInspectionMutation();\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    const hasExistingRigInspection = dropzoneUser?.rigInspections?.some(\n      (inspection) =>\n        inspection.rig?.id?.toString() === rig?.id?.toString() && inspection.definition\n    );\n\n    if (hasExistingRigInspection) {\n      const inspection = dropzoneUser?.rigInspections?.find((record) => record.rig?.id === rig?.id);\n\n      if (inspection) {\n        dispatch(actions.forms.rigInspection.setFields(inspection.definition || '{}'));\n        dispatch(actions.forms.rigInspection.setOk(inspection.isOk));\n      }\n    } else {\n      dispatch(\n        actions.forms.rigInspection.setFields(\n          rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition || '[]'\n        )\n      );\n    }\n  }, [\n    rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition,\n    dispatch,\n    rig?.id,\n    dropzoneUser?.rigInspections,\n  ]);\n\n  const createRigInspection = React.useCallback(async () => {\n    try {\n      await mutationCreateRigInspection({\n        variables: {\n          dropzone: currentDropzone?.dropzone?.id,\n          rig: rig?.id,\n          definition: JSON.stringify(state.fields),\n          isOk: !!state.ok,\n        },\n        update: async (client, mutationResult) => {\n          const rigInspection = mutationResult.data?.createRigInspection?.rigInspection;\n          const result = client.readQuery<\n            DropzoneUserProfileQuery,\n            DropzoneUserProfileQueryVariables\n          >({\n            query: DropzoneUserProfileDocument,\n            variables: {\n              id: currentDropzone?.dropzone?.id as string,\n            },\n          });\n\n          const currentDz = client.readQuery<Query>({\n            query: DropzoneDocument,\n            variables: {\n              dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n              earliestTimestamp: startOfDay(new Date()).toISOString(),\n            },\n          });\n\n          if (currentDz?.dropzone?.currentUser?.id === rigInspection?.dropzoneUser?.id) {\n            client.writeQuery({\n              query: DropzoneDocument,\n              variables: {\n                dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n                earliestTimestamp: startOfDay(new Date()).toISOString(),\n              },\n              data: {\n                ...currentDz,\n                dropzone: {\n                  ...currentDz?.dropzone,\n                  currentUser: {\n                    ...currentDz?.dropzone?.currentUser,\n                    rigInspections: [\n                      ...(currentDz?.dropzone?.currentUser?.rigInspections || []).filter(\n                        (ins) => ins.id !== rigInspection?.id\n                      ),\n                      rigInspection,\n                    ],\n                  },\n                },\n              },\n            });\n          }\n\n          const newData = {\n            dropzoneUser: {\n              rigInspections: [\n                ...(result?.dropzoneUser?.rigInspections || []).filter(\n                  (ins) => ins.id !== rigInspection?.id\n                ),\n                rigInspection,\n              ],\n            },\n          };\n\n          client.writeQuery({\n            query: DropzoneUserProfileDocument,\n            variables: {\n              dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n              dropzoneUserId: Number(rigInspection?.dropzoneUser?.id),\n            },\n            data: newData,\n          });\n          return {\n            data: newData,\n          };\n        },\n      });\n\n      notify.success('Rig inspection saved');\n      dispatch(actions.forms.rigInspection.reset());\n      navigation.goBack();\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    mutationCreateRigInspection,\n    currentDropzone?.dropzone?.id,\n    rig?.id,\n    state.fields,\n    state.ok,\n    notify,\n    dispatch,\n    navigation,\n  ]);\n\n  return (\n    <Screen fullWidth={false}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'android' ? undefined : 'padding'}\n        style={{\n          width: '100%',\n          flexGrow: 1,\n          backgroundColor: 'transparent',\n        }}\n      >\n        {rig && <RigCard {...{ rig }} />}\n\n        <Card style={{ width: '100%' }}>\n          <Card.Title title={rigInspectionQuery?.dropzone?.rigInspectionTemplate?.name} />\n\n          <Card.Content>\n            {canInspect ? null : (\n              <Paragraph>\n                You need Rig Inspector permissions to update this form, but you can still view it.\n              </Paragraph>\n            )}\n            <View style={{ flex: 1, flexGrow: 1, opacity: canInspect ? 1.0 : 0.6 }}>\n              <RigInspectionForm />\n            </View>\n\n            <Divider />\n            <Checkbox.Item\n              mode=\"android\"\n              label=\"This rig is OK to jump\"\n              onPress={() => dispatch(actions.forms.rigInspection.setOk(!state.ok))}\n              status={state.ok ? 'checked' : 'unchecked'}\n            />\n          </Card.Content>\n\n          <Card.Actions>\n            <Button\n              disabled={\n                !canInspect ||\n                JSON.stringify(state.fields) ===\n                  rigInspectionQuery?.dropzone?.rigInspectionTemplate?.definition\n              }\n              mode=\"contained\"\n              onPress={() => createRigInspection()}\n              loading={mutation.loading}\n              style={{ width: '100%' }}\n            >\n              Mark as inspected\n            </Button>\n          </Card.Actions>\n        </Card>\n      </KeyboardAvoidingView>\n    </Screen>\n  );\n}\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Chip } from 'react-native-paper';\nimport { useAppSelector } from '../state';\nimport { Permission } from '../api/schema.d';\n\nexport interface IBadgeProps {\n  disabled?: boolean;\n  selected?: boolean;\n  onPress?(): void;\n  type:\n    | Permission.ActAsDzso\n    | Permission.ActAsGca\n    | Permission.ActAsLoadMaster\n    | Permission.ActAsPilot\n    | Permission.ActAsRigInspector;\n}\n\nfunction Badge(props: IBadgeProps) {\n  const { type, selected, disabled, onPress } = props;\n  const { palette } = useAppSelector((root) => root.global);\n  const iconName = {\n    [Permission.ActAsDzso]: 'shield-cross',\n    [Permission.ActAsGca]: 'radio-handheld',\n    [Permission.ActAsLoadMaster]: 'shield-account',\n    [Permission.ActAsPilot]: 'account-tie-hat',\n    [Permission.ActAsRigInspector]: 'shield-search',\n  }[type];\n\n  const label = {\n    [Permission.ActAsDzso]: 'DZSO',\n    [Permission.ActAsGca]: 'GCA',\n    [Permission.ActAsLoadMaster]: 'Load Master',\n    [Permission.ActAsPilot]: 'Pilot',\n    [Permission.ActAsRigInspector]: 'Rig Inspector',\n  }[type];\n\n  return (\n    <Chip\n      mode={selected ? 'outlined' : 'flat'}\n      style={[\n        styles.chip,\n        { borderColor: palette.primary.dark },\n        selected ? undefined : { opacity: 0.5 },\n      ].filter(Boolean)}\n      disabled={disabled}\n      onPress={() => onPress?.()}\n    >\n      <View style={styles.innerChip}>\n        <View style={{ marginRight: 8 }}>\n          <MaterialCommunityIcons\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            name={selected ? 'check' : iconName}\n            color={palette.primary.dark}\n            size={18}\n          />\n        </View>\n        <Text style={{ color: palette.primary.dark }}>{label}</Text>\n      </View>\n    </Chip>\n  );\n}\n\nconst styles = StyleSheet.create({\n  chip: {\n    height: 24,\n    marginLeft: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    borderColor: 'white',\n    width: 'auto',\n  },\n  innerChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 30,\n  },\n});\nexport default Badge;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\n\nimport { Permission } from 'app/api/schema.d';\n// eslint-disable-next-line max-len\nimport Badge, { IBadgeProps } from 'app/components/Badge';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useUserProfile } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IPermissionBadgesProps {\n  permissions: Permission[];\n  dropzoneUser: DropzoneUserEssentialsFragment;\n}\nexport default function PermissionBadges(props: IPermissionBadgesProps) {\n  const { permissions, dropzoneUser } = props;\n  const { revokePermission, grantPermission } = useUserProfile();\n  const notify = useNotifications();\n\n  const canGrantPermission = useRestriction(Permission.GrantPermission);\n\n  const badges = React.useMemo(\n    () => permissions?.filter((name) => /^actAs/.test(name)) || [],\n    [permissions]\n  );\n\n  const shouldShowBadge = React.useCallback(\n    (permission: Permission) => canGrantPermission || badges.includes(permission),\n    [badges, canGrantPermission]\n  );\n\n  const grant = React.useCallback(\n    async function GrantPermission(permissionName: Permission) {\n      const response = await grantPermission(dropzoneUser.id, permissionName);\n      if ('error' in response && response.error) {\n        notify.error(response.error);\n      }\n    },\n    [dropzoneUser?.id, grantPermission, notify]\n  );\n\n  const revoke = React.useCallback(\n    async function GrantPermission(permissionName: Permission) {\n      const response = await revokePermission(dropzoneUser.id, permissionName);\n      if ('error' in response && response.error) {\n        notify.error(response.error);\n      }\n    },\n    [notify, dropzoneUser?.id, revokePermission]\n  );\n  return (\n    <ScrollView\n      horizontal\n      style={{ width: '100%' }}\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={styles.content}\n    >\n      {[\n        Permission.ActAsPilot,\n        Permission.ActAsDzso,\n        Permission.ActAsGca,\n        Permission.ActAsRigInspector,\n        Permission.ActAsLoadMaster,\n      ].map((permission) =>\n        !shouldShowBadge(permission) ? null : (\n          <Badge\n            type={permission as IBadgeProps['type']}\n            selected={badges.includes(permission)}\n            onPress={() =>\n              // eslint-disable-next-line no-nested-ternary\n              !canGrantPermission\n                ? null\n                : badges.includes(permission)\n                ? revoke(permission)\n                : grant(permission)\n            }\n          />\n        )\n      )}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingVertical: 12,\n    justifyContent: 'space-evenly',\n  },\n});\n","import * as React from 'react';\nimport { HelperText, List } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport RoleSelect from '../../input/dropdown_select/RoleSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\nexport default function DropzoneUserForm() {\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const dispatch = useAppDispatch();\n  const canUpdateRole = useRestriction(Permission.GrantPermission);\n\n  return (\n    <>\n      <RoleSelect\n        value={state.fields.role.value}\n        onChange={(newRole) => dispatch(actions.forms.dropzoneUser.setField(['role', newRole]))}\n        disabled={!canUpdateRole}\n      />\n      <HelperText type={state.fields.role.error ? 'error' : 'info'}>\n        {state.fields.role.error}\n      </HelperText>\n\n      <List.Subheader style={{ paddingLeft: 0 }}>Financial</List.Subheader>\n      <DatePicker\n        value={state.fields.expiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.dropzoneUser.setField(['expiresAt', time]))}\n        label=\"Membership expires\"\n      />\n      <HelperText type={state.fields.expiresAt.error ? 'error' : 'info'}>\n        {state.fields.expiresAt.error}\n      </HelperText>\n    </>\n  );\n}\n","import { useApolloClient } from '@apollo/client';\nimport PermissionBadges from 'app/screens/authenticated/user/profile/UserInfo/PermissionBadges';\nimport * as React from 'react';\nimport { Button, Dialog, List, ProgressBar } from 'react-native-paper';\nimport { DropzoneUser, Permission } from 'app/api/schema.d';\nimport { DropzoneUserEssentialsFragment, DropzoneUserProfileFragment } from 'app/api/operations';\nimport { DropzoneUserProfileFragmentDoc, useUpdateDropzoneUserMutation } from 'app/api/reflection';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useNotifications } from 'app/providers/notifications';\nimport DropzoneUserForm from '../forms/dropzone_user/DropzoneUserForm';\n\ninterface IDropzoneUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(user: DropzoneUserEssentialsFragment): void;\n}\n\nexport default function DropzoneUserDialog(props: IDropzoneUserDialog) {\n  const { open, onClose, onSuccess } = props;\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.dropzoneUser);\n  const globalState = useAppSelector((root) => root.global);\n  const client = useApolloClient();\n  const getCachedUser = React.useCallback(\n    () =>\n      !state.original\n        ? null\n        : client.readFragment<DropzoneUserProfileFragment>({\n            fragment: DropzoneUserProfileFragmentDoc,\n            fragmentName: 'dropzoneUserProfile',\n            id: client.cache.identify(state.original),\n          }),\n    [client, state.original]\n  );\n  const [mutationUpdateDropzoneUser, createData] = useUpdateDropzoneUserMutation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n\n    if (!state.fields.role.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['role', 'User must have an access level'])\n      );\n    }\n\n    if (!state.fields.expiresAt.value) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.dropzoneUser.setFieldError(['expiresAt', 'Membership expiry must be set'])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.expiresAt.value, state.fields.role.value]);\n\n  const onSave = React.useCallback(async () => {\n    if (!validate()) {\n      return;\n    }\n    try {\n      const response = await mutationUpdateDropzoneUser({\n        variables: {\n          dropzoneUserId: state.original?.id as string,\n          attributes: {\n            userRoleId: Number(state.fields.role.value?.id),\n            expiresAt: state.fields.expiresAt.value,\n          },\n        },\n      });\n      const result = response.data?.updateDropzoneUser;\n\n      result?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'user_role':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['role', message]));\n          case 'expires_at':\n            return dispatch(actions.forms.dropzoneUser.setFieldError(['expiresAt', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.errors?.length) {\n        notify.error(result?.errors[0]);\n        return;\n      }\n      if (!result?.fieldErrors?.length && result?.dropzoneUser) {\n        onSuccess(result.dropzoneUser);\n      } else {\n        console.error(result?.fieldErrors);\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    dispatch,\n    mutationUpdateDropzoneUser,\n    notify,\n    onSuccess,\n    state.fields.expiresAt.value,\n    state.fields.role.value?.id,\n    state.original?.id,\n    validate,\n  ]);\n\n  return (\n    <Dialog visible={!!open}>\n      <ProgressBar\n        indeterminate\n        visible={createData.loading}\n        color={globalState.theme.colors.primary}\n      />\n      <Dialog.Title>{`${state?.original?.id ? 'Edit' : 'New'} dropzone user`}</Dialog.Title>\n      <Dialog.Content>\n        <DropzoneUserForm />\n        {state.original && getCachedUser() ? (\n          <>\n            <List.Subheader style={{ paddingLeft: 0 }}>Acting permissions</List.Subheader>\n            <PermissionBadges\n              dropzoneUser={getCachedUser() as DropzoneUser}\n              permissions={\n                (getCachedUser() as DropzoneUser).permissions?.filter((name) =>\n                  /^actAs/.test(name)\n                ) as Permission[]\n              }\n            />\n          </>\n        ) : null}\n      </Dialog.Content>\n      <Dialog.Actions style={{ justifyContent: 'flex-end' }}>\n        <Button\n          onPress={() => {\n            dispatch(actions.forms.dropzoneUser.reset());\n            onClose();\n          }}\n        >\n          Cancel\n        </Button>\n\n        <Button onPress={onSave}>Save</Button>\n      </Dialog.Actions>\n    </Dialog>\n  );\n}\n","import gql from 'graphql-tag';\nimport { createMutation, isNumeric, isRequired } from '../createMutation';\nimport { CreateRigPayload, RigInput } from '../schema.d';\n\nconst MUTATION_CREATE_RIG = gql`\n  mutation CreateRig(\n    $make: String\n    $name: String\n    $model: String\n    $serial: String\n    $rigType: String\n    $canopySize: Int\n    $repackExpiresAt: Int\n    $userId: Int\n    $dropzoneId: Int\n  ) {\n    createRig(\n      input: {\n        attributes: {\n          name: $name\n          make: $make\n          model: $model\n          serial: $serial\n          repackExpiresAt: $repackExpiresAt\n          dropzoneId: $dropzoneId\n          userId: $userId\n          canopySize: $canopySize\n          rigType: $rigType\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      rig {\n        id\n        name\n        make\n        model\n        serial\n        canopySize\n        repackExpiresAt\n        packValue\n        maintainedAt\n        rigType\n\n        owner {\n          id\n          rigs {\n            id\n            name\n            make\n            model\n            serial\n            canopySize\n            repackExpiresAt\n            packValue\n            maintainedAt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default createMutation<RigInput, CreateRigPayload>(MUTATION_CREATE_RIG, {\n  getPayload: (result) => result.createRig,\n  fieldErrorMap: {},\n  validates: {\n    make: [isRequired('is required')],\n    model: [isRequired('is required')],\n    serial: [isRequired('number is required')],\n    canopySize: [\n      isRequired('Canopy size is required'),\n      isNumeric('Canopy size must be a valid number'),\n    ],\n    repackExpiresAt: [isRequired('You must set a reserve repack expiry date')],\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText } from 'react-native-paper';\n\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport DatePicker from '../../input/date_picker/DatePicker';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { Permission } from '../../../api/schema.d';\n\ninterface IRigForm {\n  showTypeSelect?: boolean;\n}\nexport default function RigForm(props: IRigForm) {\n  const { showTypeSelect } = props;\n  const state = useAppSelector((root) => root.forms.rig);\n  const dispatch = useAppDispatch();\n\n  const canCreateRigs = useRestriction(Permission.CreateRig);\n\n  return (\n    <View>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name.value || ''}\n        helperText=\"You can give your equipment a nickname\"\n        onChange={(newValue) => dispatch(actions.forms.rig.setField(['name', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Make\"\n        helperText=\"e.g Javelin, Mirage\"\n        error={state.fields.make.error}\n        value={state.fields.make.value || ''}\n        onChange={(newValue) => dispatch(actions.forms.rig.setField(['make', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Model\"\n        error={state.fields.model.error}\n        value={state.fields.model.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['model', newValue]))}\n      />\n      <HelperText type={state.fields.model.error ? 'error' : 'info'}>\n        {state.fields.model.error || 'e.g G4.1'}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Serial\"\n        error={state.fields.serial.error}\n        value={state.fields.serial.value || ''}\n        onChangeText={(newValue) => dispatch(actions.forms.rig.setField(['serial', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Current canopy size\"\n        error={state.fields.canopySize.error}\n        value={state.fields.canopySize.value?.toString() || ''}\n        keyboardType=\"number-pad\"\n        helperText=\"Size of canopy in container\"\n        onChangeText={(newValue) =>\n          dispatch(actions.forms.rig.setField(['canopySize', Number(newValue)]))\n        }\n      />\n\n      {!showTypeSelect ? null : (\n        <ChipSelect<string>\n          items={['student', 'sport', 'tandem']}\n          renderItemLabel={(item) => item}\n          isDisabled={(item) => (!canCreateRigs ? item !== 'sport' : false)}\n          value={[state.fields.rigType?.value || 'sport']}\n          onChange={([rigType]) => dispatch(actions.forms.rig.setField(['rigType', rigType]))}\n        />\n      )}\n      <DatePicker\n        value={state.fields.repackExpiresAt.value || new Date().getTime() / 1000}\n        onChange={(time) => dispatch(actions.forms.rig.setField(['repackExpiresAt', time]))}\n        label=\"Reserve repack expiry date\"\n      />\n      <HelperText type={state.fields.repackExpiresAt.error ? 'error' : 'info'}>\n        {state.fields.repackExpiresAt.error || ''}\n      </HelperText>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import { useNotifications } from 'app/providers/notifications';\nimport * as React from 'react';\nimport useMutationCreateRig from '../../api/hooks/useMutationCreateRig';\nimport useMutationUpdateRig from '../../api/hooks/useMutationUpdateRig';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport RigForm from '../forms/rig/RigForm';\nimport { RigFields } from '../forms/rig/slice';\nimport DialogOrSheet from '../layout/DialogOrSheet';\n\ninterface IRigDialog {\n  open?: boolean;\n  dropzoneId?: number;\n  userId?: number;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nexport default function RigDialog(props: IRigDialog) {\n  const { open, dropzoneId, onClose, onSuccess, userId } = props;\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.rig);\n  const notify = useNotifications();\n\n  const updateRig = useMutationUpdateRig({\n    onSuccess: (payload) =>\n      requestAnimationFrame(() => {\n        console.log(payload);\n        onSuccess();\n      }),\n\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) => notify.error(message),\n  });\n  const createRig = useMutationCreateRig({\n    onSuccess: (payload) => requestAnimationFrame(() => onSuccess()),\n    onFieldError: (field, message) =>\n      dispatch(actions.forms.rig.setFieldError([field as keyof RigFields, message])),\n    onError: (message) => notify.error(message),\n  });\n\n  const isLoading = updateRig.loading || createRig.loading;\n\n  const onSave = React.useCallback(async () => {\n    if (state.original?.id) {\n      const params = {\n        id: Number(state.original?.id),\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      };\n      console.log(params);\n      const d = await updateRig.mutate(params);\n      console.log(d);\n    } else {\n      const x = await createRig.mutate({\n        name: state.fields.name.value,\n        make: state.fields.make.value,\n        model: state.fields.model.value,\n        serial: state.fields.serial.value,\n        canopySize: state.fields.canopySize.value,\n        rigType: state.fields.rigType.value,\n        repackExpiresAt: state.fields.repackExpiresAt.value,\n        userId: userId ? Number(userId) : null,\n        dropzoneId: dropzoneId ? Number(dropzoneId) : null,\n      });\n      console.log(x);\n    }\n  }, [\n    createRig,\n    dropzoneId,\n    state.fields.canopySize.value,\n    state.fields.make.value,\n    state.fields.model.value,\n    state.fields.repackExpiresAt.value,\n    state.fields.rigType.value,\n    state.fields.name.value,\n    state.fields.serial.value,\n    state.original?.id,\n    updateRig,\n    userId,\n  ]);\n\n  const snapPoints = React.useMemo(() => [580], []);\n  const onDialogClose = React.useCallback(() => {\n    requestAnimationFrame(() => {\n      onClose();\n      dispatch(actions.forms.rig.reset());\n    });\n  }, [dispatch, onClose]);\n\n  return (\n    <DialogOrSheet\n      title={state.original?.id ? 'Edit rig' : 'New rig'}\n      open={open}\n      snapPoints={snapPoints}\n      onClose={onDialogClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n      loading={isLoading}\n    >\n      <RigForm showTypeSelect={!!dropzoneId} />\n    </DialogOrSheet>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport TextInput from 'app/components/input/text/TextField';\nimport { HelperText, Divider } from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport NumberField from '../../input/number_input/NumberField';\nimport LicenseChipSelect from '../../input/chip_select/LicenseChipSelect';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\n\nexport default function SlotForm() {\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n\n  React.useEffect(() => {\n    if (state.original) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.forms.user.setField(['exitWeight', state.original.user?.exitWeight || '60'])\n        );\n      }\n\n      if (!state.fields.rigs.value && state.original?.id) {\n        dispatch(actions.forms.user.setField(['rigs', state.original.user?.rigs]));\n      }\n    }\n  }, [\n    dispatch,\n    state.fields.exitWeight.value,\n    state.fields.rigs.value,\n    state.original,\n    state.original?.id,\n  ]);\n\n  return (\n    <>\n      <TextInput\n        style={styles.field}\n        label=\"Name\"\n        error={state.fields.name.error}\n        value={state.fields.name?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['name', newValue]))}\n      />\n\n      <HelperText type={state.fields.name.error ? 'error' : 'info'}>\n        {state.fields.name.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Nickname\"\n        error={state.fields.nickname.error}\n        value={state.fields.nickname?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['nickname', newValue]))}\n      />\n\n      <HelperText type={state.fields.nickname.error ? 'error' : 'info'}>\n        {state.fields.nickname.error || ' '}\n      </HelperText>\n\n      <TextInput\n        style={styles.field}\n        label=\"Email\"\n        error={state.fields.email.error}\n        value={state.fields.email?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['email', newValue]))}\n      />\n\n      <TextInput\n        style={styles.field}\n        label=\"Phone\"\n        error={state.fields.phone.error}\n        value={state.fields.phone?.value?.toString() || ''}\n        onChange={(newValue) => dispatch(actions.forms.user.setField(['phone', newValue]))}\n      />\n\n      <NumberField\n        value={!state.fields.exitWeight.value ? 0 : Number(state.fields.exitWeight.value)}\n        error={state.fields.exitWeight.error}\n        onChange={(num) => dispatch(actions.forms.user.setField(['exitWeight', num.toString()]))}\n        label=\"Exit weight (kg)\"\n      />\n\n      <Divider />\n\n      <View style={{ width: '100%' }}>\n        <FederationSelect\n          value={state?.fields?.license?.value?.federation || state.federation.value}\n          onChange={(value) => dispatch(actions.forms.user.setFederation(value))}\n        />\n\n        <HelperText type={state.federation.error ? 'error' : 'info'}>\n          {state.federation.error || ''}\n        </HelperText>\n\n        {(state?.fields?.license?.value?.federation?.id || state?.federation?.value?.id) && (\n          <>\n            <LicenseChipSelect\n              value={state.fields.license.value}\n              federationId={Number(\n                state?.fields?.license?.value?.federation?.id || state.federation?.value?.id\n              )}\n              onChange={(value) => dispatch(actions.forms.user.setField(['license', value]))}\n            />\n            <HelperText type={state.fields.license.error ? 'error' : 'info'}>\n              {state.fields.license.error || ''}\n            </HelperText>\n          </>\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    width: '100%',\n    paddingTop: 32,\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { useJoinFederationMutation, DropzoneUserProfileDocument } from 'app/api/reflection';\nimport { useNotifications } from 'app/providers/notifications';\nimport UserForm from '../forms/user/UserForm';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport DialogOrSheet from '../layout/DialogOrSheet';\nimport useMutationUpdateUser from '../../api/hooks/useMutationUpdateUser';\nimport { UserFields } from '../forms/user/slice';\n\ninterface IUpdateUserDialog {\n  open?: boolean;\n  dropzoneUserId?: string;\n  onClose(): void;\n  onSuccess(): void;\n}\nexport default function UpdateUserDialog(props: IUpdateUserDialog) {\n  const { open, onSuccess, onClose, dropzoneUserId } = props;\n  const state = useAppSelector((root) => root.forms.user);\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const [joinFederation] = useJoinFederationMutation();\n\n  const mutationUpdateUser = useMutationUpdateUser({\n    onSuccess: (payload) => {\n      notify.success(`Profile has been updated`);\n      dispatch(actions.forms.user.setOpen(false));\n      onSuccess();\n    },\n    onFieldError: (field, value) =>\n      dispatch(actions.forms.user.setFieldError([field as keyof UserFields, value])),\n    onError: (error) => notify.error(error),\n    mutation: {\n      refetchQueries: [\n        {\n          query: DropzoneUserProfileDocument,\n          variables: {\n            dropzoneUserId,\n          },\n        },\n      ],\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    await mutationUpdateUser.mutate({\n      dropzoneUser: state.original?.id,\n      name: state.fields.name.value,\n      license: !state.fields.license.value?.id ? null : Number(state.fields.license.value?.id),\n      phone: state.fields.phone.value,\n      exitWeight: parseFloat(state.fields.exitWeight?.value || '50'),\n      email: state.fields.email.value,\n    });\n\n    // TODO: Set APF number from userFederation belonging to currentDropzone.federation\n    // and compare against that\n    const selectedLicenseFederation = state.original?.user?.userFederations?.find(\n      ({ federation }) => federation.slug === state.fields.license.value?.federation?.slug\n    );\n    if (\n      (state.fields.license.value?.id &&\n        selectedLicenseFederation?.license?.id !== state.fields.license.value?.id) ||\n      (state.fields.apfNumber?.value &&\n        state.fields.apfNumber?.value !== selectedLicenseFederation?.uid)\n    ) {\n      await joinFederation({\n        variables: {\n          federation: state.fields.license.value?.federation?.id?.toString() as string,\n          uid: state.fields?.apfNumber?.value,\n          license: state.fields.license.value?.id,\n        },\n      });\n    }\n  }, [\n    joinFederation,\n    mutationUpdateUser,\n    state.fields.apfNumber?.value,\n    state.fields.email.value,\n    state.fields.exitWeight?.value,\n    state.fields.license.value?.federation?.id,\n    state.fields.license.value?.federation?.slug,\n    state.fields.license.value?.id,\n    state.fields.name.value,\n    state.fields.phone.value,\n    state.original?.id,\n    state.original?.user?.userFederations,\n  ]);\n\n  const snapPoints = React.useMemo(() => [740], []);\n\n  return (\n    <DialogOrSheet\n      title=\"Update information\"\n      open={open}\n      snapPoints={snapPoints}\n      loading={mutationUpdateUser.loading}\n      onClose={onClose}\n      buttonAction={onSave}\n      buttonLabel=\"Save\"\n    >\n      <UserForm />\n    </DialogOrSheet>\n  );\n}\n","import { useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { actions, useAppDispatch } from 'app/state';\n\nexport default function useProfileWizard() {\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n\n  return React.useCallback(\n    (index?: number) => {\n      if (currentUser) {\n        dispatch(actions.forms.user.setOriginal(currentUser));\n        if (currentUser?.user?.rigs?.length) {\n          dispatch(actions.forms.rig.setOriginal(currentUser.user.rigs[0]));\n        }\n\n        navigation.navigate('Wizards', {\n          screen: 'UserWizardScreen',\n          params: {\n            index,\n          },\n        });\n      }\n    },\n    [currentUser, dispatch, navigation]\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Caption, Divider, Paragraph, Title, TouchableRipple } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport color from 'color';\nimport { openURL } from 'expo-linking';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport startCase from 'lodash/startCase';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\nimport UserAvatar from 'app/components/UserAvatar';\n\ninterface IUserHeader {\n  dropzoneUser?: DropzoneUserProfileFragment;\n  children?: React.ReactNode;\n  variant?: 'dark' | 'light';\n  onPressAvatar?(): void;\n}\n\nconst badgesInitials = {\n  [Permission.ActAsLoadMaster]: 'LM',\n  [Permission.ActAsPilot]: 'Pilot',\n  [Permission.ActAsRigInspector]: 'Rig.Insp',\n  [Permission.ActAsGca]: 'GCA',\n  [Permission.ActAsDzso]: 'DZSO',\n};\nexport default function UserHeader(props: IUserHeader) {\n  const { dropzoneUser, variant, children, onPressAvatar } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const [isContactOpen, setContactOpen] = React.useState<boolean>(false);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  const dispatch = useAppDispatch();\n\n  const textColor = variant === 'light' ? theme.colors.surface : theme.colors.onSurface;\n  const primaryDark = color(theme.colors.primary).darken(0.3).hex();\n\n  const actingPermissions = (\n    dropzoneUser?.permissions?.filter((name) => /^actAs/.test(name)) || []\n  ).map((str) => badgesInitials[str as keyof typeof badgesInitials]);\n\n  console.log('image', dropzoneUser?.user?.image);\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.surface }]}>\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3, alignItems: 'center', justifyContent: 'center' }}>\n          <TouchableRipple onPress={onPressAvatar}>\n            <UserAvatar\n              image={dropzoneUser?.user?.image}\n              name={dropzoneUser?.user?.name}\n              size={80}\n            />\n          </TouchableRipple>\n        </View>\n        <View style={styles.titleContainer}>\n          <Menu\n            setOpen={setContactOpen}\n            open={isContactOpen}\n            anchor={\n              <TouchableRipple onPress={() => setContactOpen(true)}>\n                <Title style={[styles.title, { color: primaryDark, fontSize: 26 }]}>\n                  {dropzoneUser?.user?.name}\n                </Title>\n              </TouchableRipple>\n            }\n          >\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                // TODO: Send email\n                if (dropzoneUser?.user.email) {\n                  openURL(`mail:${dropzoneUser?.user.email}`);\n                }\n              }}\n              icon=\"email\"\n              title={dropzoneUser?.user?.email}\n            />\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                if (dropzoneUser?.user.email) {\n                  openURL(`tel:${dropzoneUser?.user.phone}`);\n                }\n              }}\n              icon=\"phone\"\n              title={dropzoneUser?.user?.phone}\n            />\n            <MenuItem\n              onPress={() => {\n                setContactOpen(false);\n                if (canUpdateUser && dropzoneUser) {\n                  dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n                }\n              }}\n              icon=\"card-account-details-star-outline\"\n              title={\n                !dropzoneUser?.expiresAt\n                  ? 'Not a member'\n                  : format((dropzoneUser?.expiresAt || 0) * 1000, 'yyyy/MM/dd')\n              }\n            />\n          </Menu>\n          <Divider style={{ width: '100%' }} />\n          <Paragraph\n            style={[\n              styles.paragraph,\n              { fontWeight: 'bold', fontSize: 14, paddingLeft: 4, color: textColor },\n            ]}\n          >\n            {dropzoneUser?.role?.name?.replace('_', ' ').toUpperCase()}\n            {actingPermissions.length ? (\n              <Caption style={{ marginTop: 4 }}>\n                {` ${actingPermissions.map(startCase).join(', ')}`}\n              </Caption>\n            ) : null}\n          </Paragraph>\n        </View>\n      </View>\n\n      {children}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    position: 'absolute',\n    top: 0,\n    right: 8,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 32,\n    paddingTop: 16,\n    marginBottom: 16,\n  },\n  titleContainer: {\n    paddingLeft: 32,\n    paddingTop: 16,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n  },\n  paragraph: {\n    color: 'white',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport { Divider, List, useTheme } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n  style?: ViewProps['style'];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items, style } = props;\n  const flex = 1 / items.length;\n  const theme = useTheme();\n\n  return (\n    <>\n      <Divider style={[styles.divider]} />\n      <View style={StyleSheet.flatten([styles.container, style])}>\n        {items.map((item, i) => (\n          <>\n            {/* eslint-disable-next-line react/no-array-index-key */}\n            <View style={{ flex }} key={`info-grid-${i}`}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    alignSelf: 'center',\n                    justifyContent: 'center',\n                    color: theme.colors.text,\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingTop: 15,\n                }}\n                title={item.value}\n                descriptionStyle={[styles.description, { color: theme.colors.text }]}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              /* eslint-disable-next-line react/no-array-index-key */\n              <Divider key={`info-grid-divider-${i}`} style={[styles.verticalDivider]} />\n            )}\n          </>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n  },\n  description: {\n    textAlign: 'center',\n    color: 'white',\n  },\n});\n","import * as React from 'react';\n\nimport { FAB, useTheme } from 'react-native-paper';\nimport { actions, useAppDispatch } from 'app/state';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useNavigation } from '@react-navigation/core';\nimport { Permission } from 'app/api/schema.d';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Alert } from 'react-native';\nimport { DropzoneUsersDocument, useArchiveUserMutation } from 'app/api/reflection';\nimport { errorColor, infoColor, successColor, warningColor } from 'app/constants/Colors';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUserNavigation } from '../useUserNavigation';\n\ntype PropsOf<T> = T extends React.ComponentType<infer P> ? P : never;\ntype FABActions = PropsOf<typeof FAB.Group>['actions'];\ninterface IUserActionsButtonProps {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  visible?: boolean;\n}\nexport default function UserActionsButton(props: IUserActionsButtonProps) {\n  const { dropzoneUser, visible } = props;\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const [fabOpen, setFabOpen] = React.useState(false);\n  const { dialogs } = useManifestContext();\n  const notify = useNotifications();\n\n  const dispatch = useAppDispatch();\n  const navigation = useUserNavigation();\n  const rootNavigator = useNavigation();\n  const theme = useTheme();\n\n  const onClickSetupWizard = React.useCallback(() => {\n    if (dropzoneUser) {\n      dispatch(actions.forms.user.setOriginal(dropzoneUser));\n      if (dropzoneUser?.user?.rigs?.length) {\n        dispatch(actions.forms.rig.setOriginal(dropzoneUser.user.rigs[0]));\n      }\n      rootNavigator.navigate('Wizards', {\n        screen: 'UserWizardScreen',\n        params: { index: undefined },\n      });\n    }\n  }, [dispatch, dropzoneUser, rootNavigator]);\n\n  const onClickAccessAndMembership = React.useCallback(() => {\n    if (!dropzoneUser) {\n      return;\n    }\n    dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n  }, [dispatch, dropzoneUser]);\n\n  const onClickTransactions = React.useCallback(() => {\n    if (!dropzoneUser?.id) {\n      return;\n    }\n    navigation.navigate('OrdersScreen', { userId: dropzoneUser?.id });\n  }, [dropzoneUser?.id, navigation]);\n\n  const onClickEquipment = React.useCallback(() => {\n    if (!dropzoneUser?.id) {\n      return;\n    }\n    navigation.navigate('EquipmentScreen', { userId: dropzoneUser?.id });\n  }, [dropzoneUser?.id, navigation]);\n\n  const onClickAddFunds = React.useCallback(() => {\n    if (dropzoneUser) {\n      dialogs.credits.open({ dropzoneUser });\n    }\n  }, [dialogs.credits, dropzoneUser]);\n\n  const onClickEdit = React.useCallback(() => {\n    if (dropzoneUser?.user) {\n      dispatch(actions.forms.user.setOpen(dropzoneUser));\n    }\n  }, [dispatch, dropzoneUser]);\n\n  const isSelf = React.useMemo(\n    () => currentUser?.id === dropzoneUser?.id,\n    [currentUser?.id, dropzoneUser?.id]\n  );\n  const canAddTransaction = useRestriction(Permission.CreateUserTransaction);\n  const canViewOthersTransactions = useRestriction(Permission.ReadUserTransactions);\n  const canUpdateUsers = useRestriction(Permission.UpdateUser);\n  const canDeleteUsers = useRestriction(Permission.DeleteUser);\n\n  const [deleteUser] = useArchiveUserMutation();\n\n  const onDeleteUser = React.useCallback(() => {\n    Alert.alert(\n      isSelf ? 'Delete My Account' : `Delete ${dropzoneUser?.user?.name}`,\n      isSelf\n        ? 'Are you sure you want to delete your account? You will be logged out'\n        : 'Are you sure you want to delete this user ? ',\n      [\n        { style: 'cancel', text: 'Cancel', onPress: () => null },\n        {\n          style: 'destructive',\n          text: 'Yes, delete',\n          onPress: async () => {\n            try {\n              const { data } = await deleteUser({\n                variables: {\n                  id: Number(dropzoneUser?.id),\n                },\n                refetchQueries: [DropzoneUsersDocument],\n              });\n\n              data?.deleteUser?.errors?.forEach((message) => {\n                notify.success(message);\n              });\n              if (data?.deleteUser?.dropzoneUser?.id) {\n                notify.success(`${dropzoneUser?.user?.name} has been removed`);\n              }\n\n              navigation.goBack();\n            } catch (e) {\n              console.log(e);\n            }\n          },\n        },\n      ]\n    );\n  }, [deleteUser, dropzoneUser?.id, dropzoneUser?.user?.name, isSelf, navigation, notify]);\n\n  const fabActions = React.useMemo(\n    () =>\n      [\n        isSelf && canUpdateUsers\n          ? {\n              icon: 'pencil',\n              label: 'Edit',\n              onPress: onClickEdit,\n            }\n          : null,\n        {\n          icon: 'account-convert',\n          label: 'Setup Wizard',\n          color: infoColor,\n          onPress: onClickSetupWizard,\n        },\n        canUpdateUsers\n          ? {\n              icon: 'lock',\n              label: 'Access & Membership',\n              color: warningColor,\n              onPress: onClickAccessAndMembership,\n            }\n          : null,\n        canAddTransaction\n          ? {\n              icon: 'cash-plus',\n              label: 'Add Funds',\n              color: successColor,\n              onPress: onClickAddFunds,\n            }\n          : null,\n        isSelf || canViewOthersTransactions\n          ? {\n              icon: 'account-cash',\n              label: 'Manage Transactions',\n              onPress: onClickTransactions,\n            }\n          : null,\n        {\n          icon: 'parachute',\n          label: 'Manage Equipment',\n          onPress: onClickEquipment,\n        },\n        canDeleteUsers\n          ? {\n              icon: 'account-off',\n              label: 'Delete user',\n              onPress: onDeleteUser,\n              color: errorColor,\n            }\n          : null,\n      ].filter(Boolean) as FABActions,\n    [\n      canAddTransaction,\n      canDeleteUsers,\n      canUpdateUsers,\n      canViewOthersTransactions,\n      isSelf,\n      onClickAccessAndMembership,\n      onClickAddFunds,\n      onClickEdit,\n      onClickEquipment,\n      onClickSetupWizard,\n      onClickTransactions,\n      onDeleteUser,\n    ]\n  );\n\n  return (\n    <FAB.Group\n      testID=\"user-profile-fab\"\n      open={fabOpen}\n      visible={(!!dropzoneUser?.id && visible) || false}\n      icon={fabOpen ? 'close' : 'account-edit'}\n      fabStyle={{\n        marginLeft: 16,\n        marginBottom: 16,\n        backgroundColor: theme.colors.primary,\n      }}\n      onStateChange={({ open }) => setFabOpen(open)}\n      actions={fabActions}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Avatar, Card, List, useTheme } from 'react-native-paper';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { UserSlotDetailsFragment } from 'app/api/operations';\n\ninterface ISlot {\n  slot: UserSlotDetailsFragment;\n  onPress?(): void;\n}\n\nexport default function SlotCard(props: ISlot) {\n  const { slot, onPress } = props;\n  const theme = useTheme();\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <List.Item\n            description={`on Load #${slot.load.loadNumber}`}\n            title={slot.jumpType?.name}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            right={() => (\n              <View\n                style={{\n                  width: 180,\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                  flexDirection: 'row',\n                }}\n              >\n                <Text\n                  style={[\n                    styles.jumpType,\n                    {\n                      color: theme.colors.onSurface,\n                    },\n                  ]}\n                >\n                  -${slot.cost?.toFixed(2)}\n                </Text>\n              </View>\n            )}\n            left={() => (\n              <View\n                style={{\n                  width: 100,\n                  alignItems: 'center',\n                  flexDirection: 'row',\n                  justifyContent: 'center',\n                }}\n              >\n                <Avatar.Icon\n                  icon=\"parachute-outline\"\n                  size={48}\n                  style={{ alignSelf: 'center', marginHorizontal: 12 }}\n                />\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 6,\n    flexGrow: 1,\n  },\n  jumpType: {\n    fontSize: 16,\n    fontFamily: 'Roboto_400Regular',\n    fontWeight: '400',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n    flexGrow: 1,\n    minWidth: 150,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: { margin: 0, marginBottom: 0, marginVertical: 0, borderRadius: 2, width: '100%' },\n});\n","import { useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { View } from 'react-native-animatable';\nimport { List } from 'react-native-paper';\nimport enAU from 'date-fns/locale/en-AU';\n\nimport { groupBy, map } from 'lodash';\nimport { differenceInDays, format, formatDistance, parseISO, startOfDay } from 'date-fns';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\n\nimport SlotCard from '../SlotCard';\n\nexport interface IJumpHistoryTab {\n  tabIndex: number;\n  currentTabIndex: number;\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n}\nexport default function JumpHistoryTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const navigation = useNavigation();\n\n  const sections = React.useMemo(\n    () =>\n      map(\n        groupBy(dropzoneUser?.slots?.edges, (e) =>\n          startOfDay(parseISO(e?.node?.createdAt)).toISOString()\n        ),\n        (d, t) => {\n          const date = parseISO(t);\n          const title =\n            differenceInDays(new Date(), date) > 7\n              ? format(date, 'dd MMM, yyyy')\n              : formatDistance(date, new Date(), { addSuffix: true, locale: enAU });\n          return {\n            title,\n            data: d,\n          };\n        }\n      ),\n    [dropzoneUser?.slots?.edges]\n  );\n\n  return (\n    <View\n      animation={currentTabIndex > tabIndex ? 'slideInLeft' : 'slideInRight'}\n      easing=\"ease-in-out\"\n      duration={200}\n      style={{ padding: 8 }}\n    >\n      {sections.map(({ title, data }) => (\n        <>\n          <List.Subheader style={{ marginTop: 16, marginBottom: 4 }}>{title}</List.Subheader>\n          {data.map((item) =>\n            !item?.node ? null : (\n              <SlotCard\n                slot={item.node}\n                onPress={() => {\n                  if (item?.node?.load?.id) {\n                    navigation.navigate('Authenticated', {\n                      screen: 'LeftDrawer',\n                      params: {\n                        screen: 'Manifest',\n                        params: {\n                          screen: 'LoadScreen',\n                          params: {\n                            loadId: item.node?.load?.id,\n                          },\n                        },\n                      },\n                    });\n                  }\n                }}\n              />\n            )\n          )}\n        </>\n      ))}\n    </View>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  DropzoneEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n  OrderEssentialsFragment,\n} from 'app/api/operations';\nimport { DropzoneUser } from 'app/api/schema.d';\nimport { successColor } from 'app/constants/Colors';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { DateTime } from 'luxon';\n\ninterface IOrder {\n  order: OrderEssentialsFragment;\n  dropzoneUser?: DropzoneUserEssentialsFragment | null;\n  showAvatar?: boolean;\n  onPress?(): void;\n}\n\nexport default function OrderCard(props: IOrder) {\n  const { order, dropzoneUser, showAvatar, onPress } = props;\n  const theme = useTheme();\n  const isSelfBuyer =\n    order.buyer?.__typename === 'DropzoneUser' &&\n    (order.buyer as DropzoneUser)?.id === dropzoneUser?.id;\n  const icon =\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    isSelfBuyer === dropzoneUser?.id ? 'cash-minus' : 'cash-plus';\n\n  const right = React.useCallback(\n    () => (\n      <Text\n        style={{\n          fontSize: 16,\n          fontFamily: 'Roboto_400Regular',\n          fontWeight: '400',\n          textAlign: 'center',\n          alignSelf: 'center',\n          color: theme.colors.onSurface,\n        }}\n      >\n        {`${isSelfBuyer ? '-$' : '$'}${order.amount.toFixed(2)}`}\n      </Text>\n    ),\n    [isSelfBuyer, order.amount, theme.colors.onSurface]\n  );\n\n  const left = React.useCallback(\n    () => (\n      <View style={{ alignItems: 'center', flexDirection: 'row' }}>\n        {showAvatar ? (\n          <UserAvatar\n            style={{ alignSelf: 'center', marginHorizontal: 12 }}\n            size={60}\n            name={\n              (order?.buyer as DropzoneUserEssentialsFragment)?.user?.name ||\n              (order?.buyer as DropzoneEssentialsFragment).name ||\n              ''\n            }\n            image={\n              (order?.buyer as DropzoneUserEssentialsFragment).user?.image ||\n              (order?.buyer as DropzoneEssentialsFragment).banner ||\n              undefined\n            }\n          />\n        ) : (\n          <MaterialCommunityIcons\n            color={\n              // eslint-disable-next-line no-underscore-dangle\n              '__typename' in order.buyer &&\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              order.buyer.__typename === 'DropzoneUser' &&\n              (order.buyer as DropzoneUserEssentialsFragment)?.id === dropzoneUser?.id\n                ? '#FF1414'\n                : successColor\n            }\n            name={icon}\n            size={36}\n            style={{ marginHorizontal: 16 }}\n          />\n        )}\n      </View>\n    ),\n    [dropzoneUser?.id, icon, order.buyer, showAvatar]\n  );\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.order}>\n        <Caption\n          style={{\n            textAlign: 'right',\n            paddingRight: 4,\n            paddingTop: 2,\n            marginBottom: 0,\n          }}\n        >\n          {DateTime.fromISO(order?.createdAt).toLocaleString(DateTime.DATETIME_SHORT)}\n        </Caption>\n        <Card.Content style={styles.orderContent}>\n          <List.Item\n            title={\n              (order?.buyer as DropzoneUser)?.user?.name ||\n              (order?.buyer as DropzoneEssentialsFragment)?.name\n            }\n            style={{ width: '100%' }}\n            titleStyle={styles.orderTitle}\n            description={order.title || null}\n            descriptionStyle={styles.orderDescription}\n            {...{ right, left }}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  orderTitle: {\n    paddingLeft: 0,\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 6,\n  },\n  orderDescription: {\n    paddingLeft: 0,\n  },\n  orderContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  order: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useAppSelector } from 'app/state';\nimport { View } from 'react-native';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\nimport JumpHistoryTab from './JumpHistory';\nimport FundTab from './Transactions';\nimport EquipmentTab from './Equipment';\n\n// const ProfileTabs = createMaterialTopTabNavigator();\n\ninterface IProfileTabsProps {\n  onChange(tab: ProfileTabs): void;\n}\n\nexport enum ProfileTabs {\n  Funds,\n  Jumps,\n  Equipment,\n}\n\nexport function ProfileTab(props: {\n  active: ProfileTabs;\n  dropzoneUser: DropzoneUserProfileFragment;\n}) {\n  const { active, dropzoneUser } = props;\n  if (active === ProfileTabs.Funds) {\n    return <FundTab {...{ dropzoneUser }} tabIndex={ProfileTabs.Funds} currentTabIndex={active} />;\n  }\n  if (active === ProfileTabs.Equipment) {\n    return (\n      <EquipmentTab\n        {...{ dropzoneUser }}\n        tabIndex={ProfileTabs.Equipment}\n        currentTabIndex={active}\n      />\n    );\n  }\n  if (active === ProfileTabs.Jumps) {\n    return (\n      <JumpHistoryTab {...{ dropzoneUser }} tabIndex={ProfileTabs.Jumps} currentTabIndex={active} />\n    );\n  }\n  return null;\n}\nexport default function TabBar(props: IProfileTabsProps) {\n  const { onChange } = props;\n  const { colors, dark } = useAppSelector((state) => state.global.theme);\n\n  return (\n    <Tabs\n      defaultIndex={ProfileTabs.Jumps}\n      disableSwipe\n      style={{ backgroundColor: colors.surface }}\n      mode=\"fixed\"\n      dark={dark}\n    >\n      <TabScreen label=\"Funds\" icon=\"cash\" key=\"funds\" onPress={() => onChange(0)}>\n        <View />\n      </TabScreen>\n      <TabScreen label=\"Jumps\" icon=\"airplane-takeoff\" key=\"jumps\" onPress={() => onChange(1)}>\n        <View />\n      </TabScreen>\n      <TabScreen label=\"Equipment\" icon=\"parachute\" key=\"equipment\" onPress={() => onChange(2)}>\n        <View />\n      </TabScreen>\n    </Tabs>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native-animatable';\nimport { List } from 'react-native-paper';\n\nimport { DropzoneUserProfileFragment, OrderEssentialsFragment } from 'app/api/operations';\n\nimport { groupBy, map } from 'lodash';\nimport { DateTime, Duration } from 'luxon';\nimport OrderCard from '../../../../../components/orders/OrderCard';\nimport { useUserNavigation } from '../../useUserNavigation';\n\nexport interface IJumpHistoryTab {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  tabIndex: number;\n  currentTabIndex: number;\n}\nexport default function TransactionsTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const navigation = useUserNavigation();\n  const sections = React.useMemo(\n    () =>\n      map(\n        groupBy(dropzoneUser?.orders?.edges, (e) =>\n          DateTime.fromISO(e?.node?.createdAt).startOf('day').toISO()\n        ),\n        (d, t) => {\n          const date = DateTime.fromISO(t);\n          const title =\n            date.diffNow('days') > Duration.fromDurationLike({ days: 7 })\n              ? date.toLocaleString(DateTime.DATE_MED_WITH_WEEKDAY)\n              : date.toRelative({ locale: 'au', round: true, style: 'long' });\n          return {\n            title: date.startOf('day').hasSame(DateTime.local(), 'day') ? 'Today' : title,\n            data: d,\n          };\n        }\n      ),\n    [dropzoneUser?.orders?.edges]\n  );\n  return (\n    <View\n      animation={currentTabIndex > tabIndex ? 'slideInLeft' : 'slideInRight'}\n      easing=\"ease-in-out\"\n      duration={200}\n    >\n      {sections.map(({ title, data }) => (\n        <>\n          <List.Subheader style={{ marginTop: 16, marginBottom: 4 }}>{title}</List.Subheader>\n          {data.map((item) =>\n            !item?.node ? null : (\n              <OrderCard\n                showAvatar\n                onPress={() =>\n                  item?.node?.id &&\n                  dropzoneUser &&\n                  navigation.navigate('OrderReceiptScreen', {\n                    orderId: item?.node?.id,\n                    userId: dropzoneUser?.id,\n                  })\n                }\n                order={item?.node as OrderEssentialsFragment}\n                {...{ dropzoneUser }}\n              />\n            )\n          )}\n        </>\n      ))}\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { View } from 'react-native-animatable';\n\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { actions, useAppDispatch } from 'app/state';\n\nimport RigCard from '../../equipment/RigCard';\n\nexport interface IJumpHistoryTab {\n  dropzoneUser?: DropzoneUserProfileFragment | null;\n  tabIndex: number;\n  currentTabIndex: number;\n}\nexport default function EquipmentTab(props: IJumpHistoryTab) {\n  const { dropzoneUser, tabIndex, currentTabIndex } = props;\n  const dispatch = useAppDispatch();\n  return (\n    <View\n      animation={currentTabIndex < tabIndex ? 'slideInRight' : 'slideInLeft'}\n      duration={200}\n      easing=\"ease-in-out\"\n      style={{ padding: 8 }}\n    >\n      {dropzoneUser?.user?.rigs?.map((item) => (\n        <RigCard\n          {...{ dropzoneUser }}\n          onSuccessfulImageUpload={() => null}\n          rig={item}\n          rigInspection={dropzoneUser?.rigInspections?.find(\n            (insp) => insp.rig?.id === item.id && insp.isOk\n          )}\n          onPress={() => {\n            dispatch(actions.forms.rig.setOpen(item));\n          }}\n        />\n      ))}\n    </View>\n  );\n}\n","import { RouteProp, useIsFocused, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { FlatList, RefreshControl, StyleSheet, View } from 'react-native';\nimport { Chip, Divider, ProgressBar } from 'react-native-paper';\nimport Skeleton from 'app/components/Skeleton';\n\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport DropzoneUserDialog from 'app/components/dialogs/DropzoneUserDialog';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport EditUserSheet from 'app/components/dialogs/User';\n\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport { useUpdateUserMutation } from 'app/api/reflection';\n\nimport { errorColor, successColor } from 'app/constants/Colors';\nimport { format } from 'date-fns';\nimport useProfileWizard from 'app/hooks/navigation/useProfileWizard';\nimport { useUserProfile } from 'app/api/crud';\nimport Header from './UserInfo/Header';\nimport InfoGrid from './UserInfo/InfoGrid';\n\nimport UserActionsButton from './UserActions';\nimport TabBar, { ProfileTab } from './tabs';\n\nexport type ProfileRoute = {\n  ProfileScreen: {\n    userId: string;\n  };\n};\nexport default function ProfileScreen() {\n  const state = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const route = useRoute<RouteProp<ProfileRoute>>();\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: route.params.userId || currentUser?.id,\n  });\n  const pickImage = useImagePicker();\n  const isFocused = useIsFocused();\n  const [defaultIndex, onChangeIndex] = React.useState(1);\n  const onClickAccessAndMembership = React.useCallback(() => {\n    if (!dropzoneUser) {\n      return;\n    }\n    dispatch(actions.forms.dropzoneUser.setOpen(dropzoneUser));\n  }, [dispatch, dropzoneUser]);\n  const headerRight = React.useCallback(\n    () =>\n      !currentUser?.expiresAt ? null : (\n        <Chip\n          onPress={onClickAccessAndMembership}\n          style={{\n            marginRight: 16,\n            height: 24,\n            backgroundColor:\n              currentUser.expiresAt * 1000 < new Date().getTime() ? errorColor : successColor,\n          }}\n          textStyle={{ color: 'white', marginTop: 0 }}\n        >\n          {format(currentUser.expiresAt * 1000, 'dd/MM/yy')}\n        </Chip>\n      ),\n    [currentUser?.expiresAt, onClickAccessAndMembership]\n  );\n\n  React.useEffect(() => navigation.setOptions({ title: 'Profile' }), [navigation]);\n  React.useEffect(() => {\n    if (isFocused) {\n      navigation.setOptions({\n        headerRight,\n      });\n    }\n  }, [headerRight, isFocused, navigation]);\n\n  const [mutationUpdateUser] = useUpdateUserMutation();\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n\n      if (base64) {\n        // Upload image\n        await mutationUpdateUser({\n          variables: {\n            dropzoneUser: dropzoneUser?.id,\n            image: `data:image/jpeg;base64,${base64}`,\n          },\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dropzoneUser?.id, mutationUpdateUser, pickImage]);\n\n  const { dialogs } = useManifestContext();\n\n  const onCloseRigForm = React.useCallback(\n    () => dispatch(actions.forms.rig.setOpen(false)),\n    [dispatch]\n  );\n\n  const onUserSheetClose = React.useCallback(() => {\n    dispatch(actions.forms.user.setOpen(false));\n  }, [dispatch]);\n\n  const openWizard = useProfileWizard();\n\n  const getContent = React.useCallback(\n    ({ index }: { index: number }) => {\n      if (index === 0) {\n        return <TabBar onChange={onChangeIndex} />;\n      }\n      if (dropzoneUser) {\n        return <ProfileTab active={defaultIndex} {...{ dropzoneUser }} />;\n      }\n      return null;\n    },\n    [defaultIndex, dropzoneUser]\n  );\n  return (\n    <>\n      <View style={StyleSheet.absoluteFill}>\n        {loading && (\n          <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n        )}\n        <FlatList\n          style={{ backgroundColor: state.theme.colors.background }}\n          contentContainerStyle={[styles.content, { backgroundColor: 'transparent' }]}\n          refreshControl={<RefreshControl refreshing={loading} />}\n          keyExtractor={(_, idx) => `profile-${idx}`}\n          ListHeaderComponent={() => (\n            <View style={styles.wrappingHeader}>\n              <View style={{ width: '100%' }}>\n                {!dropzoneUser ? (\n                  <Skeleton\n                    key=\"profile-header\"\n                    containerStyle={{\n                      height: 256,\n                      width: '100%',\n                    }}\n                    isLoading\n                    layout={[{ key: 'header', width: '100%', height: 256, borderRadius: 8 }]}\n                  />\n                ) : (\n                  <Header dropzoneUser={dropzoneUser} onPressAvatar={onPickImage}>\n                    <InfoGrid\n                      style={{ height: 80 }}\n                      items={[\n                        {\n                          title: 'Funds',\n                          value: `$${dropzoneUser?.credits || 0}`,\n                          onPress: () => {\n                            dialogs.credits.open({ dropzoneUser });\n                          },\n                        },\n                        {\n                          title: 'License',\n                          value: `${dropzoneUser?.license?.name || '-'}`,\n                          onPress: () => {\n                            openWizard(5);\n                          },\n                        },\n                        {\n                          title: 'Exit weight',\n                          onPress: () => {\n                            openWizard(9);\n                          },\n                          value:\n                            Math.round(Number(dropzoneUser?.user?.exitWeight)).toString() || '-',\n                        },\n                      ]}\n                    />\n                    <Divider style={styles.divider} />\n                  </Header>\n                )}\n              </View>\n            </View>\n          )}\n          renderItem={getContent}\n          data={[null, null]}\n        />\n\n        <RigDialog\n          onClose={onCloseRigForm}\n          onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n          open={forms.rig.open}\n          userId={Number(dropzoneUser?.user?.id)}\n        />\n\n        <DropzoneUserDialog\n          onClose={() => dispatch(actions.forms.dropzoneUser.setOpen(false))}\n          onSuccess={(user) => {\n            dispatch(actions.forms.dropzoneUser.setOpen(false));\n            if (currentUser?.id === dropzoneUser?.id) {\n              dispatch(actions.global.setUser(user.user));\n            }\n          }}\n          open={forms.dropzoneUser.open}\n        />\n        <EditUserSheet\n          dropzoneUserId={dropzoneUser?.id}\n          onClose={onUserSheetClose}\n          onSuccess={() => {\n            dispatch(actions.forms.user.setOpen(false));\n          }}\n          open={forms.user.open}\n        />\n      </View>\n      <UserActionsButton {...{ dropzoneUser }} visible={isFocused} />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    // flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  wrappingHeader: { width: '100%', flexDirection: 'row', flexWrap: 'wrap' },\n  wrappingHeaderItem: {},\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import { RouteProp, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { SectionList, StyleSheet, View } from 'react-native';\nimport { List, ProgressBar } from 'react-native-paper';\n\nimport { useAppSelector } from 'app/state';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { groupBy, map } from 'lodash';\nimport { formatDistance, parseISO, startOfDay, differenceInDays, format } from 'date-fns';\nimport enAU from 'date-fns/locale/en-AU';\nimport { OrderEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport OrderCard from '../../../../components/orders/OrderCard';\nimport { useUserNavigation } from '../useUserNavigation';\n\nexport type OrdersRoute = {\n  OrdersScreen: {\n    userId: string;\n  };\n};\nexport default function OrdersScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const route = useRoute<RouteProp<OrdersRoute>>();\n  const { dropzoneUser, loading, refetch } = useUserProfile({\n    id: (route?.params?.userId || currentUser?.id) as string,\n  });\n\n  const navigation = useUserNavigation();\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name?.split(/\\s/) || [];\n      navigation.setOptions({ title: `${firstName}'s Transactions` });\n    } else {\n      navigation.setOptions({ title: 'Your Transactions' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n\n  return (\n    <View style={{ flexGrow: 1, backgroundColor: state.theme.colors.surface }}>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n\n      <SectionList\n        sections={map(\n          groupBy(dropzoneUser?.orders?.edges, (e) =>\n            startOfDay(parseISO(e?.node?.createdAt)).toISOString()\n          ),\n          (d, t) => {\n            const date = parseISO(t);\n            const title =\n              differenceInDays(new Date(), date) > 7\n                ? format(date, 'dd MMM, yyyy')\n                : formatDistance(date, new Date(), { addSuffix: true, locale: enAU });\n            return {\n              title,\n              data: d,\n            };\n          }\n        )}\n        renderSectionHeader={({ section: { title } }) => <List.Subheader>{title}</List.Subheader>}\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        renderItem={({ item }) => (\n          <OrderCard\n            showAvatar\n            onPress={() =>\n              !item?.node || !dropzoneUser\n                ? null\n                : navigation.navigate('OrderReceiptScreen', {\n                    orderId: item?.node?.id,\n                    userId: dropzoneUser.id,\n                  })\n            }\n            order={item?.node as OrderEssentialsFragment}\n            {...{ dropzoneUser }}\n          />\n        )}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import { RouteProp, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { Permission } from 'app/api/schema.d';\nimport RigDialog from 'app/components/dialogs/Rig';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useUserProfile } from 'app/api/crud';\nimport RigCard from './RigCard';\n\nexport type EquipmentRoute = {\n  EquipmentScreen: {\n    userId: string;\n  };\n};\nexport default function EquipmentScreen() {\n  const globalState = useAppSelector((root) => root.global);\n  const forms = useAppSelector((root) => root.forms);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const navigation = useNavigation();\n\n  const route = useRoute<RouteProp<EquipmentRoute, 'EquipmentScreen'>>();\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: (route?.params?.userId || currentUser?.id) as string,\n  });\n\n  React.useEffect(() => {\n    if (dropzoneUser?.user?.name && dropzoneUser?.id !== currentUser?.id) {\n      const [firstName] = dropzoneUser.user?.name.split(/\\s/) || [];\n      navigation.setOptions({ title: `${firstName}'s Equipment` });\n    } else {\n      navigation.setOptions({ title: 'Your Equipment' });\n    }\n  }, [currentUser?.id, dropzoneUser?.id, dropzoneUser?.user?.name, navigation]);\n  const canUpdateUser = useRestriction(Permission.UpdateUser);\n  return (\n    <>\n      <FlatList\n        data={dropzoneUser?.user?.rigs || []}\n        numColumns={1}\n        style={{ flex: 1 }}\n        refreshing={loading}\n        keyExtractor={(item) => `rig-${item?.id}`}\n        contentContainerStyle={{ padding: 16 }}\n        renderItem={({ item }) => (\n          <RigCard\n            {...{ dropzoneUser }}\n            // onSuccessfulImageUpload={refetch}\n            rig={item}\n            rigInspection={dropzoneUser?.rigInspections?.find(\n              (insp) => insp.rig?.id === item.id && insp.isOk\n            )}\n            onPress={() => {\n              dispatch(actions.forms.rig.setOpen(item));\n            }}\n          />\n        )}\n      />\n\n      <FAB\n        small\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        visible={canUpdateUser}\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"Add rig\"\n      />\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => requestAnimationFrame(() => dispatch(actions.forms.rig.setOpen(false)))}\n        open={forms.rig.open}\n        userId={Number(dropzoneUser?.user?.id)}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 0,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  chip: {\n    margin: 1,\n    backgroundColor: 'transparent',\n    minHeight: 23,\n    borderWidth: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n  },\n  chipTitle: {\n    color: 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, ScrollViewProps, useWindowDimensions } from 'react-native';\nimport { useAppSelector } from '../../state';\n\ninterface IScrollableScreen extends ScrollViewProps {\n  children: React.ReactNode;\n}\nexport default React.forwardRef<ScrollView, IScrollableScreen>((props, ref) => {\n  const { height } = useWindowDimensions();\n  const { theme } = useAppSelector((root) => root.global);\n  const { style, children, contentContainerStyle, ...rest } = props;\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      keyboardDismissMode=\"on-drag\"\n      keyboardShouldPersistTaps=\"handled\"\n      contentInsetAdjustmentBehavior=\"always\"\n      style={[\n        styles.container,\n        { backgroundColor: theme.colors.surface, height: height - 56 * 2 },\n        style,\n      ]}\n      contentContainerStyle={[\n        styles.content,\n        { backgroundColor: theme.colors.background },\n        contentContainerStyle,\n      ]}\n    >\n      {children}\n    </ScrollView>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    paddingHorizontal: 16,\n    alignItems: 'flex-start',\n    flexGrow: 1,\n    paddingBottom: 50,\n  },\n});\n","import * as React from 'react';\nimport { Caption, Card, List, useTheme } from 'react-native-paper';\nimport { capitalize } from 'lodash';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { successColor } from 'app/constants/Colors';\nimport { TransactionEssentialsFragment } from 'app/api/operations';\nimport { DateTime } from 'luxon';\n\ninterface ITransaction {\n  transaction: TransactionEssentialsFragment;\n  onPress?(): void;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n    case 'withdrawal':\n      return 'cash-minus';\n    case 'refunded':\n    case 'deposit':\n      return 'cash-plus';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function TransactionCard(props: ITransaction) {\n  const { transaction, onPress } = props;\n  const theme = useTheme();\n\n  return (\n    <TouchableOpacity onPress={onPress} style={{ width: '100%' }}>\n      <Card style={styles.transaction}>\n        <Card.Content style={styles.transactionContent}>\n          <Caption\n            style={{\n              position: 'absolute',\n              top: 4,\n              right: 8,\n              color: theme.colors.onSurface,\n            }}\n          >\n            {transaction?.createdAt &&\n              DateTime.fromISO(transaction.createdAt).toLocaleString(DateTime.DATETIME_SHORT)}\n          </Caption>\n          <List.Item\n            description={capitalize(transaction.message || '')}\n            title={transaction.transactionType.toUpperCase()}\n            style={{ width: '100%' }}\n            titleStyle={styles.transactionTitle}\n            descriptionStyle={styles.transactionDescription}\n            left={() => (\n              <View style={{ width: 165, alignItems: 'center', flexDirection: 'row' }}>\n                <MaterialCommunityIcons\n                  color={transaction.amount < 0 ? '#FF1414' : successColor}\n                  name={getIcon(transaction.status)}\n                  size={36}\n                  style={{ marginHorizontal: 16 }}\n                />\n                <Text\n                  style={{\n                    fontSize: 30,\n                    fontWeight: '100',\n                    textAlign: 'center',\n                    color: theme.colors.onSurface,\n                  }}\n                >\n                  {transaction.amount < 0\n                    ? `-$${transaction.amount * -1}`\n                    : `$${transaction.amount}`}\n                </Text>\n              </View>\n            )}\n          />\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {},\n  transactionTitle: {\n    paddingLeft: 0,\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 0,\n  },\n  transactionDescription: {\n    paddingLeft: 0,\n  },\n  transactionContent: { paddingLeft: 0, paddingRight: 4, paddingTop: 8, paddingBottom: 8 },\n  transaction: {\n    marginHorizontal: 0,\n    marginVertical: StyleSheet.hairlineWidth,\n    borderRadius: 2,\n    width: '100%',\n  },\n});\n","import * as React from 'react';\nimport { List } from 'react-native-paper';\nimport { Wallet } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport {\n  DropzoneEssentialsFragment,\n  DropzoneUserEssentialsFragment,\n  OrderEssentialsFragment,\n  ReceiptEssentialsFragment,\n} from 'app/api/operations';\nimport TransactionCard from './TransactionCard';\n\ninterface IReceiptCardProps {\n  receipt: ReceiptEssentialsFragment;\n  index: number;\n  order: OrderEssentialsFragment;\n}\n\nexport default function ReceiptCard(props: IReceiptCardProps) {\n  const { receipt, index } = props;\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  const isUser = React.useCallback(\n    (entity: Wallet | DropzoneEssentialsFragment | DropzoneUserEssentialsFragment) => {\n      return (\n        '__typename' in entity &&\n        entity.__typename === 'DropzoneUser' &&\n        entity.id === currentUser?.id\n      );\n    },\n    [currentUser]\n  );\n\n  return (\n    <>\n      <List.Subheader>{`Receipt #${index + 1}`}</List.Subheader>\n      {receipt?.transactions\n        ?.filter((transaction) => isUser(transaction.receiver as DropzoneUserEssentialsFragment))\n        .map((transaction) => (\n          <TransactionCard {...{ transaction }} />\n        ))}\n    </>\n  );\n}\n","import * as React from 'react';\nimport { RouteProp, useRoute } from '@react-navigation/core';\nimport { Button, Card, Divider, List, useTheme } from 'react-native-paper';\nimport { Text, View } from 'react-native';\nimport color from 'color';\nimport { successColor } from 'app/constants/Colors';\nimport LottieView from 'app/components/LottieView';\nimport { Dropzone, DropzoneUser } from 'app/api/schema.d';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport UserAvatar from 'app/components/UserAvatar';\nimport lottieTicketAnimation from 'app/../assets/images/ticket.json';\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport ReceiptCard from './ReceiptCard';\n\nexport type OrderReceiptRoute = {\n  OrderReceiptScreen: {\n    orderId: string;\n    userId: string;\n  };\n};\nexport default function OrderScreen() {\n  const route = useRoute<RouteProp<OrderReceiptRoute, 'OrderReceiptScreen'>>();\n  const theme = useTheme();\n  const { orderId, userId } = route.params;\n  const { dropzoneUser } = useUserProfile({ id: userId });\n  const order = React.useMemo(\n    () =>\n      dropzoneUser?.orders?.edges?.map((edge) => edge?.node).find((node) => node?.id === orderId),\n    [dropzoneUser?.orders?.edges, orderId]\n  );\n\n  const animation = React.useMemo(\n    () =>\n      JSON.parse(\n        JSON.stringify(lottieTicketAnimation).replace(\n          /260,254,0/g,\n          [\n            color(theme.colors.primary).red(),\n            color(theme.colors.primary).green(),\n            color(theme.colors.primary).blue(),\n          ].join(',')\n        )\n      ),\n    [theme.colors.primary]\n  );\n  return (\n    <ScrollableScreen>\n      <Card style={{ marginTop: 32, width: '100%', maxWidth: 600 }}>\n        <Card.Content style={{ paddingBottom: 16 }}>\n          <View style={{ flexDirection: 'row', alignItems: 'center', flex: 1 }}>\n            <LottieView\n              loop={false}\n              autoPlay\n              speed={0.5}\n              style={{\n                height: 150,\n                width: 150,\n              }}\n              source={animation as unknown as string}\n            />\n            <View style={{ flexGrow: 1 }}>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  alignSelf: 'flex-start',\n                  fontSize: 26,\n                  marginLeft: 16,\n                  width: '100%',\n                  color: theme.colors.onSurface,\n                }}\n              >{`Order #${order?.id || ''}`}</Text>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  opacity: 0.6,\n                  alignSelf: 'flex-start',\n                  fontSize: 14,\n                  marginLeft: 16,\n                  width: '100%',\n                  marginBottom: 48,\n                  color: theme.colors.onSurface,\n                }}\n              >\n                {order?.title}\n              </Text>\n              <Button mode=\"outlined\" color={successColor} style={{ borderRadius: 16, margin: 8 }}>\n                {order?.state}\n              </Button>\n            </View>\n          </View>\n        </Card.Content>\n        <Divider />\n        <Card.Title\n          style={{ flexDirection: 'row' }}\n          titleStyle={{ width: '50%' }}\n          rightStyle={{ width: '50%' }}\n          title={\n            <List.Item\n              description=\"Buyer\"\n              title={(order?.buyer as DropzoneUser)?.user?.name || (order?.buyer as Dropzone)?.name}\n              left={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.buyer as DropzoneUser)?.user?.name ||\n                    (order?.buyer as Dropzone)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center' }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ width: 100, fontSize: 14 }}\n              descriptionStyle={{ width: 100, fontSize: 10 }}\n            />\n          }\n          right={() => (\n            <List.Item\n              description=\"Seller\"\n              right={(props) => (\n                <UserAvatar\n                  name={\n                    (order?.seller as DropzoneUser)?.user?.name ||\n                    (order?.seller as DropzoneEssentialsFragment)?.name ||\n                    ''\n                  }\n                  image={\n                    (order?.buyer as DropzoneUser)?.user?.image ||\n                    (order?.buyer as Dropzone)?.banner ||\n                    ''\n                  }\n                  style={{ alignSelf: 'center', marginLeft: 8 }}\n                  size={36}\n                />\n              )}\n              titleStyle={{ textAlign: 'right', fontSize: 14 }}\n              descriptionStyle={{ textAlign: 'right', fontSize: 10 }}\n              title={\n                (order?.seller as DropzoneUser)?.user?.name ||\n                (order?.seller as DropzoneEssentialsFragment)?.name\n              }\n            />\n          )}\n        />\n      </Card>\n      {order?.receipts?.map((receipt, index) => {\n        return <ReceiptCard {...{ receipt, order, index }} />;\n      })}\n    </ScrollableScreen>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport UsersScreen, { UserListRoute } from './user_list/UsersScreen';\nimport SearchableAppBar from './user_list/AppBar';\nimport RigInspectionScreen, { RigInspectionRoute } from './rig_inspection/RigInspectionScreen';\nimport ProfileScreen, { ProfileRoute } from './profile/ProfileScreen';\nimport OrdersScreen, { OrdersRoute } from './orders/OrdersScreen';\nimport EquipmentScreen, { EquipmentRoute } from './equipment/EquipmentScreen';\nimport OrderReceiptScreen, { OrderReceiptRoute } from './order_receipt/OrderScreen';\n\nexport type UserRoutes = EquipmentRoute &\n  OrderReceiptRoute &\n  RigInspectionRoute &\n  ProfileRoute &\n  UserListRoute &\n  OrdersRoute;\n\nconst Users = createStackNavigator<UserRoutes>();\n\nexport default function Routes() {\n  const { isSearchVisible, searchText } = useAppSelector((root) => root.screens.users);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  return (\n    <AppSignalBoundary>\n      <Users.Navigator\n        screenOptions={{\n          cardStyle: {\n            flex: 1,\n          },\n          presentation: 'modal',\n        }}\n      >\n        <Users.Screen\n          name=\"UserListScreen\"\n          component={UsersScreen}\n          options={{\n            title: 'Dropzone users',\n            headerShown: true,\n            header: (props) => (\n              <SearchableAppBar\n                {...props}\n                searchText={searchText}\n                searchVisible={isSearchVisible}\n                setSearchVisible={(visible) =>\n                  dispatch(actions.screens.users.setSearchVisible(visible))\n                }\n                onSearch={(text) => dispatch(actions.screens.users.setSearchText(text))}\n              />\n            ),\n          }}\n        />\n        <Users.Screen\n          name=\"ProfileScreen\"\n          component={ProfileScreen}\n          options={{ title: 'User' }}\n          initialParams={{\n            userId: currentUser?.id,\n          }}\n        />\n        <Users.Screen\n          name=\"RigInspectionScreen\"\n          component={RigInspectionScreen}\n          options={{ title: 'Inspection' }}\n        />\n        <Users.Screen\n          name=\"OrdersScreen\"\n          component={OrdersScreen}\n          options={{ title: 'Transactions' }}\n        />\n        <Users.Screen\n          name=\"EquipmentScreen\"\n          component={EquipmentScreen}\n          options={{ title: 'Equipment' }}\n        />\n        <Users.Screen\n          name=\"OrderReceiptScreen\"\n          component={OrderReceiptScreen}\n          options={{ title: 'Order' }}\n        />\n      </Users.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { NavigationProp, NavigatorScreenParams, useNavigation } from '@react-navigation/core';\n\nimport DropzoneWizardScreen from './dropzone_wizard/DropzoneWizard';\nimport UserWizardScreen from './user_wizard/UserWizardScreen';\nimport RecoverPasswordScreen from './recover_password/RecoverPasswordScreen';\nimport ConfirmUserScreen from './confirm_user/ConfirmUserScreen';\nimport ChangePasswordScreen from './change_password/ChangePasswordScreen';\nimport User, { UserRoutes } from '../authenticated/user/routes';\n\nexport type WizardRoutes = {\n  DropzoneWizardScreen: undefined;\n  UserWizardScreen: {\n    index?: number;\n  };\n  ConfirmUserScreen: undefined;\n  RecoverPasswordScreen: undefined;\n  ChangePasswordScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n};\n\nconst Wizards = createStackNavigator<WizardRoutes>();\n\nexport function useWizardRoutes() {\n  return useNavigation<NavigationProp<WizardRoutes>>();\n}\n\nexport default function Routes() {\n  return (\n    <Wizards.Navigator\n      screenOptions={{\n        headerShown: false,\n        presentation: 'modal',\n        cardStyle: { flex: 1 },\n      }}\n    >\n      <Wizards.Screen name=\"DropzoneWizardScreen\" component={DropzoneWizardScreen} />\n      <Wizards.Screen name=\"UserWizardScreen\" component={UserWizardScreen} />\n      <Wizards.Screen name=\"RecoverPasswordScreen\" component={RecoverPasswordScreen} />\n      <Wizards.Screen name=\"ConfirmUserScreen\" component={ConfirmUserScreen} />\n      <Wizards.Screen name=\"ChangePasswordScreen\" component={ChangePasswordScreen} />\n      <Wizards.Screen name=\"User\" component={User} />\n    </Wizards.Navigator>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Divider, List } from 'react-native-paper';\n\ninterface IInfoGrid {\n  items: { title: string; value: string; onPress?(): void; bold?: boolean }[];\n}\nexport default function InfoGrid(props: IInfoGrid) {\n  const { items } = props;\n  const flex = 1 / items.length;\n\n  return (\n    <>\n      <Divider style={styles.divider} />\n      <View style={styles.container}>\n        {items.map((item, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`info-grid-${i}`}>\n            <View style={{ flex }}>\n              <List.Item\n                titleStyle={[\n                  styles.title,\n                  {\n                    fontWeight: item.bold !== false ? 'bold' : undefined,\n                  },\n                ]}\n                style={{\n                  paddingVertical: 20,\n                }}\n                title={item.value}\n                descriptionStyle={styles.description}\n                description={item.title}\n                onPress={item.onPress}\n              />\n            </View>\n            {i === items.length - 1 ? null : (\n              // eslint-disable-next-line react/no-array-index-key\n              <Divider key={`info-grid-divider-${i}`} style={styles.verticalDivider} />\n            )}\n          </React.Fragment>\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { width: '100%', flexDirection: 'row' },\n  divider: {\n    height: StyleSheet.hairlineWidth,\n    width: '100%',\n  },\n  verticalDivider: {\n    width: StyleSheet.hairlineWidth,\n    height: '100%',\n  },\n  title: {\n    textAlign: 'center',\n  },\n  description: {\n    textAlign: 'center',\n  },\n});\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Avatar, Drawer, List } from 'react-native-paper';\nimport { DrawerActions, useNavigation } from '@react-navigation/native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport capitalize from 'lodash/capitalize';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { DropzoneExtensiveFragment } from 'app/api/operations';\nimport InfoGrid from 'app/screens/authenticated/dropzone/load/InfoGrid';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { ModerationRole, Permission } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { useLogout } from 'app/api/hooks/useLogout';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\n\nexport default function DrawerMenu() {\n  const { theme, currentRouteName: routeName } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, dropzone, loading },\n  } = useDropzoneContext();\n  const { dropzones } = useDropzonesContext();\n\n  const navigation = useNavigation();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdatePlane = useRestriction(Permission.UpdatePlane);\n  const canUpdateTicketTypes = useRestriction(Permission.UpdateTicketType);\n  const canUpdateExtras = useRestriction(Permission.UpdateExtra);\n  const canUpdatePermissions = useRestriction(Permission.GrantPermission);\n  const canUpdateDzRigs = useRestriction(Permission.UpdateDropzoneRig);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n  const logout = useLogout();\n  const onLogout = React.useCallback(() => {\n    navigation.dispatch(DrawerActions.closeDrawer());\n    logout();\n  }, [logout, navigation]);\n\n  const shouldShowSettings =\n    canUpdateDropzone ||\n    canUpdatePlane ||\n    canUpdateTicketTypes ||\n    canUpdateExtras ||\n    canUpdatePermissions ||\n    canUpdateDzRigs ||\n    canUpdateRigInspectionTemplate;\n\n  return (\n    <View style={{ flex: 1, paddingTop: 100 }}>\n      {loading ? (\n        <SkeletonContent\n          containerStyle={styles.skeleton}\n          isLoading\n          layout={[\n            { key: 'avatar', borderRadius: 25, height: 50, width: 50 },\n            { key: 'role', height: 12, width: 120, marginLeft: 8, marginTop: 12 },\n          ]}\n        />\n      ) : (\n        <List.Item\n          left={() =>\n            !currentUser?.user?.image ? (\n              <Avatar.Icon\n                size={50}\n                icon=\"account\"\n                color={theme.colors.primary}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            ) : (\n              <Avatar.Image\n                size={50}\n                source={{ uri: currentUser?.user.image as string }}\n                style={{ backgroundColor: theme.colors.surface }}\n              />\n            )\n          }\n          title={currentUser?.user?.name}\n          description={`@ ${dropzone?.name}`}\n          titleStyle={styles.profileAvatarTitle}\n          descriptionStyle={styles.profileAvatarSubtitle}\n          style={styles.profileAvatar}\n          onPress={() => {\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'User',\n                  params: {\n                    screen: 'ProfileScreen',\n                    params: {\n                      userId: currentUser?.id as string,\n                    },\n                  },\n                },\n              },\n            });\n          }}\n        />\n      )}\n\n      <InfoGrid\n        items={[\n          {\n            title: 'Role',\n            value: capitalize((currentUser?.role?.name || '').replace('_', ' ')),\n          },\n          {\n            title: 'Funds',\n            value: `$${currentUser?.credits || 0}`,\n          },\n        ]}\n      />\n\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <Drawer.Section title=\"Dropzone\">\n          {dropzone?.currentUser?.user?.moderationRole !== ModerationRole.User ? (\n            <Drawer.Item\n              label=\"Admin\"\n              active={/Overview/.test(routeName || '')}\n              icon=\"view-dashboard\"\n              onPress={() => {\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Overview',\n                    params: {\n                      screen: 'OverviewScreen',\n                    },\n                  },\n                });\n              }}\n            />\n          ) : null}\n          <Drawer.Item\n            label=\"Overview\"\n            active={/Dashboard/.test(routeName || '')}\n            icon=\"view-dashboard-outline\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Overview',\n                  params: {\n                    screen: 'DashboardScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Manifest\"\n            active={/Manifest/.test(routeName || '')}\n            icon=\"home\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'ManifestScreen',\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Order Activity\"\n            active={routeName === 'DropzoneTransactionsScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'Configuration',\n                    params: {\n                      screen: 'TransactionsScreen',\n                    },\n                  },\n                },\n              });\n            }}\n          />\n          {shouldShowSettings ? (\n            <Drawer.Item\n              active={routeName === 'Settings'}\n              label=\"Settings\"\n              icon=\"cog\"\n              onPress={() =>\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Manifest',\n                    params: {\n                      screen: 'Configuration',\n                      params: {\n                        screen: 'SettingsMenuScreen',\n                      },\n                    },\n                  },\n                })\n              }\n            />\n          ) : null}\n        </Drawer.Section>\n        <Drawer.Section title=\"Account\">\n          <Drawer.Item\n            label=\"Profile\"\n            active={routeName === 'ProfileScreen'}\n            icon=\"account\"\n            onPress={() => {\n              navigation.navigate('Wizards', {\n                screen: 'User',\n                params: {\n                  screen: 'ProfileScreen',\n                  params: {\n                    userId: currentUser?.id as string,\n                  },\n                },\n              });\n            }}\n          />\n          <Drawer.Item\n            label=\"Equipment\"\n            active={routeName === 'EquipmentScreen'}\n            icon=\"parachute\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'User',\n                    params: {\n                      screen: 'EquipmentScreen',\n                      params: { userId: currentUser?.id as string },\n                    },\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item\n            label=\"Notifications\"\n            active={routeName === 'NotificationsScreen'}\n            icon=\"bell\"\n            onPress={() =>\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Notifications',\n                  params: {\n                    screen: 'NotificationsScreen',\n                  },\n                },\n              })\n            }\n          />\n          <Drawer.Item\n            label=\"Transactions\"\n            active={routeName === 'OrdersScreen'}\n            icon=\"cash\"\n            onPress={() => {\n              navigation.navigate('Authenticated', {\n                screen: 'LeftDrawer',\n                params: {\n                  screen: 'Manifest',\n                  params: {\n                    screen: 'User',\n                    params: {\n                      screen: 'OrdersScreen',\n                      params: { userId: currentUser?.id as string },\n                    },\n                  },\n                },\n              });\n            }}\n          />\n\n          <Drawer.Item label=\"Log out\" icon=\"logout\" onPress={onLogout} />\n        </Drawer.Section>\n\n        <Drawer.Section title=\"Switch dropzone\">\n          {dropzones?.map((item) => (\n            <Drawer.Item\n              key={`${item?.id}-dz`}\n              label={item?.name || ''}\n              icon={\n                item?.banner\n                  ? ({ size }) => (\n                      <Avatar.Image source={{ uri: item?.banner as string }} {...{ size }} />\n                    )\n                  : 'map-marker'\n              }\n              active={dropzone?.id === item?.id}\n              onPress={() => {\n                if (item) {\n                  dispatch(actions.global.setDropzone(item as DropzoneExtensiveFragment));\n                  navigation.navigate('Authenticated', {\n                    screen: 'LeftDrawer',\n                    params: {\n                      screen: 'Manifest',\n                      params: {\n                        screen: 'ManifestScreen',\n                      },\n                    },\n                  });\n                }\n              }}\n            />\n          ))}\n          <Drawer.Item\n            label=\"Create new\"\n            icon=\"plus\"\n            onPress={() => {\n              navigation.navigate('Wizards', { screen: 'DropzoneWizardScreen' });\n            }}\n          />\n        </Drawer.Section>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  profileHeader: {\n    backgroundColor: '#FF1414',\n    flexGrow: 1,\n  },\n  skeleton: {\n    marginLeft: 32,\n    height: 50,\n    width: '100%',\n    paddingHorizontal: 8,\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  profileAvatar: {\n    marginLeft: 32,\n    marginBottom: 16,\n  },\n  profileAvatarTitle: {\n    fontWeight: 'bold',\n    marginLeft: 4,\n  },\n  profileAvatarSubtitle: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n});\n","import { useApolloClient } from '@apollo/client';\nimport { actions, useAppDispatch } from 'app/state';\nimport React from 'react';\nimport { abortController } from '../client/links';\n\nexport function useLogout() {\n  const dispatch = useAppDispatch();\n  const client = useApolloClient();\n  return React.useCallback(() => {\n    console.debug('[Hooks::useLogout]: Logging out...');\n    abortController.abort();\n    client.clearStore();\n    dispatch(actions.global.logout());\n  }, [client, dispatch]);\n}\n","import * as React from 'react';\nimport { Paragraph, useTheme, IconButton } from 'react-native-paper';\nimport { View, StyleSheet, useWindowDimensions } from 'react-native';\nimport Color from 'color';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\ninterface ISetupWarning {\n  credits: number;\n  loading: boolean;\n  isRigSetUp: boolean;\n  isRigInspectionComplete: boolean;\n  isCreditSystemEnabled: boolean;\n  isExitWeightDefined: boolean;\n  isReserveInDate: boolean;\n  isMembershipInDate: boolean;\n  onSetupWizard?(): void;\n}\n\nfunction Warning(props: { title: string; action?: () => void }) {\n  const { action, title } = props;\n  const { width } = useWindowDimensions();\n  const theme = useTheme();\n  const textColor =\n    Color(theme.colors.primary).contrast(Color(theme.colors.onSurface)) < 11\n      ? theme.colors.surface\n      : theme.colors.onSurface;\n  return (\n    <View style={[styles.warning, { backgroundColor: theme.colors.primary }]}>\n      <Paragraph\n        style={{ width: action ? width - 56 : width, color: textColor, flexGrow: 1 }}\n        adjustsFontSizeToFit\n        allowFontScaling\n      >\n        {title}\n      </Paragraph>\n      {!action ? null : (\n        <View style={{ width: 40 }}>\n          <IconButton icon=\"launch\" color={textColor} onPress={action} style={{ width: 24 }} />\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default function SetupWarning(props: ISetupWarning) {\n  const {\n    credits,\n    loading,\n    isCreditSystemEnabled,\n    isRigSetUp,\n    isExitWeightDefined,\n    isMembershipInDate,\n    isReserveInDate,\n    isRigInspectionComplete,\n    onSetupWizard,\n  } = props;\n  const navigation = useNavigation();\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n\n  if (loading) {\n    return null;\n  }\n\n  if (!isExitWeightDefined || !isRigSetUp) {\n    const missing = [\n      !isExitWeightDefined ? 'exit weight' : null,\n      !isRigSetUp ? 'equipment' : null,\n    ].filter(Boolean);\n\n    return (\n      <Warning\n        title={`You need to define ${missing.join(' and ')} in your profile`}\n        action={() => onSetupWizard?.()}\n      />\n    );\n  }\n  if (!isMembershipInDate) {\n    return <Warning title=\"Your membership seems to be out of date\" />;\n  }\n  if (!isRigInspectionComplete) {\n    return <Warning title=\"Your rig must be inspected before you can manifest at this dropzone\" />;\n  }\n  if (!isReserveInDate) {\n    return (\n      // eslint-disable-next-line max-len\n      <Warning\n        title=\"Your reserve repack is due. You can update the repack date on your profile\"\n        action={() =>\n          currentUser?.id &&\n          navigation.navigate('Authenticated', {\n            screen: 'LeftDrawer',\n            params: {\n              screen: 'Manifest',\n              params: {\n                screen: 'User',\n                params: { screen: 'EquipmentScreen', params: { userId: currentUser.id } },\n              },\n            },\n          })\n        }\n      />\n    );\n  }\n  if (isCreditSystemEnabled && !credits && !loading) {\n    return <Warning title=\"You'll need to top up on credits before you can manifest\" />;\n  }\n\n  return null;\n}\n\nconst styles = StyleSheet.create({\n  warning: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 56,\n    width: '100%',\n    backgroundColor: 'black',\n    justifyContent: 'space-between',\n    paddingHorizontal: 16,\n  },\n});\n","import * as React from 'react';\nimport { Appbar, IconButton, Chip } from 'react-native-paper';\nimport { StackHeaderProps } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { DrawerNavigationProp } from '@react-navigation/drawer';\nimport { actions, useAppDispatch, useAppSelector } from '../../state';\nimport SetupWarning from './SetupWarning';\n\ninterface IAppBarProps extends StackHeaderProps {\n  hideWarnings?: boolean;\n}\n\nfunction AppBar(props: IAppBarProps) {\n  const { hideWarnings, back, options } = props;\n  const { palette, theme } = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { currentUser, loading, dropzone },\n  } = useDropzoneContext();\n\n  const navigation = useNavigation();\n  const { openDrawer } = useNavigation<DrawerNavigationProp<never>>();\n  return (\n    <>\n      <Appbar.Header\n        style={{ backgroundColor: theme.dark ? theme.colors.background : theme.colors.surface }}\n      >\n        {back ? (\n          <Appbar.BackAction onPress={navigation.goBack} />\n        ) : (\n          <IconButton icon=\"menu\" size={32} onPress={openDrawer} />\n        )}\n        <Appbar.Content title={options.title} titleStyle={{ fontWeight: 'bold' }} />\n\n        {options.headerRight ? (\n          options.headerRight({ tintColor: 'white' })\n        ) : (\n          <Chip\n            style={{\n              backgroundColor: palette.background,\n              height: 36,\n              padding: 4,\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n            mode=\"flat\"\n            textStyle={{\n              color: palette.onSurface,\n              fontFamily: 'Roboto_700Bold',\n            }}\n          >{`$${currentUser?.credits || 0}`}</Chip>\n        )}\n      </Appbar.Header>\n      {hideWarnings ? null : (\n        <SetupWarning\n          credits={currentUser?.credits || 0}\n          loading={loading}\n          isCreditSystemEnabled={!!dropzone?.isCreditSystemEnabled}\n          isExitWeightDefined={!!currentUser?.user?.exitWeight}\n          isMembershipInDate={\n            !!currentUser?.expiresAt && currentUser?.expiresAt > new Date().getTime() / 1000\n          }\n          isReserveInDate={\n            !!currentUser?.user?.rigs?.some((rig) => {\n              const isRigInspected = dropzone?.currentUser?.rigInspections?.map(\n                (inspection) => inspection?.rig?.id === rig.id\n              );\n              const isRepackInDate = (rig.repackExpiresAt || 0) > new Date().getTime() / 1000;\n              return isRigInspected && isRepackInDate;\n            })\n          }\n          isRigInspectionComplete={!!currentUser?.rigInspections?.length}\n          isRigSetUp={!!currentUser?.user?.rigs?.length}\n          onSetupWizard={() => {\n            console.log('opening setup wizard');\n            if (currentUser) {\n              dispatch(actions.forms.user.setOriginal(currentUser));\n              console.log(currentUser);\n              if (currentUser?.user?.rigs?.length) {\n                dispatch(actions.forms.rig.setOriginal(currentUser.user.rigs[0]));\n              }\n\n              navigation.navigate('Wizards', {\n                screen: 'UserWizardScreen',\n                params: {\n                  index: undefined,\n                },\n              });\n            }\n          }}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AppBar;\n","import { useDropzoneUsersQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { useTheme } from 'react-native-paper';\nimport Select, { ISelectOption } from 'app/components/input/select/Select';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport { View } from 'react-native';\nimport Chip from './Chip';\n\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\n\ninterface IGCAChipSelect {\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function GCAChip(props: IGCAChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: [Permission.ActAsGca],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"radio-handheld\">\n        {truncate(item?.label || 'No GCA', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <View style={{ maxWidth: 100 }}>\n      {!allowed ? (\n        <Chip {...{ backgroundColor, small, color }} icon=\"radio-handheld\">\n          {value?.user?.name || 'No gca'}\n        </Chip>\n      ) : (\n        <Select<DropzoneUserEssentialsFragment>\n          value={selected}\n          options={options}\n          onChange={onSelect}\n          renderAnchor={renderAnchor}\n        />\n      )}\n    </View>\n  );\n}\n","import { DropzoneUserEssentialsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface ILoadMasterChipSelect {\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  slots: SlotDetailsFragment[];\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function LoadMasterChip(props: ILoadMasterChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect, slots } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      slots?.map((slot) => ({\n        label: slot?.dropzoneUser?.user?.name || '',\n        value: slot?.dropzoneUser as DropzoneUserEssentialsFragment,\n        avatar: slot?.dropzoneUser?.user?.image,\n      })) || [],\n    [slots]\n  );\n\n  const selected = React.useMemo(\n    () => slots?.map((slot) => slot?.dropzoneUser)?.find((node) => node?.id === value?.id),\n    [slots, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip {...{ backgroundColor, small, color, onPress: openMenu }} icon=\"shield-account\">\n        {truncate(item?.label || 'No LM', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return (\n    <View style={{ maxWidth: 100 }}>\n      {!allowed ? (\n        <Chip {...{ backgroundColor, small, color }} icon=\"shield-account\">\n          {value?.user?.name || 'No LM'}\n        </Chip>\n      ) : (\n        <Select<DropzoneUserEssentialsFragment>\n          value={selected}\n          options={options}\n          renderAnchor={renderAnchor}\n          onChange={onSelect}\n        />\n      )}\n    </View>\n  );\n}\n","import { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport { useDropzoneUsersQuery } from 'app/api/reflection';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface IPilotChipSelect {\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n  value?: { id: string; user: { id: string; name?: string | null } } | null;\n  onSelect(user: { id: string; user: { id: string; name?: string | null } }): void;\n}\n\nexport default function PilotChip(props: IPilotChipSelect) {\n  const { small, color: assignedColor, backgroundColor, onSelect, value } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = useDropzoneUsersQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n      permissions: [Permission.ActAsPilot],\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges\n        ?.filter((edge) => !!edge?.node)\n        .map((edge) => ({\n          label: edge?.node?.user?.name || '',\n          value: edge?.node as DropzoneUserEssentialsFragment,\n          avatar: edge?.node?.user?.image,\n        })) || [],\n    [data?.dropzoneUsers?.edges]\n  );\n\n  const selected = React.useMemo(\n    () =>\n      data?.dropzoneUsers?.edges?.map((edge) => edge?.node).find((node) => node?.id === value?.id),\n    [data?.dropzoneUsers?.edges, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<DropzoneUserEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip\n        {...{ backgroundColor, small, color, onPress: openMenu }}\n        style={{ maxWidth: 100 }}\n        icon=\"account-tie-hat\"\n      >\n        {truncate(item?.label || 'No Pilot', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} style={{ maxWidth: 146 }} icon=\"account-tie-hat\">\n      {value?.user?.name || 'No Pilot'}\n    </Chip>\n  ) : (\n    <View style={{ maxWidth: 146 }}>\n      <Select<DropzoneUserEssentialsFragment>\n        value={selected}\n        options={options}\n        renderAnchor={renderAnchor}\n        onChange={onSelect}\n      />\n    </View>\n  );\n}\n","import { PlaneEssentialsFragment } from 'app/api/operations';\nimport { truncate } from 'lodash';\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { usePlanesQuery } from '../../api/reflection';\nimport { Permission } from '../../api/schema.d';\nimport useRestriction from '../../hooks/useRestriction';\nimport { useAppSelector } from '../../state';\nimport Select, { ISelectOption } from '../input/select/Select';\nimport Chip from './Chip';\n\ninterface IPlaneChipSelect {\n  value?: PlaneEssentialsFragment | null;\n  small?: boolean;\n  backgroundColor?: string;\n  color?: string;\n\n  onSelect(dzUser: PlaneEssentialsFragment): void;\n}\n\nexport default function PlaneChip(props: IPlaneChipSelect) {\n  const { small, color: assignedColor, backgroundColor, value, onSelect } = props;\n  const theme = useTheme();\n  const color = assignedColor || theme.colors.onSurface;\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  const { data } = usePlanesQuery({\n    variables: {\n      dropzoneId: currentDropzoneId?.toString() as string,\n    },\n  });\n  const allowed = useRestriction(Permission.UpdateLoad);\n\n  const options = React.useMemo(\n    () =>\n      data?.planes?.map((node) => ({\n        label: node?.name || '',\n        value: node as PlaneEssentialsFragment,\n      })) || [],\n    [data?.planes]\n  );\n\n  const selected = React.useMemo(\n    () => data?.planes?.find((node) => node?.id === value?.id),\n    [data?.planes, value?.id]\n  );\n\n  const renderAnchor: React.FC<{\n    item?: ISelectOption<PlaneEssentialsFragment>;\n    openMenu(): void;\n  }> = React.useCallback(\n    ({ item, openMenu }) => (\n      <Chip\n        {...{ backgroundColor, small, color, onPress: openMenu }}\n        style={{ maxWidth: 100 }}\n        icon=\"airplane\"\n      >\n        {truncate(item?.label || 'No Plane', { length: 12 })}\n      </Chip>\n    ),\n    [backgroundColor, color, small]\n  );\n\n  return !allowed ? (\n    <Chip {...{ backgroundColor, small, color }} style={{ maxWidth: 100 }} icon=\"airplane\">\n      {value?.name || 'No Plane'}\n    </Chip>\n  ) : (\n    <View style={{ maxWidth: 100 }}>\n      <Select<PlaneEssentialsFragment>\n        value={selected}\n        options={options}\n        renderAnchor={renderAnchor}\n        onChange={onSelect}\n      />\n    </View>\n  );\n}\n","import * as React from 'react';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport {\n  Autocomplete,\n  InputAdornment,\n  ListItemAvatar,\n  ListItemText,\n  MenuItem,\n  styled,\n} from '@mui/material';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport { useDropzoneUsersLazyQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport first from 'lodash/first';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Caption, useTheme } from 'react-native-paper';\nimport UserAvatar from '../UserAvatar.web.old';\n\ninterface IDropzoneUserAutocompleteProps {\n  value?: DropzoneUserEssentialsFragment | null;\n  label?: string;\n  placeholder?: string;\n  color?: string;\n  onChange(value: DropzoneUserEssentialsFragment): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore This is supposed to be ok\nconst StyledTextField = styled(TextField, {\n  shouldForwardProp: (prop: keyof TextFieldProps) => prop !== 'color',\n})((p: TextFieldProps) => ({\n  // input label when focused\n  '& .MuiInput-input': {\n    color: p.color,\n  },\n  '& label.Mui-focused': {\n    color: p.color,\n  },\n  // focused color for input with variant='standard'\n  '& .MuiInput-root:before': {\n    borderBottomColor: p.color,\n  },\n  '& .MuiInput-root:hover': {\n    borderBottomColor: p.color,\n  },\n  // focused color for input with variant='filled'\n  '& .MuiFilledInput-underline': {\n    borderBottomColor: p.color,\n  },\n  // focused color for input with variant='outlined'\n  '& .MuiOutlinedInput-root': {\n    '&.Mui-focused fieldset': {\n      borderColor: p.color,\n    },\n  },\n})) as React.ComponentType<Omit<TextFieldProps, 'color'> & { color?: string }>;\nexport default function DropzoneUserAutocomplete(props: IDropzoneUserAutocompleteProps) {\n  const { label, onChange, placeholder, color } = props;\n  const [searchUsers, { data, loading }] = useDropzoneUsersLazyQuery();\n  const [searchText, setSearchText] = React.useState('');\n  const { currentDropzoneId } = useAppSelector((root) => root.global);\n\n  React.useEffect(() => {\n    if (currentDropzoneId && searchText !== null) {\n      searchUsers({\n        variables: {\n          dropzoneId: currentDropzoneId?.toString() as string,\n          search: searchText,\n          licensed: false,\n        },\n      });\n    }\n  }, [currentDropzoneId, searchText, searchUsers]);\n\n  const theme = useTheme();\n  const getOptionLabel = React.useCallback(\n    (option: DropzoneUserEssentialsFragment) =>\n      option.user.nickname\n        ? `${option.user.nickname} (${option.user.name})`\n        : (option.user.name as string),\n    []\n  );\n\n  const groupBy = React.useCallback(\n    (option: DropzoneUserEssentialsFragment) => first(getOptionLabel(option).split('')) as string,\n    [getOptionLabel]\n  );\n\n  const options = React.useMemo(\n    () =>\n      (\n        (data?.dropzoneUsers?.edges?.map(\n          (edge) => edge?.node\n        ) as DropzoneUserEssentialsFragment[]) || []\n      ).sort(\n        (a, b) =>\n          -(first(getOptionLabel(b).split('')) as string).localeCompare(\n            first(getOptionLabel(a).split('')) as string\n          )\n      ),\n    [data?.dropzoneUsers?.edges, getOptionLabel]\n  );\n\n  const onSelect = React.useCallback(\n    (_: unknown, nextValue?: DropzoneUserEssentialsFragment | null) => {\n      setSearchText('');\n      if (nextValue) {\n        onChange(nextValue);\n      }\n    },\n    [onChange]\n  );\n  return (\n    <Autocomplete<DropzoneUserEssentialsFragment>\n      {...{ loading, options, groupBy, getOptionLabel, value: null }}\n      sx={{ width: '100%' }}\n      renderInput={(params) => (\n        <StyledTextField\n          variant=\"standard\"\n          {...params}\n          {...{ color, label, placeholder }}\n          fullWidth\n          value={searchText}\n          InputProps={{\n            ...params.InputProps,\n            value: searchText,\n            disableUnderline: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <MaterialCommunityIcons\n                  name=\"account-search-outline\"\n                  size={20}\n                  color={color || theme.colors.text}\n                />\n              </InputAdornment>\n            ),\n          }}\n        />\n      )}\n      onInputChange={(_, text) => setSearchText(text)}\n      onChange={onSelect}\n      inputValue={searchText}\n      popupIcon={<MaterialCommunityIcons name=\"chevron-down\" color={color} />}\n      clearIcon={<MaterialCommunityIcons name=\"close\" color={color} />}\n      renderOption={(menuItemProps, option) => (\n        <MenuItem {...menuItemProps} key={`autocomplete-user-${option.id}`} id={option.id}>\n          <ListItemAvatar>\n            <UserAvatar name={option.user.name} image={option?.user?.image} size={32} />\n          </ListItemAvatar>\n\n          <ListItemText>\n            {option.user.nickname ? (\n              <>\n                {option.user.nickname}&nbsp;\n                <Caption>({option.user.name})</Caption>\n              </>\n            ) : (\n              option.user.name\n            )}\n          </ListItemText>\n        </MenuItem>\n      )}\n    />\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, View, StyleSheet } from 'react-native';\nimport { Card, ProgressBar, Divider, List, Button } from 'react-native-paper';\nimport { useAppSelector } from 'app/state';\nimport calculateWingLoading from 'app/utils/calculateWingLoading';\nimport Chip from 'app/components/chips/Chip';\nimport TextInput from 'app/components/input/text/TextField';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { RigEssentialsFragment } from 'app/api/operations';\nimport { useUserProfile } from 'app/api/crud';\nimport RigSelect from '../../input/dropdown_select/RigSelect';\nimport NumberField, { NumberFieldType } from '../../input/number_input/NumberField';\n\ninterface IUserRigCard {\n  dropzoneUserId: string;\n  exitWeight?: number;\n  isTandem?: boolean;\n  selectedRig?: RigEssentialsFragment;\n\n  passengerName?: string | null;\n  passengerWeight?: number | null;\n  onRemove?(): void;\n  onChangeExitWeight(weight: number): void;\n  onChangeRig(rig: RigEssentialsFragment): void;\n  onChangePassengerName?(name: string): void;\n  onChangePassengerWeight?(weight: number): void;\n}\n\nexport default function UserRigCard(props: IUserRigCard) {\n  const {\n    dropzoneUserId,\n    onChangeRig,\n    exitWeight,\n    selectedRig,\n    isTandem,\n    passengerName,\n    passengerWeight,\n    onRemove,\n    onChangeExitWeight,\n    onChangePassengerName,\n    onChangePassengerWeight,\n  } = props;\n  const { global: globalState } = useAppSelector((root) => root);\n\n  const { dropzoneUser, loading } = useUserProfile({\n    id: dropzoneUserId,\n  });\n\n  React.useEffect(() => {\n    if (!exitWeight && dropzoneUser?.user?.exitWeight) {\n      onChangeExitWeight(Number(dropzoneUser.user.exitWeight));\n    }\n  }, [dropzoneUser?.user.exitWeight, exitWeight, onChangeExitWeight]);\n  return (\n    <Card style={{ marginHorizontal: 16, marginBottom: 16 }} elevation={1}>\n      <ProgressBar indeterminate color={globalState.theme.colors.primary} visible={loading} />\n      <Card.Title\n        title={dropzoneUser?.user.name}\n        left={() => (\n          <UserAvatar name={dropzoneUser?.user?.name} image={dropzoneUser?.user?.image} size={36} />\n        )}\n        titleStyle={{ paddingRight: 0 }}\n        right={() => (\n          <View style={{ maxWidth: 100, marginRight: 16 }}>\n            <NumberField\n              value={!exitWeight ? 0 : exitWeight}\n              mode=\"flat\"\n              variant={NumberFieldType.Weight}\n              onChange={(num) => onChangeExitWeight(num)}\n            />\n          </View>\n        )}\n      />\n\n      <Card.Content>\n        <Divider style={{ marginBottom: 8 }} />\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          <View style={{ maxWidth: 128 }}>\n            <RigSelect\n              small\n              variant=\"chip\"\n              dropzoneUserId={dropzoneUserId ? Number(dropzoneUserId) : undefined}\n              onChange={onChangeRig}\n              value={selectedRig}\n              tandem={isTandem}\n              autoSelectFirst\n            />\n          </View>\n          {!selectedRig || !exitWeight || !selectedRig.canopySize ? null : (\n            <Chip small icon=\"escalator-down\" mode=\"outlined\" disabled>\n              {calculateWingLoading(exitWeight, selectedRig.canopySize)}\n            </Chip>\n          )}\n          <Chip small icon=\"lock\" mode=\"outlined\" disabled>\n            {dropzoneUser?.role?.name}\n          </Chip>\n          <Chip small icon=\"ticket-account\" mode=\"outlined\" disabled>\n            {dropzoneUser?.license?.name}\n          </Chip>\n        </ScrollView>\n        {!isTandem ? null : (\n          <>\n            <Divider />\n            <List.Subheader>Passenger</List.Subheader>\n            <View style={styles.row}>\n              <View style={styles.rowFirst}>\n                <TextInput\n                  mode=\"flat\"\n                  value={passengerName || ''}\n                  onChangeText={(text: string) => onChangePassengerName?.(text)}\n                  label=\"Passenger name\"\n                />\n              </View>\n              <View style={styles.rowLast}>\n                <NumberField\n                  value={!passengerWeight ? 0 : passengerWeight}\n                  onChange={(num) => onChangePassengerWeight?.(num)}\n                  variant={NumberFieldType.Weight}\n                />\n              </View>\n            </View>\n          </>\n        )}\n      </Card.Content>\n      <Card.Actions style={styles.actions}>\n        <Button mode=\"text\" onPress={() => onRemove?.()}>\n          Remove\n        </Button>\n      </Card.Actions>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  rowFirst: {\n    flex: 2 / 4,\n    marginRight: 4,\n  },\n  rowLast: {\n    flex: 2 / 4,\n  },\n  actions: { justifyContent: 'flex-end' },\n});\n","import { round } from 'lodash';\n\nexport default function calculateWingLoading(exitWeightInKg: number, canopySizeInFt: number) {\n  return round((2.20462 * exitWeightInKg) / canopySizeInFt, 2).toFixed(2);\n}\n","import { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport { Permission } from 'app/api/schema.d';\nimport { StyleSheet, Text, View } from 'react-native';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport React from 'react';\nimport { Avatar, Caption, DataTable, Paragraph } from 'react-native-paper';\nimport { generateColor } from 'app/utils/generateColor';\nimport { isNumber } from 'lodash';\nimport SwipeActions from '../layout/SwipeActions';\nimport UserAvatar from '../UserAvatar';\nimport DraggableWrapper from './DragAndDrop/DraggableRow';\nimport DroppableSlot from './DragAndDrop/DroppableSlot';\n\nexport enum SlotFields {\n  License = 'license',\n  Group = 'groupNumber',\n  WingLoading = 'wingloading',\n  Altitude = 'altitude',\n  Rig = 'rig',\n  TicketType = 'ticketType',\n  JumpType = 'jumpType',\n}\n\nexport interface ISlotUserRowProps {\n  load: LoadDetailsFragment;\n  fields?: SlotFields[];\n  slot: SlotDetailsFragment;\n  index: number;\n  onDeletePress(slot: SlotDetailsFragment): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n}\n\nexport const GROUP_COLORS = Array.from({ length: 20 }).map(() => generateColor());\n\nexport default function UserRow(props: ISlotUserRowProps) {\n  const { fields, load, slot, index, onDeletePress, onSlotGroupPress, onSlotPress } = props;\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n\n  const canRemoveSelf = useRestriction(Permission.DeleteSlot);\n  const canRemoveOthers = useRestriction(Permission.DeleteUserSlot);\n\n  const slotGroup: Required<typeof load['slots']> = load?.slots?.filter(\n    ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n  ) as Required<typeof load['slots']>;\n  const isCurrentUser = slot?.dropzoneUser?.id === currentUser?.id;\n\n  return (\n    <DroppableSlot loadId={load.id} slotId={slot?.id} rowIndex={index}>\n      <DraggableWrapper rowProps={props}>\n        {({ isDragging }) => (\n          <View style={{ height: 46 }}>\n            <SwipeActions\n              disabled={\n                isDragging ||\n                (isCurrentUser && !canRemoveSelf) ||\n                (!isCurrentUser && !canRemoveOthers)\n              }\n              key={`slot-${slot.id}`}\n              rightAction={{\n                label: 'Delete',\n                backgroundColor: 'red',\n                onPress: () => onDeletePress(slot),\n              }}\n            >\n              <DataTable.Row\n                testID=\"slot-row\"\n                style={\n                  isNumber(slot?.groupNumber)\n                    ? {\n                        borderLeftWidth: 5,\n                        borderLeftColor: GROUP_COLORS[slot.groupNumber % 20],\n                        paddingLeft: 4,\n                      }\n                    : undefined\n                }\n                disabled={!!load?.hasLanded}\n                onPress={() => {\n                  if (slot.dropzoneUser?.id === currentUser?.id) {\n                    if (canEditSelf) {\n                      if (slotGroup?.length) {\n                        onSlotGroupPress(slotGroup);\n                      } else {\n                        onSlotPress(slot);\n                      }\n                    }\n                  } else if (canEditOthers) {\n                    if (slotGroup?.length) {\n                      onSlotGroupPress(slotGroup);\n                    } else {\n                      onSlotPress(slot);\n                    }\n                  }\n                }}\n                pointerEvents=\"none\"\n              >\n                <DataTable.Cell style={styles.avatarCell}>\n                  <UserAvatar\n                    size={20}\n                    name={\n                      slot?.dropzoneUser?.user?.nickname || slot?.dropzoneUser?.user?.name || ''\n                    }\n                    image={slot?.dropzoneUser?.user?.image}\n                    style={{ marginLeft: -12 }}\n                  />\n                </DataTable.Cell>\n                <DataTable.Cell style={styles.nameCell}>\n                  <Paragraph style={styles.slotText}>\n                    {slot?.dropzoneUser?.user?.nickname\n                      ? slot?.dropzoneUser?.user?.nickname\n                      : slot?.dropzoneUser?.user?.name}\n                  </Paragraph>\n\n                  {slot?.dropzoneUser?.user?.nickname ? (\n                    <Caption>{`(${slot?.dropzoneUser?.user?.name})`}</Caption>\n                  ) : null}\n                </DataTable.Cell>\n                {fields?.includes(SlotFields.License) ? (\n                  <DataTable.Cell numeric style={styles.licenseCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.dropzoneUser?.license?.name}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.Rig) ? (\n                  <DataTable.Cell numeric style={styles.rigCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.rig\n                        ? `${slot.rig.make} ${slot.rig.model} w/ ${slot.rig.canopySize}`\n                        : null}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.WingLoading) ? (\n                  <DataTable.Cell numeric style={styles.wingLoadingCell}>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.wingLoading?.toFixed(2) || '-'}\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {!fields || fields.includes(SlotFields.JumpType) ? (\n                  <DataTable.Cell numeric style={styles.jumpTypeCell}>\n                    <Paragraph style={styles.slotText}>{slot?.jumpType?.name}</Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {fields?.includes(SlotFields.TicketType) ? (\n                  <DataTable.Cell numeric style={styles.ticketCell}>\n                    <Paragraph style={styles.slotText}>{slot?.ticketType?.name}</Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n                {!fields || fields.includes(SlotFields.Altitude) ? (\n                  <DataTable.Cell numeric style={styles.altitudeCell}>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                ) : null}\n              </DataTable.Row>\n\n              {slot?.ticketType?.isTandem && (\n                <DataTable.Row\n                  testID=\"slot-row\"\n                  disabled={!!load?.hasLanded}\n                  pointerEvents=\"none\"\n                  style={\n                    isNumber(slot?.groupNumber)\n                      ? {\n                          borderLeftWidth: 5,\n                          borderLeftColor: GROUP_COLORS[slot.groupNumber % 20],\n                          paddingLeft: 4,\n                        }\n                      : undefined\n                  }\n                >\n                  <DataTable.Cell style={styles.avatarCell}>\n                    <Avatar.Icon icon=\"parachute\" size={20} />\n                  </DataTable.Cell>\n                  <DataTable.Cell style={styles.tandemPassengerNameCell}>\n                    <Paragraph style={styles.slotText}>\n                      <Text style={{ fontWeight: 'bold' }}>Tandem Passenger:</Text>{' '}\n                      {slot?.passengerName}\n                    </Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric style={styles.altitudeCell}>\n                    <Paragraph style={styles.slotText}>\n                      {(slot?.ticketType?.altitude || 14000) / 1000}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                </DataTable.Row>\n              )}\n            </SwipeActions>\n          </View>\n        )}\n      </DraggableWrapper>\n    </DroppableSlot>\n  );\n}\n\nexport const styles = StyleSheet.create({\n  slotText: {\n    fontSize: 12,\n    alignSelf: 'center',\n    height: 24,\n    textAlignVertical: 'center',\n  },\n  avatarCell: {\n    flex: 1,\n  },\n  licenseCell: {\n    flex: 3,\n  },\n  rigCell: {\n    flex: 3,\n  },\n  wingLoadingCell: {\n    flex: 3,\n  },\n  jumpTypeCell: {\n    flex: 3,\n  },\n  altitudeCell: {\n    flex: 3,\n  },\n  nameCell: {\n    flex: 6,\n  },\n  tandemPassengerNameCell: {\n    flexGrow: 20,\n  },\n  tandemInfoCell: {\n    flex: 1,\n  },\n  ticketCell: {\n    flex: 3,\n  },\n});\n","import * as React from 'react';\nimport { useDraggable } from '@dnd-kit/core';\nimport { View } from 'react-native';\nimport { useManifestContext } from 'app/providers/manifest';\nimport type { ISlotUserRowProps } from '../UserRow';\n\ninterface IDraggableSlot {\n  rowProps: ISlotUserRowProps;\n  children(opts: { isDragging?: boolean }): JSX.Element;\n}\nexport default function DraggableRow(props: IDraggableSlot) {\n  const { children, rowProps } = props;\n  const {\n    manifest: { permissions },\n  } = useManifestContext();\n  const { setNodeRef, listeners, attributes, isDragging } = useDraggable({\n    id: rowProps.slot?.id,\n    disabled: !permissions.canUpdateSlot,\n    data: {\n      slotId: rowProps.slot?.id,\n      loadId: rowProps.load?.id,\n      props: rowProps,\n    },\n  });\n  return (\n    <div ref={setNodeRef} {...attributes} {...listeners} className=\"draggable-wrapper\">\n      <View pointerEvents=\"box-none\">{children?.({ isDragging })}</View>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useDroppable } from '@dnd-kit/core';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\nexport default function DroppableSlot(\n  props: React.PropsWithChildren<{ rowIndex: number; loadId: string; slotId?: string }>\n) {\n  const { rowIndex, loadId, slotId, children } = props;\n  const { setNodeRef, isOver, active } = useDroppable({\n    id: `load-${loadId}-row-${rowIndex}`,\n    data: {\n      slotId,\n      loadId,\n    },\n  });\n  const theme = useAppSelector((root) => root.global.theme);\n\n  const style: StyleProp<ViewStyle> = React.useMemo(\n    () => ({\n      backgroundColor:\n        isOver && active?.data?.current?.props?.load?.id !== loadId\n          ? theme.colors.primary\n          : undefined,\n      opacity: isOver ? 0.5 : undefined,\n    }),\n    [active?.data, isOver, loadId, theme.colors.primary]\n  );\n\n  return (\n    <div ref={setNodeRef} className=\"droppable-wrapper\">\n      <View {...{ style }}>{children}</View>\n    </div>\n  );\n}\n","import { hsl } from 'color';\n\nexport function generateColor() {\n  return hsl(360 * Math.random(), 25 + 70 * Math.random(), 85 + 10 * Math.random())\n    .rgb()\n    .toString();\n}\n","import * as React from 'react';\nimport { GROUP_COLORS } from 'app/components/slots_table/UserRow';\nimport { TouchableOpacity, View, StyleSheet } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { sortedUniq } from 'lodash';\n\ninterface IGroupPickerProps {\n  value?: number | null;\n  availableGroups: number[];\n  onChange(group: number | null): void;\n}\nexport default function GroupPicker(props: IGroupPickerProps) {\n  const { value, onChange, availableGroups } = props;\n  const createChangeHandler = React.useCallback(\n    (groupNumber: number | null) => () => onChange(groupNumber),\n    [onChange]\n  );\n  return (\n    <View style={styles.row}>\n      {sortedUniq(availableGroups)\n        .sort()\n        ?.map((groupNumber) => (\n          <TouchableOpacity onPress={createChangeHandler(groupNumber)}>\n            <Avatar.Text\n              label={`${groupNumber}`}\n              size={20}\n              style={[\n                value === groupNumber ? styles.selected : undefined,\n                { backgroundColor: GROUP_COLORS[groupNumber] },\n              ]}\n            />\n          </TouchableOpacity>\n        ))}\n      <TouchableOpacity onPress={createChangeHandler(null)}>\n        <Avatar.Icon\n          icon=\"plus\"\n          size={20}\n          style={[value === null ? styles.selected : undefined, { backgroundColor: '#FAFAFA' }]}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    padding: 16,\n    gap: 4,\n  },\n  selected: {\n    borderWidth: StyleSheet.hairlineWidth,\n  },\n});\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, View } from 'react-native';\nimport { HelperText, Divider, Chip, List } from 'react-native-paper';\nimport { uniqBy } from 'lodash';\nimport { useAllowedJumpTypesQuery } from 'app/api/reflection';\n\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport useRestriction from 'app/hooks/useRestriction';\nimport { JumpType, Permission, TicketType } from 'app/api/schema.d';\nimport { RigEssentialsFragment, TicketTypeExtraEssentialsFragment } from 'app/api/operations';\nimport ChipSelect from '../../input/chip_select/ChipSelect';\n\nimport UserRigCard from './UserRigCard';\nimport { SlotUserWithRig } from './slice';\nimport GroupPicker from './GroupPicker';\n\ninterface IUserCardProps {\n  slotUser: SlotUserWithRig;\n}\n\nfunction UserCard(props: IUserCardProps) {\n  const { slotUser } = props;\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const dispatch = useAppDispatch();\n\n  const isTandem = !!state.fields.ticketType.value?.isTandem;\n\n  const onChangeExitWeight = React.useCallback(\n    (exitWeight: number) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, exitWeight } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n\n  const onRemove = React.useCallback(\n    () =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.filter((user) => user.id !== slotUser.id),\n        ])\n      ),\n    [dispatch, slotUser.id, state.fields.users.value]\n  );\n\n  const onChangeRig = React.useCallback(\n    (newRig: RigEssentialsFragment) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, rigId: Number(newRig.id), rig: newRig } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n\n  const onChangePassengerName = React.useCallback(\n    (passengerName: string) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, passengerName } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n  const onChangePassengerWeight = React.useCallback(\n    (passengerExitWeight: number) =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'users',\n          state.fields.users.value?.map((user) =>\n            user.id === slotUser.id ? { ...slotUser, passengerExitWeight } : user\n          ),\n        ])\n      ),\n    [dispatch, slotUser, state.fields.users.value]\n  );\n  return (\n    <UserRigCard\n      key={`user-rig-card-${slotUser.id}`}\n      dropzoneUserId={slotUser.id?.toString()}\n      selectedRig={slotUser.rig || undefined}\n      exitWeight={slotUser.exitWeight}\n      {...{\n        onChangeExitWeight,\n        onRemove,\n        onChangeRig,\n        onChangePassengerName,\n        onChangePassengerWeight,\n      }}\n      {...{ isTandem }}\n      passengerName={slotUser.passengerName}\n      passengerWeight={slotUser.passengerExitWeight}\n    />\n  );\n}\nexport default function ManifestGroupForm() {\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const globalState = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const canManifestOthers = useRestriction(Permission.CreateUserSlot);\n  const { data } = useAllowedJumpTypesQuery({\n    variables: {\n      allowedForDropzoneUserIds: state.fields.users?.value?.map(\n        (slotUser) => slotUser.id\n      ) as number[],\n      isPublic: canManifestOthers ? null : true,\n      dropzoneId: globalState.currentDropzoneId?.toString() as string,\n    },\n    onError: console.error,\n  });\n\n  const jumpTypes = React.useMemo(\n    () =>\n      uniqBy(\n        [...(data?.dropzone?.allowedJumpTypes || []), ...(data?.jumpTypes || [])],\n        ({ id }) => id\n      ) || [],\n    [data]\n  );\n\n  const createToggleTicketAddonHandler = React.useCallback(\n    (extra: TicketTypeExtraEssentialsFragment) => () =>\n      dispatch(\n        actions.forms.manifestGroup.setField([\n          'extras',\n          state?.fields?.extras.value?.some(({ id }) => id === extra.id)\n            ? state?.fields?.extras.value?.filter(({ id }) => id !== extra.id)\n            : [...(state?.fields?.extras?.value || []), extra],\n        ])\n      ),\n    [dispatch, state?.fields?.extras.value]\n  );\n  return (\n    <>\n      <View style={{ paddingHorizontal: 8 }} key=\"manifest-group-config\">\n        <List.Subheader>Jump type</List.Subheader>\n        <ChipSelect\n          autoSelectFirst\n          items={jumpTypes}\n          value={state.fields.jumpType.value ? [state.fields.jumpType.value] : []}\n          renderItemLabel={(jumpType: JumpType) => jumpType.name}\n          isDisabled={(jumpType: JumpType) =>\n            !data?.dropzone?.allowedJumpTypes?.map(({ id }) => id).includes(jumpType.id)\n          }\n          onChange={([firstUser]) =>\n            dispatch(actions.forms.manifestGroup.setField(['jumpType', firstUser as JumpType]))\n          }\n        />\n\n        <HelperText type={state.fields.jumpType.error ? 'error' : 'info'}>\n          {state.fields.jumpType.error || ''}\n        </HelperText>\n\n        <List.Subheader>Ticket</List.Subheader>\n        <ChipSelect\n          autoSelectFirst\n          items={data?.dropzone?.ticketTypes || []}\n          value={state.fields.ticketType.value ? [state.fields.ticketType.value] : []}\n          renderItemLabel={(ticketType: TicketType) => ticketType.name}\n          onChange={([firstUser]) =>\n            dispatch(actions.forms.manifestGroup.setField(['ticketType', firstUser as TicketType]))\n          }\n        />\n        <HelperText type={state.fields.ticketType.error ? 'error' : 'info'}>\n          {state.fields.ticketType.error || ''}\n        </HelperText>\n        {!state?.fields?.ticketType?.value?.extras?.length ? null : (\n          <List.Subheader>Ticket addons</List.Subheader>\n        )}\n        <ScrollView horizontal style={styles.ticketAddons}>\n          {state?.fields?.ticketType?.value?.extras?.map((extra) => (\n            <Chip\n              key={`addon-${extra?.id}`}\n              selected={state?.fields?.extras.value?.some(({ id }) => id === extra.id)}\n              onPress={createToggleTicketAddonHandler(extra as TicketTypeExtraEssentialsFragment)}\n            >\n              {`${extra.name} ($${extra.cost})`}\n            </Chip>\n          ))}\n        </ScrollView>\n        <HelperText type={state.fields.extras.error ? 'error' : 'info'}>\n          {state.fields.extras.error || ''}\n        </HelperText>\n      </View>\n\n      <Divider />\n\n      <View\n        style={{ paddingHorizontal: 0, paddingTop: 16, flexGrow: 1 }}\n        key=\"manifest-group-users\"\n      >\n        <List.Subheader style={styles.label}>\n          Group\n          <GroupPicker\n            value={state?.fields?.groupNumber?.value || null}\n            availableGroups={\n              state?.fields?.load?.value?.slots?.map(({ groupNumber }) => groupNumber) || []\n            }\n            onChange={(groupNumber) =>\n              dispatch(actions.forms.manifestGroup.setField(['groupNumber', groupNumber]))\n            }\n          />\n        </List.Subheader>\n        {state.fields?.users?.value?.map((slotUser) => (\n          <UserCard {...{ slotUser }} key={`manifest-${slotUser.id}`} />\n        ))}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n  },\n  field: {\n    marginBottom: 8,\n  },\n  label: { justifyContent: 'space-between' },\n  ticketAddons: {\n    marginBottom: 8,\n  },\n});\n","import { AppBar, Fade, LinearProgress, Toolbar } from '@mui/material';\nimport { DropzoneUserProfileFragment } from 'app/api/operations';\nimport { useManifestGroupMutation, useDropzoneUserProfileLazyQuery } from 'app/api/reflection';\nimport DropzoneUserAutocomplete from 'app/components/autocomplete/DropzoneUserAutocomplete.web';\nimport DialogOrSheet from 'app/components/layout/DialogOrSheet';\nimport { useNotifications } from 'app/providers/notifications';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport ManifestGroupForm from '../../forms/manifest_group/ManifestGroupForm';\n\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n}\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const { open, onClose } = props;\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((root) => root.forms.manifestGroup);\n  const [mutationCreateSlots, mutationData] = useManifestGroupMutation();\n\n  const validate = React.useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError(['jumpType', 'You must specify the type of jump'])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        actions.forms.manifestGroup.setFieldError([\n          'ticketType',\n          'You must select a ticket type to manifest',\n        ])\n      );\n    }\n\n    return !hasErrors;\n  }, [dispatch, state.fields.jumpType.value?.id, state.fields.ticketType.value?.id]);\n\n  const onManifest = React.useCallback(async () => {\n    if (!validate() || !state.fields.users.value?.length) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlots({\n        variables: {\n          jumpType: state.fields.jumpType.value?.id,\n          ticketType: state.fields.ticketType.value?.id,\n          groupNumber: state.fields?.groupNumber?.value || null,\n          extras: state.fields.extras?.value?.map(({ id }) => id),\n          load: state.fields.load.value?.id,\n          userGroup: state.fields.users.value?.map(\n            ({ id, exitWeight, rigId, rig, passengerName, passengerExitWeight }) => ({\n              id,\n              rig: rigId?.toString() || rig?.id || undefined,\n              exitWeight,\n              passengerName,\n              passengerExitWeight,\n            })\n          ),\n        },\n      });\n\n      result.data?.createSlots?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case 'jump_type':\n          case 'jump_type_id':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['jumpType', message]));\n          case 'load':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['load', message]));\n          case 'credits':\n          case 'extras':\n          case 'extra_ids':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['extras', message]));\n          case 'ticket_type':\n            return dispatch(actions.forms.manifestGroup.setFieldError(['ticketType', message]));\n          default:\n            return null;\n        }\n      });\n      if (result?.data?.createSlots?.errors?.length) {\n        notify.error(result?.data?.createSlots?.errors[0]);\n        return;\n      }\n      if (!result.data?.createSlots?.fieldErrors?.length) {\n        onClose();\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    validate,\n    state.fields.users.value,\n    state.fields.jumpType.value?.id,\n    state.fields.ticketType.value?.id,\n    state.fields?.groupNumber?.value,\n    state.fields.extras?.value,\n    state.fields.load.value?.id,\n    mutationCreateSlots,\n    dispatch,\n    notify,\n    onClose,\n  ]);\n\n  // dispatch(actions.forms.manifestGroup.setDropzoneUsers(screens.manifest.selectedUsers));\n\n  const [fetchProfile, { loading }] = useDropzoneUserProfileLazyQuery();\n  const onSelectUser = React.useCallback(\n    (profile: DropzoneUserProfileFragment) => {\n      dispatch(actions.forms.manifestGroup.setDropzoneUsers([profile]));\n    },\n    [dispatch]\n  );\n  return (\n    <DialogOrSheet\n      // eslint-disable-next-line max-len\n      loading={mutationData.loading}\n      {...{ open }}\n      disablePadding\n      buttonLabel=\"Manifest\"\n      onClose={() => {\n        dispatch(actions.forms.manifestGroup.reset());\n        onClose();\n      }}\n      buttonAction={onManifest}\n      scrollable={false}\n    >\n      <View style={styles.wrapper} testID=\"manifest-group-sheet\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <DropzoneUserAutocomplete\n              color=\"white\"\n              placeholder=\"Search skydivers...\"\n              onChange={(user) => {\n                fetchProfile({\n                  variables: {\n                    id: user.id,\n                  },\n                }).then((result) => {\n                  if (result.data?.dropzoneUser) {\n                    onSelectUser(result.data?.dropzoneUser);\n                  }\n                });\n              }}\n            />\n          </Toolbar>\n        </AppBar>\n        <Fade in={loading || mutationData.loading}>\n          <LinearProgress variant=\"indeterminate\" />\n        </Fade>\n        <ScrollView testID=\"scroll-area\">\n          <ManifestGroupForm />\n        </ScrollView>\n      </View>\n    </DialogOrSheet>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: { height: '100%' },\n  button: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 5,\n    paddingTop: 0,\n  },\n  buttonContainer: {\n    paddingHorizontal: 16,\n    backgroundColor: 'white',\n  },\n  contentContainer: {\n    paddingHorizontal: 16,\n    paddingBottom: 32,\n  },\n  userListContainer: {\n    height: 'calc(100% - 200px)',\n    backgroundColor: 'white',\n    width: '100%',\n    padding: 16,\n  },\n  sheet: {\n    elevation: 3,\n    backgroundColor: 'white',\n    flexGrow: 1,\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingBottom: 32,\n  },\n  sheetHeader: {\n    elevation: 2,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n    height: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -4,\n    },\n    backgroundColor: 'white',\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n  },\n});\n","import * as React from 'react';\nimport { FAB, Portal, useTheme } from 'react-native-paper';\nimport { LoadDetailsFragment } from 'app/api/operations';\n\nimport { useDropzoneContext, useLoadContext, useManifestContext } from 'app/providers';\n\nimport { Permission, LoadState } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch } from 'app/state';\nimport isSameDay from 'date-fns/isSameDay';\nimport { parseISO } from 'date-fns';\n\ninterface ILoadActionButtonProps {\n  load: LoadDetailsFragment;\n}\n\nexport default function ActionButton(props: ILoadActionButtonProps) {\n  const dispatch = useAppDispatch();\n  const { dialogs } = useManifestContext();\n  const {\n    dialogs: { timepicker },\n    load: { cancel, markAsLanded, updateLoadState, createAircraftDispatchAction },\n  } = useLoadContext();\n  const [isExpanded, setExpanded] = React.useState(false);\n\n  const { load } = props;\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const theme = useTheme();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const isOpen = [LoadState.Open, LoadState.BoardingCall].includes(load.state);\n  const isFull = (load?.slots?.length || 0) >= (load?.maxSlots || load?.plane?.maxSlots || 0);\n  const showManifestButton =\n    isOpen &&\n    !isFull &&\n    canManifestSelf &&\n    !load?.slots?.some((slot) => slot.dropzoneUser?.id === currentUser?.id);\n\n  const showGroupIcon =\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    load?.state !== LoadState.Landed &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  const callActions = [\n    {\n      label: 'Custom call',\n      onPress: timepicker.open,\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '20 minute call',\n      onPress: createAircraftDispatchAction(20),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '15 minute call',\n      onPress: createAircraftDispatchAction(15),\n      icon: 'airplane-takeoff',\n    },\n    {\n      label: '10 minute call',\n      onPress: createAircraftDispatchAction(10),\n      icon: 'airplane-takeoff',\n    },\n  ];\n\n  const isToday = isSameDay(new Date(), parseISO(load.createdAt));\n\n  const manifestActions = [\n    !showManifestButton || !isToday\n      ? null\n      : {\n          label: 'Manifest me',\n          icon: 'account',\n          onPress: () => dialogs.manifestUser.open({ load, slot: { dropzoneUser: currentUser } }),\n        },\n    !showGroupIcon || !isToday\n      ? null\n      : {\n          label: 'Manifest group',\n          icon: 'account-group',\n          onPress: () => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n            if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n              // Automatically add current user to selection\n              dispatch(actions.screens.manifest.setSelected([currentUser]));\n              dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n            }\n\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          },\n        },\n  ].filter(Boolean);\n\n  const workflowActions = [\n    ![LoadState.BoardingCall].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel boarding call',\n          icon: 'airplane-off',\n          onPress: createAircraftDispatchAction(null),\n        },\n    ![LoadState.Open].includes(load.state)\n      ? null\n      : {\n          label: 'Cancel load',\n          icon: 'delete-sweep',\n          onPress: cancel,\n        },\n    ![LoadState.Cancelled, LoadState.Landed].includes(load.state) || !isToday\n      ? null\n      : {\n          label: 'Re-open load',\n          icon: 'undo',\n          onPress: () => updateLoadState(LoadState.Open),\n        },\n    ![LoadState.BoardingCall, LoadState.InFlight].includes(load.state)\n      ? null\n      : {\n          label: 'Mark as Landed',\n          icon: 'airplane-landing',\n          onPress: markAsLanded,\n        },\n  ].filter(Boolean);\n\n  const buttonActions = [\n    ...(isOpen ? manifestActions : []),\n    ...(canUpdateLoad && [LoadState.Open].includes(load?.state) && isToday ? callActions : []),\n    ...(canUpdateLoad ? workflowActions : []),\n  ];\n\n  return (\n    <Portal>\n      <FAB.Group\n        visible={!!buttonActions.length}\n        open={isExpanded}\n        icon={isExpanded ? 'close' : 'plus'}\n        fabStyle={{\n          marginLeft: 16,\n          marginBottom: 100,\n          backgroundColor: theme.colors.primary,\n        }}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        actions={buttonActions}\n        onStateChange={({ open }) => setExpanded(open)}\n      />\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport diff from 'date-fns/differenceInSeconds';\nimport secondsToMinutes from 'date-fns/secondsToMinutes';\n\nconst CountdownCircleTimer = Platform.select({\n  ios: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  android: React.lazy(() =>\n    import('react-native-countdown-circle-timer').then(\n      ({ CountdownCircleTimer: defaultExport }) => ({\n        default: defaultExport,\n      })\n    )\n  ),\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  web: React.lazy(() =>\n    import('react-countdown-circle-timer').then(({ CountdownCircleTimer: defaultExport }) => ({\n      default: defaultExport,\n    }))\n  ),\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n}) as React.ComponentType<any>;\n\ninterface ICountdownProps {\n  end: Date;\n  variant?: 'dark' | 'light';\n  size?: number;\n}\nexport default function Countdown(props: ICountdownProps) {\n  const { end, size, variant } = props;\n  const difference = diff(end, new Date());\n  const fractionFiveMinutes = 5 / difference;\n  const fractionTenMinutes = 10 / difference;\n  const fractionTwentyMinutes = 10 / difference;\n  return (\n    <CountdownCircleTimer\n      isPlaying={difference > 1}\n      duration={difference > 1 ? difference : 0}\n      colors={\n        difference > 0\n          ? [\n              [variant === 'light' ? '#FFFFFF' : '#004777', fractionTwentyMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#F7B801', fractionTenMinutes],\n              [variant === 'light' ? '#FFFFFF' : '#A30000', fractionFiveMinutes],\n            ]\n          : [[variant === 'light' ? '#FFFFFF' : '#A30000', 1]]\n      }\n      size={size || 50}\n      strokeWidth={2}\n    >\n      {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ({ remainingTime, animatedColor }) => {\n          const seconds = Math.round(remainingTime % 60);\n          const minutes = secondsToMinutes(remainingTime);\n          const formattedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n          const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n          return (\n            <Animated.Text style={{ color: animatedColor, fontSize: 16 }}>\n              {formattedMinutes}:{formattedSeconds}\n            </Animated.Text>\n          );\n        }\n      }\n    </CountdownCircleTimer>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, useWindowDimensions, View } from 'react-native';\nimport { Avatar, Paragraph, Title } from 'react-native-paper';\n\nimport isAfter from 'date-fns/isAfter';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { LoadEssentialsFragment } from 'app/api/operations';\nimport { useAppSelector } from 'app/state';\nimport { format } from 'date-fns/esm';\nimport parseISO from 'date-fns/parseISO';\nimport { DateTime } from 'luxon';\nimport Countdown from '../manifest/LoadCard/Countdown';\n\ninterface ILoadHeader {\n  load?: LoadEssentialsFragment;\n  children?: React.ReactNode;\n  renderBadges?: React.ComponentType<object>;\n}\nexport default function UserHeader(props: ILoadHeader) {\n  const { load, renderBadges: RenderBadges, children } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const { width } = useWindowDimensions();\n\n  return (\n    <LinearGradient\n      start={{ x: 0.0, y: 0.25 }}\n      end={{ x: 0.5, y: 1.0 }}\n      style={styles.container}\n      colors={[theme.colors.surface, theme.colors.surface]}\n    >\n      <View style={styles.avatarContainer}>\n        <View style={{ flex: 1 / 3, alignItems: 'center', justifyContent: 'center' }}>\n          {load?.dispatchAt && DateTime.fromSeconds(load.dispatchAt) > DateTime.local() ? (\n            <Countdown\n              end={new Date(load.dispatchAt * 1000)}\n              variant={theme.dark ? 'light' : 'dark'}\n              size={80}\n            />\n          ) : (\n            <Avatar.Icon\n              size={80}\n              icon=\"account-tie-hat\"\n              color={theme.dark ? theme.colors.text : palette.primary.dark}\n              style={{ backgroundColor: theme.dark ? palette.primary.dark : palette.primary.light }}\n            />\n          )}\n        </View>\n        <View style={styles.titleContainer}>\n          <Title style={styles.title}>Load #{load?.loadNumber}</Title>\n          <Paragraph style={styles.paragraph}>\n            {load?.createdAt && format(parseISO(load.createdAt), 'dd LLLL, yyyy')}\n          </Paragraph>\n          {RenderBadges && width > 600 ? (\n            <RenderBadges />\n          ) : (\n            <Paragraph style={styles.paragraph}>{load?.name}</Paragraph>\n          )}\n        </View>\n      </View>\n\n      {RenderBadges && width < 600 ? <RenderBadges /> : null}\n\n      {children}\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingTop: 16,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 8,\n    marginBottom: 32,\n    marginTop: 32,\n  },\n  titleContainer: {\n    paddingLeft: 8,\n    fontWeight: 'bold',\n    fontSize: 26,\n    flex: 2 / 3,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  title: {},\n  paragraph: {},\n});\n","import React from 'react';\nimport { DataTable } from 'react-native-paper';\nimport { useLoadContext, useManifestContext } from 'app/providers';\nimport { DropzoneUserEssentialsFragment } from 'app/api/operations';\nimport DropzoneUserAutocomplete from '../autocomplete/DropzoneUserAutocomplete.web';\nimport DroppableSlot from './DragAndDrop/DroppableSlot';\n\nexport interface IAvailableRowProps {\n  index: number;\n  onPress(): void;\n}\nexport default function AvailableRow(props: IAvailableRowProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { onPress, index } = props;\n  const {\n    load: { load },\n  } = useLoadContext();\n  const { dialogs } = useManifestContext();\n\n  const onSelectUser = React.useCallback(\n    (user: DropzoneUserEssentialsFragment) => {\n      if (load) {\n        dialogs.manifestUser.open({ load, slot: { dropzoneUser: user } });\n      }\n    },\n    [dialogs.manifestUser, load]\n  );\n\n  return (\n    <DroppableSlot loadId={load?.id?.toString() || '0'} rowIndex={index}>\n      <DataTable.Row testID=\"slot-row\" style={{ paddingTop: 8 }}>\n        <DropzoneUserAutocomplete\n          placeholder=\"- Available -\"\n          value={null}\n          onChange={onSelectUser}\n        />\n      </DataTable.Row>\n    </DroppableSlot>\n  );\n}\n","import { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { DataTable, Surface, Text } from 'react-native-paper';\nimport UserRow, { SlotFields, styles as rowStyles } from './UserRow';\nimport AvailableRow from './AvailableRow';\n\nexport interface ISlotsTableProps {\n  load?: LoadDetailsFragment | null;\n  loading?: boolean;\n  fields?: SlotFields[];\n  scrollable?: boolean;\n  onDeletePress(slot: SlotDetailsFragment): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n  onAvailableSlotPress(): void;\n}\nexport default function SlotsTable(props: ISlotsTableProps) {\n  const {\n    load,\n    fields,\n    onDeletePress,\n    scrollable = false,\n    onAvailableSlotPress,\n    onSlotGroupPress,\n    onSlotPress,\n  } = props;\n\n  console.log(fields);\n\n  return (\n    <Surface style={scrollable ? { height: '100%' } : undefined}>\n      <DataTable style={scrollable ? { height: '100%', paddingBottom: 80 } : undefined}>\n        <DataTable.Header style={{ width: '100%' }}>\n          <DataTable.Title style={rowStyles.avatarCell}>{null}</DataTable.Title>\n          <DataTable.Title style={rowStyles.nameCell}>\n            <Text style={styles.th}>Name</Text>\n          </DataTable.Title>\n          {fields?.includes(SlotFields.License) && (\n            <DataTable.Title numeric style={rowStyles.licenseCell}>\n              <Text style={styles.th}>License</Text>\n            </DataTable.Title>\n          )}\n          {fields?.includes(SlotFields.Rig) && (\n            <DataTable.Title numeric style={rowStyles.rigCell}>\n              <Text style={styles.th}>Equipment</Text>\n            </DataTable.Title>\n          )}\n          {fields?.includes(SlotFields.WingLoading) && (\n            <DataTable.Title numeric style={rowStyles.wingLoadingCell}>\n              <Text style={styles.th}>Wing Loading</Text>\n            </DataTable.Title>\n          )}\n          {!fields ||\n            (fields?.includes(SlotFields.JumpType) && (\n              <DataTable.Title numeric style={rowStyles.jumpTypeCell}>\n                <Text style={styles.th}>Jump type</Text>\n              </DataTable.Title>\n            ))}\n          {fields?.includes(SlotFields.TicketType) && (\n            <DataTable.Title numeric style={rowStyles.ticketCell}>\n              <Text style={styles.th}>Ticket</Text>\n            </DataTable.Title>\n          )}\n          {!fields ||\n            (fields?.includes(SlotFields.Altitude) && (\n              <DataTable.Title numeric style={rowStyles.altitudeCell}>\n                <Text style={styles.th}>Altitude</Text>\n              </DataTable.Title>\n            ))}\n        </DataTable.Header>\n        <FlatList\n          data={Array.from({ length: load?.maxSlots || 0 })?.map(\n            (_, index) => load?.slots?.[index] || null\n          )}\n          keyExtractor={(item, index) => item?.id || `available-${index}`}\n          renderItem={({ item: slot, index }) =>\n            !slot || !load ? (\n              <AvailableRow\n                {...{ onPress: onAvailableSlotPress }}\n                // eslint-disable-next-line react/no-array-index-key\n                key={`slot-available-${index}`}\n                index={index}\n              />\n            ) : (\n              <UserRow\n                {...{ fields, slot, load, onDeletePress, onSlotGroupPress, onSlotPress, index }}\n                key={`slot-${slot.id}`}\n              />\n            )\n          }\n        />\n      </DataTable>\n    </Surface>\n  );\n}\n\nconst styles = StyleSheet.create({\n  th: {\n    fontWeight: 'bold',\n  },\n});\n","import * as React from 'react';\nimport { LoadDetailsFragment, SlotDetailsFragment } from 'app/api/operations';\nimport LoadSlotTable, { ISlotsTableProps } from 'app/components/slots_table/Table';\nimport { SlotFields } from 'app/components/slots_table/UserRow';\nimport { useWindowDimensions } from 'react-native';\n\ninterface ITableViewProps extends Omit<ISlotsTableProps, 'load'> {\n  load?: LoadDetailsFragment | null;\n  loading: boolean;\n  refetch(): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n}\n\nexport default function LoadTableView(props: ITableViewProps) {\n  const { load, loading, onAvailableSlotPress, onDeletePress, onSlotGroupPress, onSlotPress } =\n    props;\n  const { width } = useWindowDimensions();\n  const numFields = Math.floor(width / 200);\n\n  console.log({ width, numFields, load });\n\n  return (\n    <LoadSlotTable\n      fields={\n        [\n          SlotFields.Altitude,\n          SlotFields.JumpType,\n          numFields > 2 ? SlotFields.License : null,\n          numFields > 3 ? SlotFields.TicketType : null,\n          numFields > 4 ? SlotFields.WingLoading : null,\n          numFields > 5 ? SlotFields.Rig : null,\n        ].filter(Boolean) as SlotFields[]\n      }\n      {...{\n        load,\n        loading,\n        onAvailableSlotPress,\n        onDeletePress,\n        onSlotGroupPress,\n        onSlotPress,\n      }}\n    />\n  );\n}\n","import * as React from 'react';\nimport { FlatList, Platform } from 'react-native';\n\nimport { RouteProp, useIsFocused, useRoute } from '@react-navigation/core';\nimport { SlotDetailsFragment } from 'app/api/operations';\nimport {\n  LoadContextProvider,\n  useLoadContext,\n  useManifestContext,\n  useDropzoneContext,\n} from 'app/providers';\nimport GCAChip from 'app/components/chips/GcaChip';\nimport LoadMasterChip from 'app/components/chips/LoadMasterChip';\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\nimport ManifestGroupSheet from 'app/components/dialogs/ManifestGroup/ManifestGroup';\n\nimport { View } from 'app/components/Themed';\nimport { LoadState, Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Divider } from 'react-native-paper';\nimport { useNotifications } from 'app/providers/notifications';\nimport { Screen } from 'app/components/layout';\nimport ActionButton from './ActionButton';\nimport Header from './Header';\nimport InfoGrid from './InfoGrid';\n// import CardView from './views/CardView';\nimport TableView from './views/TableView';\n\nexport type LoadScreenRoute = {\n  LoadScreen: {\n    loadId: string;\n  };\n};\n/**\n *\n *\n * @returns\n */\nfunction LoadScreen() {\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const forms = useAppSelector((root) => root.forms);\n  const { palette, theme } = useAppSelector((root) => root.global);\n\n  const {\n    manifest: { deleteSlot },\n  } = useManifestContext();\n  const {\n    load: { load, loading, refetch, updateGCA, updateLoadMaster, updatePilot, updatePlane },\n  } = useLoadContext();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5 && !isExpanded) {\n      setExpanded(true);\n    }\n  }, [isExpanded, load?.maxSlots]);\n\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n  const canEditSelf = useRestriction(Permission.UpdateSlot);\n  const canEditOthers = useRestriction(Permission.UpdateUserSlot);\n  const maxSlots = load?.maxSlots || 0;\n  const occupiedSlots = load?.occupiedSlots || 0;\n  const notify = useNotifications();\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: SlotDetailsFragment) => {\n      const response = await deleteSlot({\n        id: Number(slot.id),\n      });\n\n      if ('error' in response && response.error) {\n        notify.error(\n          response?.error ||\n            `${slot.dropzoneUser?.user?.name} could not be taken off load #${load?.loadNumber}`\n        );\n      } else if ('slot' in response && slot?.id) {\n        notify.error(\n          `${response.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n            load?.loadNumber\n          }`\n        );\n      }\n    },\n    [deleteSlot, load?.loadNumber, notify]\n  );\n\n  const onSlotPress = React.useCallback(\n    (slot: SlotDetailsFragment) => {\n      const slotGroup = load?.slots?.filter(\n        ({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber\n      );\n      const onSlotGroupPress = () => {\n        if (slotGroup && load) {\n          dispatch(actions.forms.manifestGroup.reset());\n          dispatch(actions.forms.manifestGroup.setOpen(true));\n          dispatch(\n            actions.forms.manifestGroup.setFromSlots({\n              slots: slotGroup?.length ? slotGroup : [slot],\n              load,\n            })\n          );\n          dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n          // FIXME: Open ManifestGroup Drawer\n        }\n      };\n      const onSlotSinglePress = () => {\n        dispatch(actions.forms.manifest.setOpen(slot));\n        dispatch(actions.forms.manifest.setField(['load', load]));\n      };\n\n      if ((canEditSelf && slot.dropzoneUser?.id === currentUser?.id) || canEditOthers) {\n        if (canEditSelf) {\n          if (slotGroup?.length || Platform.OS === 'web') {\n            onSlotGroupPress();\n          } else {\n            onSlotSinglePress();\n          }\n        }\n      }\n    },\n    [canEditOthers, canEditSelf, currentUser?.id, dispatch, load]\n  );\n\n  const onSlotGroupPress = React.useCallback(\n    (slotGroup: SlotDetailsFragment[]) => {\n      if (load) {\n        dispatch(actions.forms.manifestGroup.reset());\n        dispatch(actions.forms.manifestGroup.setOpen(true));\n        dispatch(\n          actions.forms.manifestGroup.setFromSlots({\n            slots: slotGroup,\n            load,\n          })\n        );\n        dispatch(actions.forms.manifestGroup.setField(['load', load]));\n      }\n    },\n    [dispatch, load]\n  );\n\n  const onAvailableSlotPress = React.useCallback(() => {\n    dispatch(actions.forms.manifestGroup.reset());\n    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n    if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n      // Automatically add current user to selection\n      dispatch(actions.screens.manifest.setSelected([currentUser]));\n      dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n    }\n\n    dispatch(actions.forms.manifestGroup.setOpen(true));\n    dispatch(actions.forms.manifestGroup.setField(['load', load]));\n  }, [canManifestGroup, canManifestGroupWithSelfOnly, currentUser, dispatch, load]);\n\n  return (\n    <Screen fullWidth scrollable={Platform.OS !== 'web'}>\n      <Header\n        load={load || undefined}\n        renderBadges={() => (\n          <FlatList\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            style={{ marginVertical: 8 }}\n            data={['plane', 'pilot', 'gca', 'loadMaster']}\n            keyExtractor={(item) => item.toString()}\n            renderItem={({ item }) => {\n              switch (item) {\n                case 'plane':\n                  return (\n                    <PlaneChip\n                      value={load?.plane}\n                      onSelect={async (plane) => {\n                        if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                          const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                          notify.info(\n                            `You need to take ${diff} people off the load to fit on this plane`\n                          );\n                        } else {\n                          await updatePlane(plane);\n                          refetch();\n                        }\n                      }}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                case 'gca':\n                  return (\n                    <GCAChip\n                      value={load?.gca}\n                      onSelect={updateGCA}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                case 'pilot':\n                  return (\n                    <PilotChip\n                      value={load?.pilot}\n                      onSelect={updatePilot}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n                default:\n                  return (\n                    <LoadMasterChip\n                      value={load?.loadMaster}\n                      slots={load?.slots || []}\n                      onSelect={updateLoadMaster}\n                      small\n                      backgroundColor=\"transparent\"\n                      color={palette.onSurface}\n                    />\n                  );\n              }\n            }}\n          />\n        )}\n      >\n        <InfoGrid\n          items={[\n            {\n              title: 'Status',\n              value: {\n                [LoadState.Open]: 'Open',\n                [LoadState.BoardingCall]: 'On call',\n                [LoadState.Cancelled]: 'Cancelled',\n                [LoadState.InFlight]: 'In air',\n                [LoadState.Landed]: 'Landed',\n              }[load?.state || LoadState.Open],\n            },\n            { title: 'Slots', value: `${occupiedSlots}/${maxSlots}` },\n            {\n              title: 'Weight',\n              value: `${load?.weight || 0}kg`,\n            },\n          ]}\n        />\n      </Header>\n      {/* <CardView {...{ load, loading, refetch, onSlotPress, onDeletePress: onDeleteSlot }} /> */}\n      <Divider />\n      <TableView\n        scrollable={Platform.OS === 'web'}\n        {...{\n          slots: load?.slots?.filter(Boolean) || [],\n          load,\n          loading,\n          refetch,\n          onSlotPress,\n          onDeletePress: onDeleteSlot,\n          onSlotGroupPress,\n          onAvailableSlotPress,\n        }}\n      />\n      {load && isFocused ? <ActionButton load={load} /> : null}\n      <ManifestGroupSheet\n        open={forms.manifestGroup.open}\n        onClose={() => {\n          dispatch(actions.forms.manifestGroup.setOpen(false));\n          dispatch(actions.forms.manifestGroup.reset());\n        }}\n        onSuccess={() => dispatch(actions.forms.manifestGroup.setOpen(false))}\n      />\n    </Screen>\n  );\n}\n\nexport default function LoadScreenWrapper() {\n  const route = useRoute<RouteProp<LoadScreenRoute>>();\n  const loadId = route?.params?.loadId;\n\n  return (\n    <LoadContextProvider id={loadId}>\n      <LoadScreen />\n    </LoadContextProvider>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { Avatar } from 'react-native-paper';\nimport { PaginationProps } from 'react-native-swiper-flatlist';\nimport { successColor } from '../../constants/Colors';\n\ninterface IWizardPagination extends PaginationProps {\n  icons?: string[];\n}\nexport default function WizardPagination(props: IWizardPagination) {\n  const { size, paginationIndex, icons } = props;\n\n  const { width } = Dimensions.get('window');\n  const screenWidth = width > 500 ? 500 : width;\n\n  const bridgeLength = (screenWidth - 48 * 2 - size * 30) / size;\n\n  return (\n    <View style={styles.pagination}>\n      {Array.from({ length: size }).map((_, index) => {\n        const hasCustomIcon = icons && icons.length > index;\n        const isPast = index < (paginationIndex || 0);\n        const isCurrent = index === paginationIndex;\n        let defaultIcon = isPast ? 'check' : '';\n        defaultIcon = isCurrent ? 'pencil' : defaultIcon;\n\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={index}>\n            <Avatar.Icon\n              icon={hasCustomIcon && icons ? icons[index] : defaultIcon}\n              size={30}\n              style={[styles.icon, (paginationIndex || 0) > index ? styles.iconDone : undefined]}\n            />\n            {size - 1 > index ? (\n              <View\n                style={[\n                  styles.bridge,\n                  { width: bridgeLength },\n                  (paginationIndex || 0) > index ? styles.bridgeDone : undefined,\n                ]}\n              />\n            ) : null}\n          </React.Fragment>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  pagination: {\n    flexDirection: 'row',\n    position: 'absolute',\n    top: 100,\n    alignSelf: 'center',\n  },\n  bridge: {\n    height: 10,\n    marginTop: 10,\n    marginLeft: -2,\n    width: 50,\n    backgroundColor: 'white',\n  },\n  bridgeDone: {\n    backgroundColor: successColor,\n  },\n  icon: {\n    backgroundColor: 'white',\n    marginLeft: -1,\n  },\n  iconDone: {\n    backgroundColor: successColor,\n    marginLeft: -1,\n  },\n});\n","import * as React from 'react';\nimport { Dimensions, StyleSheet, View } from 'react-native';\nimport { SwiperFlatList } from 'react-native-swiper-flatlist';\nimport WizardPagination from './Pagination';\n\ninterface IWizardProps {\n  children: React.ReactNode;\n\n  icons?: string[];\n}\n\ninterface IWizardContext {\n  count: number;\n  index: number;\n  setIndex(idx: number): void;\n}\n\nexport const WizardContext = React.createContext<IWizardContext>({\n  index: 0,\n  count: 0,\n  setIndex: () => null,\n} as IWizardContext);\n\nfunction Wizard(props: IWizardProps) {\n  const { children, icons } = props;\n  const [index, setIndex] = React.useState(0);\n  const ref = React.useRef<SwiperFlatList>(null);\n  const count = React.Children.count(children);\n\n  const value = React.useMemo(\n    () => ({\n      index,\n      count,\n      setIndex: (idx: number) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref.current?.scrollToIndex({ index: idx, animated: true });\n      },\n    }),\n    [count, index]\n  );\n\n  return (\n    <WizardContext.Provider value={value}>\n      <View style={[styles.container]}>\n        <SwiperFlatList\n          showPagination\n          index={index}\n          PaginationComponent={(wizardProps) => <WizardPagination {...wizardProps} icons={icons} />}\n          numColumns={1}\n          scrollEnabled={false}\n          autoplay={false}\n          ref={ref}\n          onChangeIndex={({ index: idx, prevIndex }) => {\n            setIndex(idx || 0);\n          }}\n        >\n          {children}\n        </SwiperFlatList>\n      </View>\n    </WizardContext.Provider>\n  );\n}\n\nconst { width } = Dimensions.get('window');\n\nconst styles = StyleSheet.create({\n  container: {\n    width,\n    flex: 1,\n    paddingBottom: 0,\n  },\n});\n\nexport default Wizard;\n","import * as React from 'react';\nimport { Dimensions, View, StyleSheet, ScrollViewProps } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Button, Title } from 'react-native-paper';\nimport { SafeAreaViewProps } from 'react-native-safe-area-context';\nimport ScrollableScreen from '../layout/ScrollableScreen';\nimport { WizardContext } from './Wizard';\n\nexport interface IWizardScreenProps extends SafeAreaViewProps {\n  title?: string;\n  loading?: boolean;\n  backButtonLabel?: string;\n  nextButtonLabel?: string;\n  containerStyle?: ScrollViewProps['style'];\n  contentStyle?: ScrollViewProps['contentContainerStyle'];\n  disableScroll?: boolean;\n\n  onBack(currentIndex: number, setIndex: (idx: number) => void): void;\n  onNext(currentIndex: number, setIndex: (idx: number) => void): void;\n}\nfunction WizardScreen(props: IWizardScreenProps) {\n  const {\n    children,\n    title,\n    loading,\n    onBack,\n    backButtonLabel,\n    nextButtonLabel,\n    onNext,\n    contentStyle,\n    containerStyle,\n    style,\n    disableScroll,\n  } = props;\n  const { width, height } = Dimensions.get('window');\n\n  const { index, setIndex } = React.useContext(WizardContext);\n\n  const scrollRef = React.useRef<ScrollView>();\n\n  React.useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({ y: 0, animated: false });\n      console.log('Scrolling ', title, ' to 0');\n    } else {\n      console.log('No ref');\n    }\n  }, [index, title]);\n\n  return (\n    <View style={StyleSheet.flatten([styles.wizardScreen, { width }, style])}>\n      <ScrollableScreen\n        style={[styles.container, containerStyle || {}, { width }]}\n        contentContainerStyle={StyleSheet.flatten([\n          styles.content,\n          { minHeight: height, backgroundColor: 'transparent' },\n          contentStyle,\n        ])}\n        scrollEnabled={!disableScroll}\n        pointerEvents=\"box-none\"\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ref={scrollRef}\n      >\n        <Title style={styles.title}>{title}</Title>\n        {children}\n\n        <View style={styles.buttons} pointerEvents=\"box-none\">\n          <Button\n            key={`button-next-${index}`}\n            loading={loading}\n            mode=\"contained\"\n            color=\"#FFFFFF\"\n            disabled={loading}\n            style={styles.button}\n            onPress={async () => {\n              onNext(index, setIndex);\n            }}\n          >\n            {nextButtonLabel}\n          </Button>\n\n          {!onBack ? null : (\n            <Button\n              key={`button-${index}`}\n              mode=\"text\"\n              disabled={loading}\n              color=\"#FFFFFF\"\n              style={styles.buttonBack}\n              onPress={async () => {\n                onBack(index, setIndex);\n              }}\n            >\n              {backButtonLabel}\n            </Button>\n          )}\n        </View>\n      </ScrollableScreen>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wizardScreen: {\n    justifyContent: 'center',\n  },\n  container: {\n    backgroundColor: '#FF1414',\n    paddingHorizontal: 32,\n    alignSelf: 'center',\n  },\n  content: { paddingTop: 200, flexGrow: 1, paddingBottom: 0 },\n  title: {\n    position: 'absolute',\n    top: 140,\n    marginBottom: 50,\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 100,\n  },\n});\n\nexport default WizardScreen;\n","import * as React from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { Avatar, Paragraph } from 'react-native-paper';\nimport { successColor } from '../../constants/Colors';\nimport WizardScreen, { IWizardScreenProps } from './WizardScreen';\n\ninterface IWizardCompleteStep extends IWizardScreenProps {\n  subtitle?: string;\n}\n\nfunction WizardCompleteStep(props: IWizardCompleteStep) {\n  const { title, subtitle, ...rest } = props;\n  return (\n    <WizardScreen style={styles.container} {...rest}>\n      <View style={styles.content}>\n        <Avatar.Icon icon=\"check\" size={150} style={styles.icon} />\n        <Text style={styles.title}>{title}</Text>\n        <Paragraph style={styles.subtitle}>{subtitle}</Paragraph>\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  subtitle: {\n    color: 'white',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 26,\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    alignSelf: 'center',\n  },\n  icon: {\n    marginVertical: 32,\n    backgroundColor: successColor,\n  },\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default WizardCompleteStep;\n","import gql from 'graphql-tag';\nimport { createMutation } from '../createMutation';\nimport { CreateWeatherConditionPayload, WeatherConditionInput } from '../schema.d';\n\nexport const MUTATION_CREATE_WEATHER_CONDITION = gql`\n  mutation CreateWeatherConditions(\n    $id: Int!\n    $dropzoneId: Int!\n    $winds: String\n    $temperature: Int\n    $jumpRun: Int\n    $exitSpotMiles: Int\n    $offsetMiles: Int\n    $offsetDirection: String\n  ) {\n    createWeatherCondition(\n      input: {\n        id: $id\n        attributes: {\n          dropzoneId: $dropzoneId\n          winds: $winds\n          temperature: $temperature\n          jumpRun: $jumpRun\n          exitSpotMiles: $exitSpotMiles\n          offsetMiles: $offsetMiles\n          offsetDirection: $offsetDirection\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      weatherCondition {\n        id\n        temperature\n        winds {\n          speed\n          altitude\n          direction\n        }\n        jumpRun\n        exitSpotMiles\n        offsetMiles\n        offsetDirection\n        createdAt\n      }\n    }\n  }\n`;\n\nexport default createMutation<\n  { id: number; dropzoneId: number } & WeatherConditionInput,\n  CreateWeatherConditionPayload\n>(MUTATION_CREATE_WEATHER_CONDITION, {\n  getPayload: (result) => result.createWeatherCondition,\n  validates: {},\n  fieldErrorMap: {},\n});\n","import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Text } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, List, Menu, TextInput, useTheme } from 'react-native-paper';\nimport { Wind } from '../../../api/schema.d';\n\nexport interface IWindRowProps extends Wind {\n  onChange(field: keyof Wind, value: number): void;\n}\nexport default function WindRow(props: IWindRowProps) {\n  const { speed, direction, altitude, onChange } = props;\n  const [altitudeMenuOpen, setAltitudeMenuOpen] = React.useState(false);\n  const [_speed, _setSpeed] = React.useState(speed);\n  const [_direction, _setDirection] = React.useState(direction);\n  const theme = useTheme();\n\n  return (\n    <Card style={styles.card} elevation={3}>\n      <Card.Content style={styles.row}>\n        <View style={styles.altitudeCard}>\n          <Menu\n            onDismiss={() => setAltitudeMenuOpen(false)}\n            visible={altitudeMenuOpen}\n            style={{ minWidth: 130 }}\n            anchor={\n              <TouchableOpacity\n                style={{\n                  flexGrow: 1,\n                  height: 60,\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n                onPress={() => setAltitudeMenuOpen(true)}\n              >\n                <List.Icon icon=\"arrow-up\" style={styles.icon} />\n                <Text style={[styles.altitudeOption, { color: theme.colors.onSurface }]}>\n                  {altitude?.toString()}\n                </Text>\n              </TouchableOpacity>\n            }\n          >\n            {[14000, 12000, 10000, 7000, 5000, 2000, 1000].map((alt) => (\n              <List.Item\n                key={alt}\n                onPress={() => {\n                  if (alt) {\n                    onChange('altitude', alt);\n                  }\n                  setAltitudeMenuOpen(false);\n                }}\n                title={alt.toString()}\n                left={() => <List.Icon style={styles.icon} icon=\"arrow-up\" />}\n              />\n            ))}\n          </Menu>\n        </View>\n\n        <View style={styles.strengthCard}>\n          <List.Icon icon=\"weather-windy\" style={styles.icon} />\n          <TextInput\n            value={_speed?.toString()}\n            onBlur={() => onChange('speed', Number(_speed))}\n            onChangeText={(newSpeed) => {\n              if (/\\d/.test(newSpeed)) {\n                const [numbers] = newSpeed.match(/\\d+/) || [_speed];\n                _setSpeed(numbers);\n              } else if (!newSpeed) {\n                _setSpeed('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n\n        <View style={styles.directionCard}>\n          <List.Icon icon=\"compass\" style={styles.icon} />\n          <TextInput\n            value={_direction?.toString()}\n            onBlur={() => onChange('direction', Number(_direction))}\n            onChangeText={(newDir) => {\n              if (/\\d/.test(newDir)) {\n                const [numbers] = newDir.match(/\\d+/) || [_direction];\n                _setDirection(numbers);\n              } else if (!newDir) {\n                _setDirection('');\n              }\n            }}\n            style={styles.textField}\n            keyboardType=\"numeric\"\n          />\n        </View>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst CARD_STYLE: ViewStyle = {\n  height: 60,\n  flexDirection: 'row',\n  width: 350 / 3,\n};\n\nconst styles = StyleSheet.create({\n  altitudeOption: {\n    minWidth: 50,\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlignVertical: 'center',\n    lineHeight: 20,\n    fontSize: 20,\n    alignSelf: 'center',\n  },\n  card: {\n    marginVertical: 8,\n    marginHorizontal: 18,\n    width: 350,\n    alignSelf: 'center',\n\n    borderRadius: 10,\n  },\n  icon: {\n    width: 20,\n  },\n  altitudeCard: {\n    ...CARD_STYLE,\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    overflow: 'hidden',\n  },\n  strengthCard: {\n    ...CARD_STYLE,\n  },\n  directionCard: {\n    ...CARD_STYLE,\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    overflow: 'hidden',\n  },\n  textField: {\n    flex: 1,\n    flexGrow: 1,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    width: '100%',\n    minWidth: 80,\n  },\n  row: {\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View, Text, KeyboardAvoidingView, TextInput, Platform } from 'react-native';\nimport { set } from 'lodash';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card, Divider, List, useTheme } from 'react-native-paper';\nimport WindRow from './WindRow';\nimport { actions, useAppDispatch, useAppSelector } from '../../../state';\nimport { Wind } from '../../../api/schema.d';\n\ninterface IWeatherConditionFormProps {\n  variant?: 'dark' | 'light';\n  onPressJumpRun?(): void;\n}\nexport default function WeatherConditionForm(props: IWeatherConditionFormProps) {\n  const { variant, onPressJumpRun } = props;\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const { value: winds } = state.fields.winds;\n  const theme = useTheme();\n\n  const [temperature, setTemperature] = React.useState<number | null | undefined>(\n    state.fields?.temperature?.value || 0\n  );\n  const [jumpRun, setJumpRun] = React.useState<number | null | undefined>(\n    state.fields?.jumpRun?.value || 0\n  );\n\n  React.useEffect(() => {\n    if (state.fields.jumpRun.value !== jumpRun) {\n      setJumpRun(state.fields.jumpRun.value);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setJumpRun, state.fields.jumpRun.value]);\n\n  React.useEffect(() => {\n    if (state.fields.temperature.value !== temperature) {\n      setTemperature(state.fields.temperature.value);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.fields.jumpRun.value, state.fields.temperature.value, setTemperature]);\n  return (\n    <KeyboardAvoidingView behavior=\"height\" style={styles.content}>\n      <View style={styles.row}>\n        <Text\n          style={[styles.headerTemperature, { color: variant === 'light' ? 'white' : 'black' }]}\n        >\n          Temperature\n        </Text>\n        <Text style={[styles.headerJumprun, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Jump run\n        </Text>\n      </View>\n\n      <View style={styles.altitudeTempRow}>\n        <Card\n          style={[styles.temperatureCard, { backgroundColor: theme.colors.surface }]}\n          elevation={3}\n        >\n          <Card.Content style={styles.cardContent}>\n            <List.Icon icon=\"thermometer\" style={{ width: 20 }} />\n            <TextInput\n              value={temperature?.toString()}\n              onBlur={() =>\n                dispatch(actions.forms.weather.setField(['temperature', Number(temperature)]))\n              }\n              onChangeText={(newTemp) => {\n                if (/\\d/.test(newTemp)) {\n                  const [numbers] = newTemp.match(/^\\-?\\d+/) || [temperature];\n                  setTemperature(Number(numbers));\n                }\n              }}\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n              keyboardType=\"numeric\"\n            />\n          </Card.Content>\n        </Card>\n\n        <Card style={styles.jumpRunCard} elevation={3}>\n          <Card.Content style={[styles.cardContent, { backgroundColor: theme.colors.surface }]}>\n            <List.Icon icon=\"compass\" style={{ width: 20 }} />\n            <TextInput\n              value={jumpRun?.toString()}\n              onBlur={() => dispatch(actions.forms.weather.setField(['jumpRun', Number(jumpRun)]))}\n              onChangeText={(newJumpRun) => {\n                if (/\\d/.test(newJumpRun)) {\n                  const [numbers] = newJumpRun.match(/\\d+/) || [jumpRun];\n                  setJumpRun(Number(numbers));\n                }\n              }}\n              keyboardType=\"numeric\"\n              style={[styles.textField, { color: theme.colors.onSurface }]}\n            />\n            <TouchableOpacity onPress={() => onPressJumpRun?.()}>\n              <List.Icon icon=\"earth\" color=\"#40AA40\" style={{ width: 40 }} />\n            </TouchableOpacity>\n          </Card.Content>\n        </Card>\n      </View>\n      <View style={styles.row}>\n        <Text style={[styles.headerAltitude, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Altitude\n        </Text>\n        <Text style={[styles.headerSpeed, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Speed\n        </Text>\n        <Text style={[styles.headerDirection, { color: variant === 'light' ? 'white' : 'black' }]}>\n          Direction\n        </Text>\n      </View>\n      <Divider />\n      <FlatList\n        data={winds as Required<typeof winds>}\n        keyExtractor={(item, index) => `wind.${item.altitude}.${index}`}\n        scrollEnabled={false}\n        renderItem={({ item: wind, index }) => {\n          return (\n            <WindRow\n              {...wind}\n              key={`wind-input-${index}`}\n              onChange={(field, value) => {\n                const newWinds = set([...(winds as Wind[])], index, {\n                  ...wind,\n                  [field]: value,\n                });\n                dispatch(actions.forms.weather.setField(['winds', newWinds]));\n              }}\n            />\n          );\n        }}\n      />\n      {(winds as Wind[])?.length < 5 ? (\n        <TouchableOpacity\n          onPress={() =>\n            dispatch(\n              actions.forms.weather.setField([\n                'winds',\n                [...(winds || []), { altitude: '0', direction: '0', speed: '0' }],\n              ])\n            )\n          }\n        >\n          <View style={{ width: '100%', opacity: 0.5 }} pointerEvents=\"box-only\">\n            <WindRow altitude=\"Add\" direction=\"0\" speed=\"0\" onChange={() => null} />\n          </View>\n        </TouchableOpacity>\n      ) : null}\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n    backgroundColor: 'transparent',\n  },\n  altitudeTempRow: {\n    paddingHorizontal: 32,\n    width: 400,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n    justifyContent: 'space-between',\n  },\n  textField: {\n    ...Platform.select({\n      web: { width: '100%' },\n      ios: { flexGrow: 1 },\n    }),\n    paddingBottom: 4,\n    height: 60,\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  cardContent: {\n    borderRadius: 5,\n\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'nowrap',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginVertical: 16,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n  row: {\n    width: 400,\n    alignSelf: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerTemperature: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerJumprun: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  jumpRunCard: {\n    width: 120,\n    height: 60,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  temperatureCard: {\n    height: 60,\n    width: 120,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 8,\n  },\n  headerAltitude: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    width: 120,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: {\n    marginVertical: 8,\n    width: 360,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    shadowColor: 'transparent',\n  },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  slider: {\n    flexDirection: 'column',\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport WizardScreen, { IWizardScreenProps } from 'app/components/wizard/WizardScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from 'app/components/forms/weather_conditions/WeatherConditionForm';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  return (\n    <WizardScreen style={styles.container} {...props} title=\"Winds Aloft\">\n      <WeatherConditionForm />\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n});\n\nexport default WindsWizardScreen;\n","interface ICoordinates {\n  x: number;\n  y: number;\n}\n\nexport function calculateAngle180({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  const dy = ey - cy;\n  const dx = ex - cx;\n  let theta = Math.atan2(dy, dx); // range (-PI, PI]\n  theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\n  return theta;\n}\n\nexport function calculateAngle({ x: cx, y: cy }: ICoordinates, { x: ex, y: ey }: ICoordinates) {\n  let theta = calculateAngle180({ x: cx, y: cy }, { x: ex, y: ey }); // range (-180, 180]\n  if (theta < 0) theta = 360 + theta; // range [0, 360)\n  return theta;\n}\n","const DEGREE_DIRECTION_SECTORS = [\n  'N',\n  'NNE',\n  'NE',\n  'ENE',\n  'E',\n  'ESE',\n  'SE',\n  'SSE',\n  'S',\n  'SSW',\n  'SW',\n  'WSW',\n  'W',\n  'WNW',\n  'NW',\n  'NNW',\n  'N',\n];\nexport function mapDegreesToDirections(degrees: number) {\n  return DEGREE_DIRECTION_SECTORS[Math.round(degrees / 22.5)];\n}\n","export function getPointOnCircle(opts: {\n  x: number;\n  y: number;\n  degrees: number;\n  radius: number;\n  offsetX: number;\n  offsetY: number;\n}) {\n  const { x, y, degrees, radius, offsetX, offsetY } = opts;\n  return {\n    x: x + radius + offsetX + radius * Math.sin(((degrees + (180 % 360)) * Math.PI) / 180),\n    y: y + radius + offsetY + radius * -Math.cos(((degrees + (180 % 360)) * Math.PI) / 180),\n  };\n}\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  GestureEvent,\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n} from 'react-native-gesture-handler';\nimport { calculateAngle } from '../../../utils/calculateAngle';\nimport { mapDegreesToDirections } from '../../../utils/mapDegreesToDirection';\nimport { getPointOnCircle } from '../../../utils/calculateCoordinatesByAngle';\nimport Map from '../../map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunSelectorProps {\n  value: number;\n  title?: string;\n  latitude: number;\n  longitude: number;\n  onChange?(val: number): void;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nexport default function JumpRunSelector(props: IJumpRunSelectorProps) {\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  let MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  MAP_SIZE = MAP_SIZE > 475 ? 475 : MAP_SIZE;\n\n  const { latitude, longitude, value, title, onChange } = props;\n  const [isDragging, setDragging] = React.useState(false);\n  const [jumpRun, setJumpRun] = React.useState(value || 0);\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const rotation = React.useRef(new Animated.Value(jumpRun));\n  const opacity = React.useRef(new Animated.Value(0));\n\n  React.useEffect(() => {\n    if (!isDragging) {\n      setJumpRun(value);\n    }\n  }, [isDragging, value]);\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onGestureEvent = React.useCallback(\n    (e: GestureEvent<PanGestureHandlerEventPayload>) => {\n      // Stop plane animation\n      planePosition.current.setValue(0);\n      planeAnimation.current.stop();\n\n      // Reset coordinates\n      planeAnimation.current.reset();\n      const { nativeEvent } = e;\n      const { x, y } = nativeEvent;\n\n      // Current position on circle\n      const currentCoordinates = {\n        x,\n        y,\n      };\n\n      const angle = calculateAngle({ x: origin.originX, y: origin.originY }, currentCoordinates);\n      requestAnimationFrame(() => setJumpRun(angle));\n      // Find the angle between these coordinates:\n      rotation.current.setValue(angle);\n    },\n    [setJumpRun, origin]\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.originX,\n    y: origin.originY,\n    degrees: jumpRun,\n    offsetX: -20,\n    offsetY: -20,\n    radius: MAP_SIZE / 2,\n  });\n\n  return (\n    <PanGestureHandler\n      onBegan={() => {\n        setDragging(true);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 1,\n          useNativeDriver: true,\n        }).start();\n      }}\n      onEnded={() => {\n        setDragging(false);\n        Animated.timing(opacity.current, {\n          duration: 350,\n          toValue: 0,\n          useNativeDriver: true,\n        }).start();\n        planeAnimation.current.start();\n        requestAnimationFrame(() => onChange?.(jumpRun));\n      }}\n      {...{ onGestureEvent }}\n    >\n      <View\n        style={{\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          marginTop: 50,\n        }}\n        onLayout={(layout) => setRootLayout(layout.nativeEvent.layout)}\n      >\n        {title && (\n          <Animated.Text\n            style={[\n              styles.title,\n              {\n                marginBottom: 4,\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0],\n                }),\n              },\n            ]}\n          >\n            {title}\n          </Animated.Text>\n        )}\n\n        <Map\n          position={{ y: 0, x: 0 }}\n          coords={{\n            lat: latitude,\n            lng: longitude,\n          }}\n          containerStyle={{\n            position: 'relative',\n            top: undefined,\n            left: undefined,\n            maxWidth: 500,\n            maxHeight: 500,\n          }}\n          interactive={false}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          onChange={() => null}\n          shape=\"round\"\n        >\n          <Animated.View\n            onLayout={onMountRotatableView}\n            style={[\n              styles.iconContainer,\n              {\n                width: MAP_SIZE,\n                height: MAP_SIZE,\n              },\n            ]}\n          >\n            <Animated.View\n              style={{\n                height: MAP_SIZE,\n                width: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [10, 2],\n                }),\n                backgroundColor: '#FF1414',\n                opacity: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.6, 1],\n                }),\n                transform: [\n                  {\n                    rotate: rotation.current.interpolate({\n                      inputRange: [0, 360],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              }}\n            />\n          </Animated.View>\n          {!rootLayout?.width ? null : (\n            <Animated.View\n              style={[\n                {\n                  position: 'absolute',\n                  width: 40,\n                  height: 40,\n                  top: planeStartPosition.y,\n                  left: planeStartPosition.x,\n                  zIndex: 100,\n                  opacity: planePosition.current.interpolate({\n                    inputRange: [-400, -200, 400],\n                    outputRange: [0.0, 1.0, 0.0],\n                  }),\n                  transform: [\n                    {\n                      rotate: rotation.current.interpolate({\n                        inputRange: [0, 360],\n                        outputRange: ['0deg', '360deg'],\n                      }),\n                    },\n                    {\n                      translateY: planePosition.current,\n                    },\n                  ],\n                },\n              ]}\n            >\n              <MaterialCommunityIcons name=\"airplane\" size={40} color=\"#ffffff\" />\n            </Animated.View>\n          )}\n          <Animated.Text\n            style={[\n              styles.degreeLabel,\n              {\n                opacity: opacity.current,\n                top: MAP_SIZE / 2 - 60,\n                left: MAP_SIZE / 2 - 100,\n              },\n            ]}\n          >\n            {Math.round(jumpRun)}\n          </Animated.Text>\n        </Map>\n\n        <Animated.Text\n          style={[\n            styles.bottomDegreeLabel,\n            {\n              opacity: opacity.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [1, 0],\n              }),\n            },\n          ]}\n        >\n          {Math.round(jumpRun)}&deg; ({mapDegreesToDirections(jumpRun)})\n        </Animated.Text>\n      </View>\n    </PanGestureHandler>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  title: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n  bottomDegreeLabel: {\n    fontSize: 50,\n    paddingBottom: 16,\n    fontWeight: 'bold',\n    color: 'white',\n    position: 'absolute',\n    bottom: 50,\n    left: 0,\n    top: 48,\n    width: '100%',\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 10,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: '#222222',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport WizardScreen, { IWizardScreenProps } from 'app/components/wizard/WizardScreen';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport JumpRunSelector from 'app/components/input/jump_run_select/JumpRunSelect';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\n\nfunction WindsWizardScreen(props: IWizardScreenProps) {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dispatch = useAppDispatch();\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <WizardScreen style={styles.container} {...props} contentStyle={{ paddingTop: 130 }}>\n      <View style={{ width: '100%', height: '80%' }}>\n        <JumpRunSelector\n          value={state.fields.jumpRun.value || 0}\n          latitude={dropzone?.lat || location?.latitude || 0}\n          longitude={dropzone?.lng || location?.longitude || 0}\n          onChange={(value) =>\n            dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n          }\n        />\n      </View>\n    </WizardScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    backgroundColor: 'blue',\n    paddingRight: 0,\n  },\n  slider: {\n    width: '100%',\n    marginTop: 32,\n  },\n  textInput: {\n    height: 80,\n    width: 200,\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    color: 'white',\n    fontSize: 60,\n    textAlign: 'center',\n    marginBottom: 60,\n  },\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 250,\n    height: 250,\n    borderRadius: 250 / 2,\n    borderWidth: 15,\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: { position: 'absolute', top: -75 },\n\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    marginVertical: 16,\n  },\n  headerAltitude: {\n    flex: 3.5 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerSpeed: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  headerDirection: {\n    flex: 3 / 10,\n\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  },\n  card: { padding: 8, marginVertical: 16 },\n  cardTitle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  cardValue: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    fontSize: 16,\n    alignSelf: 'center',\n  },\n  title: {\n    color: 'white',\n    marginBottom: 50,\n    fontWeight: 'bold',\n    fontSize: 25,\n    textAlign: 'center',\n  },\n  field: {\n    marginBottom: 8,\n  },\n  sliderControl: { width: '100%', height: 40 },\n  wingLoading: {\n    alignSelf: 'center',\n  },\n  wingLoadingCardLeft: {\n    width: '30%',\n  },\n  wingLoadingCardRight: {\n    paddingLeft: 16,\n    width: '70%',\n  },\n});\n\nexport default WindsWizardScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Wizard from 'app/components/wizard/Wizard';\nimport WizardCompleteStep from 'app/components/wizard/WizardCompleteStep';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport { useNotifications } from 'app/providers/notifications';\nimport WindsStep from './steps/Winds';\nimport JumpRunStep from './steps/JumpRun';\n\nfunction WeatherConditionsScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error,\n  });\n\n  const onSaveConditions = React.useCallback(\n    async (currentIndex: number, setIndex: (idx: number) => void) => {\n      await mutationCreateWeatherConditions.mutate({\n        id: Number(state.original?.id),\n        dropzoneId: dropzoneId as number,\n        winds: JSON.stringify(state.fields.winds.value),\n        jumpRun: state.fields.jumpRun.value,\n        temperature: state.fields.temperature.value,\n      });\n      setIndex(currentIndex + 1);\n    },\n    [mutationCreateWeatherConditions, state, dropzoneId]\n  );\n\n  return (\n    <Wizard>\n      <WindsStep\n        backButtonLabel=\"Cancel\"\n        nextButtonLabel=\"Next\"\n        onBack={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => setIndex(index + 1)}\n      />\n\n      <JumpRunStep\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Next\"\n        loading={mutationCreateWeatherConditions.loading}\n        onNext={(index, setIndex) => {\n          onSaveConditions(index, setIndex);\n        }}\n        onBack={(index, setIndex) => setIndex(index - 1)}\n      />\n\n      <WizardCompleteStep\n        title=\"Weather conditions saved\"\n        subtitle=\"You can update these at any time\"\n        backButtonLabel=\"Back\"\n        nextButtonLabel=\"Done\"\n        onBack={(index, setIndex) => {\n          setIndex(index - 1);\n        }}\n        onNext={() => {\n          dispatch(actions.forms.weather.reset());\n          dispatch(actions.forms.weather.setOpen(false));\n          navigation.goBack();\n        }}\n      />\n    </Wizard>\n  );\n}\n\nexport default WeatherConditionsScreen;\n","import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { FAB, useTheme } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport JumpRunSelector from 'app/components/input/jump_run_select/JumpRunSelect';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function JumpRunScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const theme = useTheme();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error,\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    notify.success('Weather board updated');\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    notify,\n  ]);\n\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [location, setLocation] = React.useState<Location.LocationObject['coords']>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const position = await Location.getCurrentPositionAsync({});\n\n      setLocation(position.coords);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (!dropzone?.lat || !dropzone?.lng) {\n      setUsersLocation();\n    }\n  }, [dropzone?.lat, dropzone?.lng, setUsersLocation]);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <JumpRunSelector\n        value={state.fields.jumpRun.value || 0}\n        latitude={dropzone?.lat || location?.latitude || 0}\n        longitude={dropzone?.lng || location?.longitude || 0}\n        onChange={(value) =>\n          dispatch(actions.forms.weather.setField(['jumpRun', Math.round(value)]))\n        }\n      />\n      <FAB\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        small\n        icon=\"check\"\n        loading={mutationCreateWeatherConditions.loading}\n        disabled={mutationCreateWeatherConditions.loading}\n        onPress={() => onSaveConditions()}\n        label=\"Save\"\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { AuthenticatedRoutes } from './routes';\n\nexport function useAuthenticatedNavigation() {\n  return useNavigation<NavigationProp<AuthenticatedRoutes>>();\n}\n","import * as React from 'react';\nimport { Button, HelperText } from 'react-native-paper';\nimport { StyleSheet, View } from 'react-native';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\n// eslint-disable-next-line max-len\nimport useMutationCreateWeatherConditions from 'app/api/hooks/useMutationCreateWeatherConditions';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionForm from 'app/components/forms/weather_conditions/WeatherConditionForm';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useAuthenticatedNavigation } from '../../useAuthenticatedNavigation';\n\nexport default function WindScreen() {\n  const state = useAppSelector((root) => root.forms.weather);\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const dropzoneId = useAppSelector((root) => root.global.currentDropzoneId);\n  const dispatch = useAppDispatch();\n  const navigation = useAuthenticatedNavigation();\n  const notify = useNotifications();\n\n  const mutationCreateWeatherConditions = useMutationCreateWeatherConditions({\n    onSuccess: () => null,\n    onFieldError: (field: keyof typeof state.fields, message: string) =>\n      dispatch(actions.forms.weather.setFieldError([field, message])),\n    onError: notify.error,\n  });\n\n  const onSaveConditions = React.useCallback(async () => {\n    await mutationCreateWeatherConditions.mutate({\n      id: Number(state.original?.id),\n      dropzoneId: dropzoneId as number,\n      winds: JSON.stringify(state.fields.winds.value),\n      jumpRun: state.fields.jumpRun.value,\n      temperature: state.fields.temperature.value,\n    });\n    navigation.goBack();\n    notify.success('Weather board updated');\n    dispatch(actions.forms.weather.reset());\n    dispatch(actions.forms.weather.setOpen(false));\n  }, [\n    mutationCreateWeatherConditions,\n    state.original?.id,\n    state.fields.winds.value,\n    state.fields.jumpRun.value,\n    state.fields.temperature.value,\n    dropzoneId,\n    navigation,\n    notify,\n    dispatch,\n  ]);\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.background }}>\n      <WeatherConditionForm\n        onPressJumpRun={() =>\n          navigation.navigate('Manifest', {\n            screen: 'JumpRunScreen',\n          })\n        }\n        variant={theme.dark ? 'light' : undefined}\n      />\n      <View style={styles.buttons} pointerEvents=\"box-none\">\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"contained\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          labelStyle={{\n            color: 'white',\n          }}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Save\n        </Button>\n        <Button\n          loading={mutationCreateWeatherConditions.loading}\n          mode=\"outlined\"\n          color={palette.primary.main}\n          disabled={mutationCreateWeatherConditions.loading}\n          style={[\n            styles.button,\n            {\n              borderRadius: 20,\n              height: 42,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n            },\n          ]}\n          onPress={async () => {\n            onSaveConditions();\n          }}\n        >\n          Reload Conditions\n        </Button>\n        <HelperText type=\"info\">\n          Winds aloft and temperature are retrieved from MarkSchulze.net's amazing Winds Aloft\n          service.\n        </HelperText>\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    alignSelf: 'center',\n    width: '100%',\n  },\n  buttonBack: {\n    alignSelf: 'center',\n    width: '100%',\n    marginHorizontal: 48,\n  },\n  buttons: {\n    alignSelf: 'center',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    justifyContent: 'flex-end',\n    width: '100%',\n    maxWidth: 404,\n    marginBottom: 0,\n  },\n});\n","import { DragOverlay } from '@dnd-kit/core';\nimport * as React from 'react';\nimport UserRow from '../UserRow';\nimport type { ISlotUserRowProps } from '../UserRow';\n\nexport default function DraggingRow(props: { item?: ISlotUserRowProps }) {\n  const { item } = props;\n  return <DragOverlay>{item ? <UserRow {...item} /> : null}</DragOverlay>;\n}\n","import * as React from 'react';\nimport { DndContext, DragEndEvent, DragStartEvent } from '@dnd-kit/core';\nimport UserRowDragOverlay from 'app/components/slots_table/DragAndDrop/DraggingRow';\nimport type { ISlotUserRowProps } from 'app/components/slots_table/UserRow';\nimport { useManifestContext } from 'app/providers/manifest';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function DragDropWrapper(props: React.PropsWithChildren<object>) {\n  const { children } = props;\n  const [draggedItem, setDraggedItem] = React.useState<ISlotUserRowProps>();\n  const {\n    manifest: { moveSlot },\n  } = useManifestContext();\n  const notify = useNotifications();\n\n  const onDragEnd = React.useCallback(\n    async (event: DragEndEvent) => {\n      const targetLoad = event.over?.data?.current?.loadId;\n      const sourceLoad = event.active.data.current?.loadId;\n      const sourceSlot = event?.active?.data?.current?.slotId;\n      const targetSlot = event?.over?.data?.current?.slotId;\n\n      console.debug(`Moving Slot ${sourceSlot} from Load ${sourceLoad} to Load ${targetLoad}`, {\n        targetLoad,\n        sourceLoad,\n        sourceSlot,\n      });\n\n      if (sourceLoad !== targetLoad) {\n        const response = await moveSlot(sourceLoad, {\n          targetLoad: Number(targetLoad),\n          sourceSlot: Number(sourceSlot),\n          targetSlot: targetSlot ? Number(targetSlot) : undefined,\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        }\n      }\n    },\n    [moveSlot, notify]\n  );\n  return (\n    <DndContext\n      onDragStart={(event: DragStartEvent) => {\n        console.debug('Drag start', event, event?.active?.data?.current?.props);\n        setDraggedItem(event?.active?.data?.current?.props);\n      }}\n      onDragEnd={onDragEnd}\n    >\n      {children}\n      <UserRowDragOverlay item={draggedItem} />\n    </DndContext>\n  );\n}\n","import * as React from 'react';\nimport Skeleton from 'app/components/Skeleton';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      key=\"loading-card\"\n      containerStyle={{\n        height: 160,\n        width: 335,\n        margin: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: 335, height: 160, borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { Badge, Card, Chip } from 'react-native-paper';\nimport { isBefore } from 'date-fns';\n\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\n\nimport { View } from 'app/components/Themed';\nimport { LoadState } from 'app/api/schema.d';\nimport { useAppSelector } from 'app/state';\nimport { errorColor, warningColor } from 'app/constants/Colors';\nimport { useLoadContext, withLoadContext } from 'app/providers/load';\nimport Countdown from '../Countdown';\nimport Loading from './Loading';\n\ninterface ILoadCardSmall {\n  onPress(): void;\n}\n\nfunction LoadCard(props: ILoadCardSmall) {\n  const { onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  const {\n    load: { load, loading, updatePlane, updatePilot },\n  } = useLoadContext();\n  const LOAD_BADGE_COLOR: { [K in LoadState]?: string } = React.useMemo(\n    () => ({\n      open: palette.accent.main,\n      cancelled: errorColor,\n      boarding_call: warningColor,\n    }),\n    [palette.accent.main]\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const loadStates = {\n    [LoadState.Open]: 'Open',\n    [LoadState.BoardingCall]: 'On call',\n    [LoadState.Cancelled]: 'Cancelled',\n    [LoadState.InFlight]: 'In air',\n    [LoadState.Landed]: 'Landed',\n  };\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{\n        margin: 16,\n        borderRadius: 8,\n        minWidth: 300,\n        maxWidth: 450,\n        opacity: ['cancelled', 'landed'].includes(load?.state || '') ? 0.5 : 1.0,\n      }}\n      elevation={1}\n      onPress={onPress}\n    >\n      <Badge\n        style={{\n          backgroundColor: load?.state ? LOAD_BADGE_COLOR[load.state] : undefined,\n          marginTop: -5,\n          marginRight: -5,\n          color: 'white',\n          fontSize: 12,\n        }}\n      >\n        {load?.state ? loadStates[load?.state] : ''}\n      </Badge>\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={`Load #${load?.loadNumber || '?'}`}\n        subtitle={load?.name}\n        right={() =>\n          !load?.dispatchAt || isBefore(new Date(), load?.dispatchAt) ? null : (\n            <View style={{ marginRight: 16 }}>\n              <Countdown end={new Date(load.dispatchAt * 1000)} />\n            </View>\n          )\n        }\n      />\n\n      <Card.Content style={styles.cardContent}>\n        <ScrollView\n          style={{\n            flexDirection: 'row',\n            flexWrap: 'nowrap',\n            backgroundColor: 'transparent',\n            width: '100%',\n          }}\n          horizontal\n        >\n          <PlaneChip\n            value={load?.plane}\n            small\n            color={theme.colors.onSurface}\n            onSelect={async (plane) => {\n              await updatePlane(plane);\n            }}\n          />\n          <PilotChip\n            color={theme.colors.onSurface}\n            value={load?.pilot}\n            onSelect={updatePilot}\n            small\n          />\n          <Chip\n            mode=\"outlined\"\n            icon=\"parachute\"\n            style={{\n              marginHorizontal: 4,\n              backgroundColor: 'transparent',\n              height: 25,\n              alignItems: 'center',\n              borderColor: theme.colors.onSurface,\n            }}\n            textStyle={{ color: theme.colors.onSurface, fontSize: 12, marginTop: 0 }}\n          >\n            {load?.occupiedSlots || 0} / {load?.plane?.maxSlots}\n          </Chip>\n        </ScrollView>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cardContent: {\n    marginVertical: 8,\n    overflow: 'hidden',\n    maxWidth: 450,\n    flexDirection: 'row',\n  },\n  smallChip: {\n    height: 25,\n    margin: 4,\n    alignItems: 'center',\n  },\n  smallChipText: { fontSize: 12 },\n});\n\nexport default withLoadContext(LoadCard);\n","import * as React from 'react';\nimport Skeleton from 'app/components/Skeleton';\n\nexport default function LoadingCard() {\n  return (\n    <Skeleton\n      containerStyle={{\n        height: 300,\n        maxWidth: 535,\n        paddingHorizontal: 16,\n      }}\n      isLoading\n      layout={[{ key: 'header', width: '100%', height: '100%', borderRadius: 8 }]}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Platform, ScrollView } from 'react-native';\nimport { Button, Card, IconButton, Paragraph, ProgressBar, Text } from 'react-native-paper';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\n\nimport { SlotDetailsFragment } from 'app/api/operations';\nimport {\n  useDropzoneContext,\n  useLoadContext,\n  useManifestContext,\n  withLoadContext,\n} from 'app/providers';\nimport GCAChip from 'app/components/chips/GcaChip';\nimport LoadMasterChip from 'app/components/chips/LoadMasterChip';\nimport PilotChip from 'app/components/chips/PilotChip';\nimport PlaneChip from 'app/components/chips/PlaneChip';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport { View } from 'app/components/Themed';\nimport { Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport LoadSlotTable from 'app/components/slots_table/Table';\nimport { SlotFields } from 'app/components/slots_table/UserRow';\nimport { useNotifications } from 'app/providers/notifications';\nimport LoadingCard from './Loading';\n\ninterface ILoadCardLarge {\n  controlsVisible: boolean;\n  onManifestGroup(): void;\n  onSlotGroupPress(slots: SlotDetailsFragment[]): void;\n  onSlotPress(slot: SlotDetailsFragment): void;\n  onManifest(): void;\n}\n\nfunction LoadCard(props: ILoadCardLarge) {\n  const { onManifest, onManifestGroup, controlsVisible, onSlotGroupPress, onSlotPress } = props;\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const [isDispatchOpen, setDispatchOpen] = React.useState(false);\n  const {\n    manifest: { deleteSlot },\n  } = useManifestContext();\n  const [deletingSlot, setDeletingSlot] = React.useState(false);\n  const notify = useNotifications();\n\n  const {\n    load: {\n      load,\n      loading,\n      refetch,\n      update,\n      updateGCA,\n      updatePlane,\n      updatePilot,\n      dispatchInMinutes,\n      updateLoadMaster,\n      markAsLanded,\n    },\n  } = useLoadContext();\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const { currentUser } = currentDropzone;\n\n  const onDeleteSlot = React.useCallback(\n    async (slot: SlotDetailsFragment) => {\n      try {\n        setDeletingSlot(true);\n\n        const response = await deleteSlot({\n          id: Number(slot.id),\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(\n            response?.error ||\n              `${slot.dropzoneUser?.user?.name} could not be taken off load #${load?.loadNumber}`\n          );\n        } else if ('slot' in response && slot?.id) {\n          notify.error(\n            `${response.slot?.dropzoneUser?.user?.name || 'User'} has been taken off load #${\n              load?.loadNumber\n            }`\n          );\n        }\n      } finally {\n        setDeletingSlot(false);\n      }\n    },\n    [deleteSlot, load?.loadNumber, notify]\n  );\n\n  const navigation = useAuthenticatedNavigation();\n  const canUpdateLoad = useRestriction(Permission.UpdateLoad);\n\n  const canManifestSelf = useRestriction(Permission.CreateSlot);\n  const canManifestGroup = useRestriction(Permission.CreateUserSlot);\n  const canManifestGroupWithSelfOnly = useRestriction(Permission.CreateUserSlotWithSelf);\n\n  const showManifestButton = canManifestSelf && load?.isOpen && !load?.isFull;\n\n  React.useEffect(() => {\n    if (load?.maxSlots && load?.maxSlots < 5) {\n      setExpanded(true);\n    }\n  }, [load?.maxSlots]);\n\n  const showGroupIcon =\n    controlsVisible &&\n    (canManifestGroup || canManifestGroupWithSelfOnly) &&\n    !load?.hasLanded &&\n    (!load?.dispatchAt || load.dispatchAt > new Date().getTime() / 1000);\n\n  if (loading) {\n    return <LoadingCard />;\n  }\n  return (\n    <Card\n      testID=\"load-card\"\n      style={{ margin: 16, opacity: load?.hasLanded ? 0.5 : 1.0 }}\n      elevation={3}\n    >\n      <Card.Title\n        style={{ justifyContent: 'space-between' }}\n        title={\n          <View\n            style={{\n              width: '100%',\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n            }}\n          >\n            <Text testID=\"title\">{`Load ${load?.loadNumber || 0}`}</Text>\n            <View style={{ flexGrow: 1 }} />\n            {showGroupIcon && (\n              <IconButton\n                icon=\"account-group\"\n                testID=\"manifest-group-button\"\n                onPress={() => {\n                  dispatch(actions.forms.manifestGroup.reset());\n                  dispatch(actions.forms.manifestGroup.setField(['load', load]));\n\n                  if (canManifestGroupWithSelfOnly && !canManifestGroup && currentUser) {\n                    // Automatically add current user to selection\n                    dispatch(actions.screens.manifest.setSelected([currentUser]));\n                    dispatch(actions.forms.manifestGroup.setDropzoneUsers([currentUser]));\n                  }\n\n                  if (onManifestGroup) {\n                    onManifestGroup();\n                  }\n                }}\n              />\n            )}\n          </View>\n        }\n        subtitle={load?.name}\n      />\n      <ProgressBar\n        visible={loading || update.loading || deletingSlot}\n        color={state.theme.colors.primary}\n      />\n      <Card.Content\n        style={{\n          marginVertical: 8,\n          paddingHorizontal: 0,\n          height: isExpanded || !controlsVisible ? undefined : 300,\n          overflow: 'hidden',\n        }}\n      >\n        <View\n          style={{ flexDirection: 'row', paddingHorizontal: 8, backgroundColor: 'transparent' }}\n        >\n          <ScrollView\n            style={{ height: 32 }}\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            contentContainerStyle={{ backgroundColor: 'transparent' }}\n          >\n            <PlaneChip\n              small\n              value={load?.plane}\n              onSelect={async (plane) => {\n                if ((load?.slots?.length || 0) > (plane.maxSlots || 0)) {\n                  const diff = (load?.slots?.length || 0) - (plane.maxSlots || 0);\n\n                  notify.info(`You need to take ${diff} people off the load to fit on this plane`);\n                } else {\n                  await updatePlane(plane);\n                  refetch();\n                }\n              }}\n            />\n            <GCAChip small value={load?.gca} onSelect={updateGCA} />\n            <PilotChip small value={load?.pilot} onSelect={updatePilot} />\n            <LoadMasterChip\n              small\n              value={load?.loadMaster}\n              slots={load?.slots || []}\n              onSelect={updateLoadMaster}\n            />\n          </ScrollView>\n        </View>\n        <LoadSlotTable\n          scrollable={Platform.OS === 'web'}\n          {...{ load, loading, onSlotPress, onSlotGroupPress }}\n          onDeletePress={onDeleteSlot}\n          onAvailableSlotPress={() =>\n            load?.id &&\n            navigation.navigate('Manifest', {\n              screen: 'LoadScreen',\n              params: { loadId: load?.id },\n            })\n          }\n          onSlotPress={onSlotPress}\n          fields={[SlotFields.JumpType].filter(Boolean) as SlotFields[]}\n        />\n      </Card.Content>\n      {!!load?.dispatchAt && load?.dispatchAt > new Date().getTime() / 1000 && (\n        <View style={{ flex: 1, backgroundColor: 'black', padding: 8 }}>\n          <Paragraph style={{ color: '#FFFFFF' }}>\n            {`Take-off in ${differenceInMinutes(\n              new Date(),\n              (load?.dispatchAt as number) * 1000\n            )} min`}\n          </Paragraph>\n        </View>\n      )}\n\n      {!controlsVisible ? null : (\n        <Card.Actions>\n          {load?.maxSlots && load?.maxSlots < 5 ? null : (\n            <Button\n              onPress={() => setExpanded(!isExpanded)}\n              testID={isExpanded ? 'show-less' : 'show-more'}\n            >\n              {isExpanded ? 'Show less' : 'Show more'}\n            </Button>\n          )}\n          <View style={{ flexGrow: 1 }} />\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {!canUpdateLoad || !!load?.hasLanded ? null : load?.dispatchAt ? (\n            <Button\n              mode=\"outlined\"\n              onPress={() => dispatchInMinutes(null)}\n              testID=\"dispatch-cancel\"\n            >\n              Cancel\n            </Button>\n          ) : (\n            <Menu\n              setOpen={setDispatchOpen}\n              open={isDispatchOpen}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setDispatchOpen(true)}\n                  testID=\"dispatch-button\"\n                >\n                  Dispatch\n                </Button>\n              }\n            >\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(20);\n                }}\n                title=\"20 minute call\"\n              />\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(15);\n                }}\n                title=\"15 minute call\"\n              />\n              <MenuItem\n                testID=\"dispatch-call\"\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(10);\n                }}\n                title=\"10 minute call\"\n              />\n              <MenuItem\n                onPress={() => {\n                  setDispatchOpen(false);\n                  dispatchInMinutes(5);\n                }}\n                title=\"5 minute call\"\n              />\n            </Menu>\n          )}\n\n          {/* eslint-disable-next-line no-nested-ternary */}\n          {load?.hasLanded ? null : load?.dispatchAt &&\n            load.dispatchAt < new Date().getTime() / 1000 &&\n            canUpdateLoad ? (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              onPress={() => {\n                if (!load?.loadMaster?.id) {\n                  return notify.info(\n                    'You must select a load master before this load can be finalized'\n                  );\n                }\n\n                if (!load?.pilot?.id) {\n                  return notify.info('You must select a pilot before this load can be finalized');\n                }\n                return markAsLanded();\n              }}\n            >\n              Mark as landed\n            </Button>\n          ) : (\n            <Button\n              style={{ marginLeft: 8 }}\n              mode=\"contained\"\n              testID=\"manifest-button\"\n              onPress={() => onManifest()}\n              disabled={\n                !showManifestButton ||\n                Boolean(load?.dispatchAt && load.dispatchAt < new Date().getTime() / 1000)\n              }\n            >\n              Manifest\n            </Button>\n          )}\n        </Card.Actions>\n      )}\n    </Card>\n  );\n}\n\nexport default withLoadContext(LoadCard);\n","import * as React from 'react';\nimport {\n  Animated,\n  Dimensions,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport isEqual from 'lodash/isEqual';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { getPointOnCircle } from 'app/utils/calculateCoordinatesByAngle';\nimport Map from 'app/components/map/Map';\n\nconst { width } = Dimensions.get('window');\n\ninterface IJumpRunMapProps {\n  jumpRun: number;\n  lat?: number | null;\n  lng?: number | null;\n}\n\nconst MAP_SIZE_PERCENTAGE = 1.0;\nfunction JumpRunMap(props: IJumpRunMapProps) {\n  const { lat, lng } = props;\n  const [rootLayout, setRootLayout] = React.useState<LayoutRectangle>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n  });\n  const MAP_SIZE = rootLayout.width * MAP_SIZE_PERCENTAGE;\n  const CENTER_Y = rootLayout.height / 2;\n  const CENTER_X = rootLayout.width / 2;\n\n  const { jumpRun } = props;\n  const [origin, setOrigin] = React.useState<\n    LayoutRectangle & { originX: number; originY: number }\n  >({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    originX: 0,\n    originY: 0,\n  });\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  /** ANIMATIONS * */\n  const planePosition = React.useRef(new Animated.Value(0));\n  const planeAnimation = React.useRef(\n    Animated.loop(\n      Animated.timing(planePosition.current, {\n        duration: 3000,\n        toValue: -400,\n        useNativeDriver: true,\n      }),\n      {\n        resetBeforeIteration: true,\n      }\n    )\n  );\n\n  const onMountRotatableView = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const { layout } = event.nativeEvent;\n      setOrigin({\n        ...layout,\n        // Center of spinny thing\n        originX: layout.x + rootLayout.width / 2,\n        originY: layout.y + rootLayout.height / 2,\n      });\n    },\n    [rootLayout.height, rootLayout.width]\n  );\n\n  React.useEffect(() => {\n    'worklet';\n\n    planeAnimation.current.start();\n  }, []);\n\n  const animate = () => {\n    'worklet';\n\n    planeAnimation.current.stop();\n    planeAnimation.current.reset();\n    planeAnimation.current.start();\n  };\n\n  React.useEffect(() => {\n    animate();\n  }, [jumpRun]);\n\n  const planeStartPosition = getPointOnCircle({\n    x: origin.x,\n    y: origin.y,\n    degrees: jumpRun,\n    offsetX: 0,\n    offsetY: 0,\n    radius: rootLayout.height / 2,\n  });\n\n  const position = React.useMemo(() => ({ x: 0, y: 0 }), []);\n  const coords = React.useMemo(() => (lat && lng ? { lat, lng } : undefined), [lat, lng]);\n\n  return (\n    <View\n      onLayout={({ nativeEvent }) => setRootLayout(nativeEvent.layout)}\n      style={{ width: '100%', height: '100%' }}\n    >\n      <View\n        style={{\n          width: MAP_SIZE,\n          height: MAP_SIZE,\n          borderRadius: MAP_SIZE / 2,\n          overflow: 'hidden',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n        }}\n      >\n        <Map\n          coords={coords}\n          center={coords}\n          height={MAP_SIZE}\n          width={MAP_SIZE}\n          position={position}\n          interactive={false}\n        />\n      </View>\n\n      <Animated.View\n        onLayout={onMountRotatableView}\n        style={[\n          styles.iconContainer,\n          {\n            width: MAP_SIZE,\n            height: MAP_SIZE,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            transform: [\n              {\n                rotate: `${jumpRun}deg`,\n              },\n            ],\n          },\n        ]}\n      >\n        <Animated.View\n          style={{\n            height: MAP_SIZE - 6,\n            width: 1,\n            backgroundColor: '#FF1414',\n            opacity: opacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0.6, 1],\n            }),\n            transform: [\n              {\n                scaleX: opacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [3, 1],\n                }),\n              },\n            ],\n          }}\n        />\n      </Animated.View>\n      {!rootLayout?.width ? null : (\n        <Animated.View\n          style={[\n            {\n              position: 'absolute',\n              width: 20,\n              height: 20,\n              top: planeStartPosition.y,\n              left: planeStartPosition.x,\n              opacity: planePosition.current.interpolate({\n                inputRange: [-MAP_SIZE, -MAP_SIZE / 2, MAP_SIZE],\n                outputRange: [0.0, 1.0, 0.0],\n              }),\n              transform: [\n                {\n                  rotate: `${jumpRun}deg`,\n                },\n                {\n                  translateY: planePosition.current,\n                },\n              ],\n            },\n          ]}\n        >\n          <MaterialCommunityIcons\n            name=\"airplane\"\n            size={20}\n            color=\"#ffffff\"\n            style={styles.planeIcon}\n          />\n        </Animated.View>\n      )}\n      <Animated.Text\n        style={[\n          styles.degreeLabel,\n          {\n            opacity: opacity.current,\n            top: CENTER_Y,\n            left: CENTER_X,\n          },\n        ]}\n      >\n        {Math.round(jumpRun)}\n      </Animated.Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 0,\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  planeIcon: { transform: [{ rotate: '-45deg' }] },\n\n  degreeLabel: {\n    width: 200,\n    height: 120,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    fontSize: 100,\n    color: 'white',\n    position: 'absolute',\n  },\n\n  content: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    borderWidth: 2,\n    borderRadius: width / 2,\n    borderStyle: 'solid',\n    borderColor: 'white',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default React.memo(JumpRunMap, (a, b) => isEqual(a, b));\n","import * as React from 'react';\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport {\n  StyleSheet,\n  ImageBackground,\n  Text,\n  View,\n  TouchableOpacity,\n  Animated,\n  Easing,\n} from 'react-native';\n\nimport { Card, Divider, useTheme } from 'react-native-paper';\nimport format from 'date-fns/format';\nimport { orderBy } from 'lodash';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { actions, useAppDispatch } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Permission } from 'app/api/schema.d';\nimport { useNavigation } from '@react-navigation/core';\nimport parseISO from 'date-fns/parseISO';\nimport nightBackground from '../../../../../../assets/images/night.png';\nimport weatherBackground from '../../../../../../assets/images/weather.png';\nimport JumpRunMap from './JumpRun';\n\nexport default function WeatherBoard() {\n  const {\n    dropzone: { dropzone, loading, called },\n  } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n  const navigation = useNavigation();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const height = React.useRef(new Animated.Value(0));\n\n  const theme = useTheme();\n\n  const conditions = dropzone?.currentConditions;\n\n  const date = dropzone?.currentConditions?.createdAt\n    ? parseISO(dropzone.currentConditions.createdAt)\n    : new Date();\n  const jumpRun = dropzone?.currentConditions?.jumpRun || 0;\n  const temperature = dropzone?.currentConditions?.temperature || 0;\n  const canUpdate = useRestriction(Permission.UpdateWeatherConditions);\n\n  const hasWeatherConditions = conditions?.id && conditions?.winds?.length && conditions?.jumpRun;\n\n  React.useEffect(() => {\n    if (isExpanded) {\n      Animated.timing(height.current, {\n        toValue: 1,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.timing(height.current, {\n        toValue: 0,\n        duration: 300,\n\n        easing: Easing.inOut(Easing.ease),\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [isExpanded]);\n\n  const onEditWindboard = React.useCallback(() => {\n    if (canUpdate && dropzone?.currentConditions) {\n      dispatch(actions.forms.weather.setOpen(dropzone?.currentConditions));\n      navigation.navigate('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: { screen: 'WindScreen' },\n        },\n      });\n    }\n  }, [canUpdate, dispatch, dropzone?.currentConditions, navigation]);\n\n  const onEditJumprun = React.useCallback(() => {\n    if (dropzone?.currentConditions && canUpdate) {\n      dispatch(actions.forms.weather.setOpen(dropzone.currentConditions));\n      navigation.navigate('Authenticated', {\n        screen: 'LeftDrawer',\n        params: {\n          screen: 'Manifest',\n          params: { screen: 'JumpRunScreen' },\n        },\n      });\n    }\n  }, [canUpdate, dispatch, dropzone?.currentConditions, navigation]);\n\n  const defaultBackground = theme.dark ? nightBackground : weatherBackground;\n\n  return (loading && !dropzone?.currentConditions) || !called ? (\n    <SkeletonContent\n      containerStyle={styles.card}\n      isLoading\n      layout={[{ key: 'root', height: 200, width: '100%' }]}\n    />\n  ) : (\n    <Animated.View\n      style={{\n        marginBottom: 8,\n        height: height.current.interpolate({ inputRange: [0, 1], outputRange: [200, 300] }),\n      }}\n    >\n      <Card\n        style={styles.card}\n        elevation={3}\n        onPress={() => setExpanded(!isExpanded)}\n        onLongPress={onEditWindboard}\n      >\n        <ImageBackground\n          source={defaultBackground}\n          style={{ ...StyleSheet.absoluteFillObject, opacity: 0.75 }}\n          resizeMode=\"cover\"\n        >\n          <Card.Content\n            style={{\n              alignItems: 'center',\n              justifyContent: 'center',\n              flexGrow: 1,\n            }}\n          >\n            {!hasWeatherConditions ? (\n              <View style={styles.noData}>\n                <Text style={styles.noDataLabel}>No weather data</Text>\n              </View>\n            ) : (\n              <>\n                <View style={styles.top}>\n                  <View style={styles.cell}>\n                    <FontAwesome\n                      name=\"calendar\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.date}>{format(date, 'LLL do, yy')}</Text>\n                  </View>\n\n                  <View\n                    style={[styles.cell, { justifyContent: 'flex-end', alignSelf: 'flex-end' }]}\n                  >\n                    <FontAwesome\n                      name=\"thermometer\"\n                      color=\"#ffffff\"\n                      size={20}\n                      style={{\n                        marginRight: 8,\n                      }}\n                    />\n                    <Text style={styles.temperature}>{temperature || '?'}</Text>\n                    <MaterialCommunityIcons name=\"temperature-celsius\" color=\"#ffffff\" size={20} />\n                  </View>\n                </View>\n                <View style={styles.bottom}>\n                  <Animated.View\n                    style={[\n                      styles.windboard,\n                      {\n                        height: height.current.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [100, 210],\n                        }),\n                        transform: [\n                          {\n                            translateY: height.current.interpolate({\n                              inputRange: [0, 1],\n                              outputRange: [0, 10],\n                              easing: Easing.inOut(Easing.ease),\n                            }),\n                          },\n                        ],\n                      },\n                    ]}\n                  >\n                    <View style={styles.row}>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Altitude</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Wind</Text>\n                      </View>\n                      <View style={styles.cell}>\n                        <Text style={styles.header}>Direction</Text>\n                      </View>\n                    </View>\n                    {orderBy(\n                      dropzone?.currentConditions?.winds || [],\n                      (item) => Number(item.altitude),\n                      'desc'\n                    ).map(({ speed: wind, direction, altitude }) => (\n                      <React.Fragment key={`wind-at-${altitude}`}>\n                        <Divider style={{ width: '100%', backgroundColor: 'white' }} />\n                        <View style={styles.row}>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{altitude}</Text>\n                          </View>\n                          <View style={styles.cell}>\n                            <Text style={styles.value}>{wind}</Text>\n                          </View>\n                          <View style={[styles.cell, { justifyContent: 'center' }]}>\n                            <Text style={styles.value}>{direction}</Text>\n                            <FontAwesome\n                              name=\"long-arrow-down\"\n                              size={14}\n                              style={\n                                direction && /\\d+/.test(direction) && Number(direction) < 361\n                                  ? {\n                                      transform: [\n                                        {\n                                          rotate: `${direction}deg`,\n                                        },\n                                      ],\n                                      marginLeft: 4,\n                                    }\n                                  : { marginLeft: 4 }\n                              }\n                            />\n                          </View>\n                        </View>\n                      </React.Fragment>\n                    ))}\n                  </Animated.View>\n                  <View style={styles.jumpRun} pointerEvents=\"box-none\">\n                    <Text style={[styles.header, { textAlign: 'left' }]}>\n                      Jump run {jumpRun}&deg;\n                    </Text>\n                    <TouchableOpacity\n                      style={{ width: '100%', height: '100%' }}\n                      disabled={!canUpdate}\n                      onLongPress={onEditJumprun}\n                      onPress={onEditWindboard}\n                    >\n                      <JumpRunMap jumpRun={jumpRun} lat={dropzone?.lat} lng={dropzone?.lng} />\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              </>\n            )}\n          </Card.Content>\n        </ImageBackground>\n      </Card>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    flexGrow: 1,\n    borderRadius: 10,\n    marginBottom: 30,\n    height: 200,\n    width: '100%',\n    overflow: 'hidden',\n    backgroundColor: 'transparent',\n  },\n  date: {\n    flex: 1,\n    fontSize: 20,\n    color: 'white',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  temperature: {\n    fontSize: 24,\n    lineHeight: 24,\n    color: 'white',\n    justifyContent: 'flex-end',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 5,\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n  },\n  label: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  value: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  row: {\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    height: 20,\n    width: '100%',\n    flexDirection: 'row',\n  },\n  cell: {\n    flex: 1,\n    color: 'white',\n    flexDirection: 'row',\n  },\n  header: {\n    flexGrow: 3,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 1,\n      height: 1,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  noData: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n    textAlign: 'center',\n    alignSelf: 'center',\n    height: '100%',\n  },\n  noDataLabel: {\n    color: '#ffffff',\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    textShadowRadius: 10,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    fontSize: 22,\n  },\n  top: {\n    marginTop: 16,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexDirection: 'row',\n    width: '100%',\n  },\n  bottom: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    flexGrow: 1,\n    height: 105,\n    marginTop: 32,\n    paddingBottom: 20,\n  },\n  windboard: {\n    width: 200,\n    height: 105,\n    padding: 8,\n    borderRadius: 8,\n    backgroundColor: 'rgba(50, 50,50, 0.5)',\n    flexDirection: 'column',\n    overflow: 'hidden',\n  },\n  jumpRun: {\n    width: 94,\n    height: 94,\n    marginBottom: 24,\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n  },\n});\n","import { StyleSheet } from 'react-native';\nimport LottieView from 'app/components/LottieView';\nimport * as React from 'react';\nimport { Card, List } from 'react-native-paper';\nimport useProfileWizard from 'app/hooks/navigation/useProfileWizard';\n\nexport default function SetupProfileCard() {\n  const openWizard = useProfileWizard();\n  const onPress = React.useCallback(() => openWizard(), [openWizard]);\n\n  return (\n    <Card style={styles.card} {...{ onPress }}>\n      <Card.Content style={styles.content}>\n        <List.Item\n          title=\"Complete your profile\"\n          description=\"Let this dropzone know who you are\"\n          titleStyle={{ marginBottom: 4 }}\n          left={() => (\n            <LottieView\n              style={{ height: 80, width: 80 }}\n              autoPlay\n              loop={false}\n              // eslint-disable-next-line global-require\n              source={require('../../../../../assets/images/profile2.json')}\n            />\n          )}\n          right={(props) => <List.Icon {...props} icon=\"chevron-right\" style={styles.icon} />}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { marginHorizontal: 16, borderRadius: 8 },\n  content: { paddingHorizontal: 4, paddingVertical: 4 },\n  icon: { alignSelf: 'center' },\n});\n","import { StyleSheet } from 'react-native';\nimport * as React from 'react';\nimport { Avatar, Card, List } from 'react-native-paper';\n\ninterface ISetupStepCard {\n  completed?: boolean;\n  index?: number;\n  title: string;\n  description?: string;\n  onPress(): void;\n}\n\nexport function SetupStepCard(props: ISetupStepCard) {\n  const { completed, index, title, description, onPress } = props;\n  return (\n    <Card\n      style={StyleSheet.flatten([styles.card, { opacity: completed ? 0.7 : 1 }])}\n      {...{ onPress }}\n      pointerEvents={completed ? 'none' : undefined}\n    >\n      <Card.Content style={styles.content}>\n        <List.Item\n          {...{ title, description }}\n          titleStyle={{ marginBottom: 4 }}\n          left={() =>\n            completed ? <Avatar.Icon icon=\"check\" /> : <Avatar.Text label={`${index}`} />\n          }\n          right={(rightProps) => (\n            <List.Icon {...rightProps} icon=\"chevron-right\" style={styles.icon} />\n          )}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { marginHorizontal: 16, borderRadius: 8, marginVertical: 16 },\n  content: { paddingHorizontal: 4, paddingVertical: 4 },\n  icon: { alignSelf: 'center' },\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport {\n  Dimensions,\n  ImageBackground,\n  RefreshControl,\n  StyleSheet,\n  useWindowDimensions,\n} from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { FAB, IconButton, ProgressBar, useTheme } from 'react-native-paper';\n\nimport NoResults from 'app/components/NoResults';\nimport { View } from 'app/components/Themed';\nimport { LoadState, Permission } from 'app/api/schema.d';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useDropzoneContext, useManifestContext } from 'app/providers';\nimport { LoadDetailsFragment } from 'app/api/operations';\nimport Menu, { MenuItem } from 'app/components/popover/Menu';\n\nimport { useAircrafts, useTickets } from 'app/api/crud';\nimport useRestriction from 'app/hooks/useRestriction';\nimport DragDropWrapper from '../../../../components/slots_table/DragAndDrop/DragDropSlotProvider';\nimport LoadCardSmall from './LoadCard/Small/Card';\nimport LoadCardLarge from './LoadCard/Large/Card';\nimport WeatherConditions from './Weather/WeatherBoard';\nimport LoadingCardLarge from './LoadCard/Large/Loading';\nimport LoadingCardSmall from './LoadCard/Small/Loading';\nimport SetupProfileCard from './SetupProfileCard';\nimport { SetupStepCard } from './FinishSetupSteps';\n\nconst loadingFragment: LoadDetailsFragment = {\n  id: '__LOADING__',\n  availableSlots: 0,\n  createdAt: '',\n  isFull: false,\n  isOpen: false,\n  loadNumber: 0,\n  maxSlots: 0,\n  occupiedSlots: 0,\n  plane: {\n    id: '__LOADING__',\n    maxSlots: 0,\n  },\n  state: LoadState.Open,\n  weight: 0,\n};\n\nconst setupProfileCardFragment = { ...loadingFragment, id: '__SETUP_PROFILE_CARD__' };\nconst setupAircraftsCardFragment = { ...loadingFragment, id: '__SETUP_AIRCRAFT_CARD__' };\nconst setupTicketsCardFragment = { ...loadingFragment, id: '__SETUP_TICKETS_CARD__' };\n\nexport default function ManifestScreen() {\n  const state = useAppSelector((root) => root.global);\n  const manifestScreen = useAppSelector((root) => root.screens.manifest);\n  const dispatch = useAppDispatch();\n  const [isDisplayOptionsOpen, setDisplayOptionsOpen] = React.useState(false);\n  const {\n    dropzone: { dropzone, currentUser, loading, refetch, fetchMore },\n    dialogs: sheets,\n  } = useDropzoneContext();\n  const { manifest, dialogs } = useManifestContext();\n  const { aircrafts, loading: loadingAircrafts } = useAircrafts({ dropzoneId: dropzone?.id });\n  const { ticketTypes, loading: loadingTickets } = useTickets({ dropzone: dropzone?.id });\n\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused && dropzone?.name) {\n      navigation.setOptions({\n        title: dropzone.name,\n      });\n    }\n  }, [isFocused, dropzone?.name, navigation]);\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  React.useEffect(() => {\n    if (dropzone?.primaryColor && dropzone?.primaryColor !== state.theme?.colors?.primary) {\n      dispatch(actions.global.setPrimaryColor(dropzone.primaryColor));\n    }\n\n    if (dropzone?.secondaryColor && dropzone?.secondaryColor !== state.theme?.colors?.accent) {\n      // dispatch(actions.global.setAccentColor(dropzone.secondaryColor));\n      console.log('Accent color disabled');\n    }\n  }, [\n    dispatch,\n    dropzone?.primaryColor,\n    dropzone?.secondaryColor,\n    state.theme?.colors?.accent,\n    state.theme?.colors?.primary,\n  ]);\n\n  const { width } = useWindowDimensions();\n\n  let cardWidth = (manifestScreen.display === 'cards' ? 338 : 550) + 32;\n  cardWidth = cardWidth > width ? width - 32 : cardWidth;\n  const numColumns = Math.floor(width / cardWidth) || 1;\n  const contentWidth = cardWidth * numColumns;\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n\n  const initialLoading = !dropzone || (!manifest?.loads?.length && manifest?.loading);\n\n  const theme = useTheme();\n\n  const data = React.useMemo(\n    () =>\n      [\n        !loadingAircrafts &&\n          (!ticketTypes?.length || !aircrafts?.length) &&\n          canUpdateDropzone &&\n          setupAircraftsCardFragment,\n        !loadingTickets &&\n          (!ticketTypes?.length || !aircrafts?.length) &&\n          canUpdateDropzone &&\n          setupTicketsCardFragment,\n        !initialLoading &&\n        (!currentUser?.hasExitWeight || !currentUser?.hasLicense || !currentUser.user?.name)\n          ? setupProfileCardFragment\n          : null,\n        ...(initialLoading ? new Array(5).fill(loadingFragment) : manifest.loads),\n      ].filter(Boolean),\n    [\n      loadingAircrafts,\n      ticketTypes?.length,\n      aircrafts?.length,\n      canUpdateDropzone,\n      loadingTickets,\n      initialLoading,\n      currentUser?.hasExitWeight,\n      currentUser?.hasLicense,\n      currentUser?.user?.name,\n      manifest.loads,\n    ]\n  );\n\n  const renderItem = React.useCallback(\n    ({ item: load, index }: { item: LoadDetailsFragment; index: number }) => {\n      // 1 means loading, because null and undefined\n      // get filtered out\n      if (load.id === '__LOADING__') {\n        return manifestScreen.display === 'list' ? (\n          <LoadingCardLarge key={`loading-card-${index}`} />\n        ) : (\n          <LoadingCardSmall key={`loading-card-${index}`} />\n        );\n      }\n\n      if (load.id === '__SETUP_PROFILE_CARD__') {\n        return <SetupProfileCard />;\n      }\n\n      if (load.id === '__SETUP_AIRCRAFT_CARD__') {\n        return (\n          <SetupStepCard\n            title=\"Add an aircraft\"\n            completed={!!aircrafts?.length}\n            onPress={sheets.aircraft.open}\n            index={1}\n          />\n        );\n      }\n\n      if (load.id === '__SETUP_TICKETS_CARD__') {\n        return (\n          <SetupStepCard\n            title=\"Create a ticket\"\n            completed={!!ticketTypes?.length}\n            onPress={sheets.ticketType.open}\n            index={2}\n          />\n        );\n      }\n      return manifestScreen.display === 'list' ? (\n        <LoadCardLarge\n          controlsVisible={false}\n          key={`load-${load?.id}`}\n          id={load?.id}\n          onSlotPress={(slot) => {\n            if (load) {\n              dialogs.manifestUser.open({\n                load,\n                slot: { ...(slot || {}), dropzoneUser: slot ? slot?.dropzoneUser : currentUser },\n              });\n            }\n          }}\n          onSlotGroupPress={(slots) => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setFromSlots({ load, slots }));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n            // FIXME: Open manifest group drawer\n          }}\n          onManifest={() => {\n            dialogs.manifestUser.open({ load, slot: { dropzoneUser: currentUser } });\n          }}\n          onManifestGroup={() => {\n            dispatch(actions.forms.manifestGroup.reset());\n            dispatch(actions.forms.manifestGroup.setOpen(true));\n            dispatch(actions.forms.manifestGroup.setField(['load', load]));\n          }}\n        />\n      ) : (\n        <LoadCardSmall\n          key={`load-${load?.id}`}\n          id={load?.id}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'LoadScreen',\n                  params: { loadId: load?.id },\n                },\n              },\n            })\n          }\n        />\n      );\n    },\n    [\n      manifestScreen.display,\n      aircrafts?.length,\n      sheets.aircraft.open,\n      sheets.ticketType.open,\n      ticketTypes?.length,\n      dialogs.manifestUser,\n      currentUser,\n      dispatch,\n      navigation,\n    ]\n  );\n  return (\n    <View style={{ flex: 1 }}>\n      <ProgressBar\n        visible={loading || manifest.loading}\n        indeterminate\n        color={state.theme.colors.primary}\n      />\n\n      <View style={styles.container}>\n        <View\n          style={{\n            width: '100%',\n            flex: 1,\n            height: Dimensions.get('window').height,\n            backgroundColor: theme.colors.background,\n          }}\n        >\n          {dropzone?.banner && (\n            <ImageBackground\n              source={{ uri: dropzone.banner }}\n              style={{ position: 'absolute', top: -8, left: 0, width: '100%', height: 340 }}\n              resizeMode=\"cover\"\n            />\n          )}\n          <DragDropWrapper>\n            <FlatList<LoadDetailsFragment>\n              ListHeaderComponent={() => <WeatherConditions />}\n              ListEmptyComponent={() => (\n                <NoResults\n                  style={{ marginTop: 156 }}\n                  title=\"No loads so far today\"\n                  subtitle=\"How's the weather?\"\n                />\n              )}\n              style={{\n                paddingTop: 35,\n                flex: 1,\n                height: Dimensions.get('window').height,\n              }}\n              testID=\"loads\"\n              keyExtractor={(item, idx) => `load-small-${item?.id || idx}-${idx}`}\n              key={`loads-columns-${numColumns}`}\n              contentContainerStyle={{\n                width: contentWidth,\n                alignSelf: 'center',\n                paddingBottom: 100,\n              }}\n              numColumns={numColumns}\n              {...{ data, renderItem }}\n              refreshControl={<RefreshControl refreshing={loading} onRefresh={() => fetchMore()} />}\n            />\n          </DragDropWrapper>\n        </View>\n        {manifest.permissions.canCreateLoad && (\n          <FAB\n            style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n            small\n            icon=\"plus\"\n            onPress={() => dialogs.load.open({})}\n            label=\"New load\"\n          />\n        )}\n      </View>\n      <View style={styles.header}>\n        <Menu\n          open={isDisplayOptionsOpen}\n          setOpen={setDisplayOptionsOpen}\n          anchor={<IconButton icon=\"cog-outline\" onPress={() => setDisplayOptionsOpen(true)} />}\n        >\n          <MenuItem\n            title=\"Show expanded cards\"\n            bold={manifestScreen.display !== 'cards'}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('list'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n          <MenuItem\n            title=\"Show compact cards\"\n            bold={manifestScreen.display === 'cards'}\n            onPress={() => {\n              dispatch(actions.screens.manifest.setDisplayStyle('cards'));\n              setDisplayOptionsOpen(false);\n            }}\n          />\n        </Menu>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  header: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    padding: 0,\n    width: '100%',\n    position: 'absolute',\n    top: 0,\n    backgroundColor: 'transparent',\n  },\n});\n","import * as React from 'react';\nimport { Divider, List, Switch, useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { DropzoneState, DropzoneStateEvent, Permission } from 'app/api/schema.d';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { IconSource } from 'react-native-paper/lib/typescript/components/Icon';\nimport { useDropzonesContext } from 'app/api/crud';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function SettingsScreen() {\n  const navigation = useNavigation();\n  const notify = useNotifications();\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n\n  const theme = useTheme();\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n  const canUpdateRigInspectionTemplate = useRestriction(Permission.UpdateFormTemplate);\n\n  const { updateVisibility } = useDropzonesContext();\n  const onChangeVisibility = React.useCallback(\n    async (event: DropzoneStateEvent) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const result = await updateVisibility(dropzone.id, event);\n\n      if ('error' in result && result.error) {\n        notify.error(result.error);\n      }\n    },\n    [dropzone?.id, notify, updateVisibility]\n  );\n\n  return (\n    <ScrollableScreen contentContainerStyle={{ backgroundColor: theme.colors.surface }}>\n      <List.Section title=\"Dropzone\" style={{ width: '100%' }}>\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title=\"Configuration\"\n            right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n            onPress={() =>\n              !dropzone\n                ? null\n                : navigation.navigate('Authenticated', {\n                    screen: 'LeftDrawer',\n                    params: {\n                      screen: 'Manifest',\n                      params: {\n                        screen: 'Configuration',\n                        params: {\n                          screen: 'DropzoneSettingsScreen',\n                          params: {\n                            dropzone,\n                          },\n                        },\n                      },\n                    },\n                  })\n            }\n            left={() => <List.Icon color={theme.colors.text} icon=\"information-outline\" />}\n            description=\"Set up name, branding and other settings\"\n          />\n        )}\n\n        <Divider />\n        <List.Item\n          title=\"Permissions\"\n          description=\"Grant or revoke access to define who can do what at this dropzone\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          left={() => <List.Icon color={theme.colors.text} icon=\"lock\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'PermissionScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          title=\"Aircrafts\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'AircraftsScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"airplane\" />}\n        />\n        <List.Item\n          title=\"Rigs\"\n          left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          description=\"Dropzone rigs, e.g tandems and student rigs\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'DropzoneRigsScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        <Divider />\n        <List.Item\n          disabled={!canUpdateRigInspectionTemplate}\n          title=\"Rig Inspection Template\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          left={() => <List.Icon color={theme.colors.text} icon=\"check\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'RigInspectionTemplateScreen',\n                  },\n                },\n              },\n            })\n          }\n        />\n        {!canUpdateDropzone ? null : (\n          <>\n            <Divider />\n            <List.Item\n              title=\"Master Log\"\n              left={() => <List.Icon color={theme.colors.text} icon=\"parachute\" />}\n              right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n              description=\"View historic data for daily operations. Temporarily disabled\"\n              onPress={() =>\n                navigation.navigate('Authenticated', {\n                  screen: 'LeftDrawer',\n                  params: {\n                    screen: 'Manifest',\n                    params: {\n                      screen: 'Configuration',\n                      params: {\n                        screen: 'MasterLogScreen',\n                      },\n                    },\n                  },\n                })\n              }\n            />\n          </>\n        )}\n        <Divider />\n        {!canUpdateDropzone ? null : (\n          <List.Item\n            title={\n              {\n                [DropzoneState.Archived]: 'Re-open dropzone',\n                [DropzoneState.Public]: 'Go offline',\n                [DropzoneState.Private]: 'Go live',\n                [DropzoneState.InReview]: 'Awaiting review',\n              }[dropzone?.status || DropzoneState.Private]\n            }\n            left={() => (\n              <List.Icon\n                color={theme.colors.text}\n                icon={\n                  {\n                    [DropzoneState.Archived]: 'archive',\n                    [DropzoneState.Public]: 'check',\n                    [DropzoneState.Private]: 'upload',\n                    [DropzoneState.InReview]: 'progress-upload',\n                  }[dropzone?.status || DropzoneState.Private] as IconSource\n                }\n              />\n            )}\n            right={() => (\n              <Switch\n                value={[DropzoneState.Public, DropzoneState.InReview].includes(\n                  dropzone?.status || DropzoneState.Private\n                )}\n                disabled={dropzone?.status === DropzoneState.InReview}\n                onValueChange={(value) => {\n                  onChangeVisibility(\n                    value ? DropzoneStateEvent.RequestPublication : DropzoneStateEvent.Unpublish\n                  );\n                }}\n              />\n            )}\n            onPress={() => {\n              switch (dropzone?.status) {\n                case DropzoneState.Archived:\n                  return onChangeVisibility(DropzoneStateEvent.Publish);\n                case DropzoneState.Private:\n                  return onChangeVisibility(DropzoneStateEvent.RequestPublication);\n                case DropzoneState.Public:\n                case DropzoneState.InReview:\n                  return onChangeVisibility(DropzoneStateEvent.Unpublish);\n                default:\n                  return null;\n              }\n            }}\n            description={\n              {\n                [DropzoneState.Archived]:\n                  'Your dropzone has been archived and is not visible to users',\n                [DropzoneState.Public]: 'Your dropzone is available to the public',\n                [DropzoneState.Private]:\n                  'Request a review to make your dropzone available to all users',\n                [DropzoneState.InReview]:\n                  'You may be contacted to verify the legitimacy of your dropzone.',\n              }[dropzone?.status || DropzoneState.Private]\n            }\n            descriptionNumberOfLines={4}\n          />\n        )}\n      </List.Section>\n\n      <List.Section title=\"Tickets\" style={{ width: '100%' }}>\n        <List.Item\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          title=\"Ticket types\"\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'TicketTypesScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"ticket\" />}\n          description=\"Manage ticket prices and accessibility\"\n        />\n        <Divider />\n        <List.Item\n          title=\"Ticket add-ons\"\n          right={() => <List.Icon color={theme.colors.text} icon=\"chevron-right\" />}\n          onPress={() =>\n            navigation.navigate('Authenticated', {\n              screen: 'LeftDrawer',\n              params: {\n                screen: 'Manifest',\n                params: {\n                  screen: 'Configuration',\n                  params: {\n                    screen: 'ExtrasScreen',\n                  },\n                },\n              },\n            })\n          }\n          left={() => <List.Icon color={theme.colors.text} icon=\"plus\" />}\n          description=\"Supplementary tickets like coach, camera, night jumpi\"\n        />\n      </List.Section>\n    </ScrollableScreen>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, RefreshControl, View } from 'react-native';\nimport { FAB, DataTable, ProgressBar, Switch } from 'react-native-paper';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport SwipeActions from 'app/components/layout/SwipeActions';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useTickets } from 'app/api/crud';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { TicketTypeEssentialsFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function TicketTypesScreen() {\n  const state = useAppSelector((root) => root.global);\n  const notify = useNotifications();\n  const {\n    dropzone: { dropzone },\n    dialogs,\n  } = useDropzoneContext();\n  const { ticketTypes, loading, refetch, archiveTicketType, updateTicketType } = useTickets({\n    dropzone: dropzone?.id,\n  });\n\n  const canCreateTicketTypes = useRestriction(Permission.CreateTicketType);\n\n  const createArchiveTicketHandler = React.useCallback(\n    (ticket: TicketTypeEssentialsFragment) => {\n      return async function ArchiveTicketType() {\n        const response = await archiveTicketType(ticket);\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`Archived ${ticket.name}`);\n        }\n      };\n    },\n    [archiveTicketType, notify]\n  );\n\n  const createToggleManifestSelfHandler = React.useCallback(\n    (ticket: TicketTypeEssentialsFragment) => {\n      return async function ToggleManifestSelf() {\n        const response = await updateTicketType(Number(ticket.id), {\n          allowManifestingSelf: !ticket.allowManifestingSelf,\n        });\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`${ticket.name} can ${ticket.allowManifestingSelf ? 'no longer' : 'now'}`);\n        }\n      };\n    },\n    [notify, updateTicketType]\n  );\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={state.theme.colors.primary} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Name</DataTable.Title>\n          <DataTable.Title numeric>Cost</DataTable.Title>\n          <DataTable.Title numeric>Altitude</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {ticketTypes?.map((ticketType) => (\n          <View style={{ height: 46 }}>\n            <SwipeActions\n              rightAction={{\n                label: 'Delete',\n                backgroundColor: 'red',\n                onPress: createArchiveTicketHandler(ticketType),\n              }}\n            >\n              <DataTable.Row\n                onPress={() => {\n                  dialogs.ticketType.open({ original: ticketType });\n                }}\n                pointerEvents=\"none\"\n              >\n                <DataTable.Cell>{ticketType.name}</DataTable.Cell>\n                <DataTable.Cell numeric>${ticketType.cost}</DataTable.Cell>\n                <DataTable.Cell numeric>{ticketType.altitude}</DataTable.Cell>\n                <DataTable.Cell numeric>\n                  <View pointerEvents=\"box-none\">\n                    <Switch\n                      onValueChange={createToggleManifestSelfHandler(ticketType)}\n                      value={!!ticketType.allowManifestingSelf}\n                    />\n                  </View>\n                </DataTable.Cell>\n              </DataTable.Row>\n            </SwipeActions>\n          </View>\n        ))}\n      </DataTable>\n\n      <FAB\n        small\n        style={[styles.fab, { backgroundColor: state.theme.colors.primary }]}\n        visible={canCreateTicketTypes}\n        icon=\"plus\"\n        onPress={() => dialogs.ticketType.open()}\n        label=\"New ticket type\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { Animated, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { Region } from 'react-native-maps';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\nimport * as Location from 'expo-location';\nimport Map from '../map/Map';\n\ninterface ILocationPickerProps {\n  markerSize?: number;\n  labelSize?: number;\n  value: {\n    lat: number;\n    lng: number;\n  };\n  onChange(region: Pick<Region, 'latitude' | 'longitude'>): void;\n}\nexport function LocationWizardStep(props: ILocationPickerProps) {\n  const { markerSize, labelSize, value, onChange } = props;\n  const [center, setCenter] = React.useState<{ lat: number; lng: number }>();\n  const setUsersLocation = React.useCallback(async () => {\n    try {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n      const location = await Location.getCurrentPositionAsync({});\n      console.log('user location', location.coords);\n      setCenter({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  // Start at user location\n  React.useEffect(() => {\n    if (value?.lng === null || value?.lng == null) {\n      setUsersLocation();\n    }\n  }, [setUsersLocation, value?.lng]);\n\n  const opacity = React.useRef(new Animated.Value(0));\n\n  const region =\n    value.lng && value.lng\n      ? {\n          lat: value.lat,\n          lng: value.lng,\n        }\n      : undefined;\n\n  const [isAnimating, setAnimating] = React.useState<boolean>(false);\n  const fadeOut = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 0.0,\n      useNativeDriver: true,\n    })\n  );\n  const fadeIn = React.useRef(\n    Animated.timing(opacity.current, {\n      duration: 100,\n      toValue: 1.0,\n      useNativeDriver: true,\n    })\n  );\n\n  const setCoordinateFade = React.useCallback((visible: boolean) => {\n    setAnimating(true);\n    (visible ? fadeIn : fadeOut).current.start(() => setAnimating(false));\n  }, []);\n\n  const [isDragging, setDragging] = React.useState<boolean>(false);\n\n  return (\n    <Map\n      position={{\n        x: 0,\n        y: 0,\n      }}\n      width=\"100%\"\n      height=\"100%\"\n      mapStyle={{\n        ...StyleSheet.absoluteFillObject,\n        marginTop: -50,\n      }}\n      coords={region}\n      center={center || region}\n      onDragStart={() => {\n        if (!isAnimating) {\n          setCoordinateFade(false);\n          setDragging(true);\n        }\n      }}\n      onDragEnd={(r) => {\n        fadeOut.current?.stop();\n        fadeIn.current?.stop();\n        setAnimating(false);\n        setCoordinateFade(true);\n        setCoordinateFade(true);\n        setDragging(false);\n        onChange({\n          longitude: r.lng,\n          latitude: r.lat,\n        });\n      }}\n      interactive\n    >\n      {!region ? null : (\n        <View style={styles.markerFixed} pointerEvents=\"none\">\n          <MaterialCommunityIcons\n            pointerEvents=\"none\"\n            size={markerSize || 60}\n            style={{\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 5,\n                height: 5,\n              },\n              textShadowRadius: 10,\n              zIndex: 10,\n            }}\n            name={isDragging ? 'map-marker' : 'map-marker-check-outline'}\n          />\n          <Animated.Text\n            style={{\n              fontSize: labelSize || 30,\n              position: 'absolute',\n              bottom: '30%',\n              width: '100%',\n              opacity: opacity.current,\n              textAlign: 'center',\n              color: '#ffffff',\n              textShadowColor: 'rgba(14,14,14,0.8)',\n              textShadowOffset: {\n                width: 3,\n                height: 3,\n              },\n              textShadowRadius: 10,\n            }}\n          >\n            {region.lat.toFixed(5)},{region.lng.toFixed(5)}\n          </Animated.Text>\n        </View>\n      )}\n\n      <TouchableOpacity\n        style={styles.myLocation}\n        onPress={() => {\n          setUsersLocation();\n        }}\n      >\n        <MaterialIcons name=\"my-location\" size={20} />\n      </TouchableOpacity>\n    </Map>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 48,\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    position: 'absolute',\n    fontSize: 30,\n    top: 140,\n    fontWeight: 'bold',\n    color: 'white',\n    left: 0,\n    paddingLeft: 10,\n    width: '100%',\n    paddingBottom: 40,\n    textAlign: 'center',\n    textShadowColor: 'rgba(15, 15, 15, 0.5)',\n    textShadowRadius: 10,\n    textShadowOffset: {\n      width: 2,\n      height: 2,\n    },\n  },\n  markerFixed: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  content: {\n    width: '100%',\n    justifyContent: 'space-around',\n    flexDirection: 'column',\n  },\n  card: {\n    padding: 0,\n    paddingVertical: 16,\n    marginVertical: 16,\n    width: '100%',\n  },\n  myLocation: {\n    position: 'absolute',\n    bottom: 30,\n    right: 30,\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 8,\n  },\n});\n\nexport default LocationWizardStep;\n","/* eslint-disable max-len */\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  TextInput,\n  HelperText,\n  Card,\n  List,\n  Checkbox,\n  useTheme,\n  TouchableRipple,\n  Avatar,\n  Title,\n} from 'react-native-paper';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport LottieView from 'app/components/LottieView';\nimport { useFederationsQuery } from 'app/api/reflection';\nimport useImagePicker from 'app/hooks/useImagePicker';\nimport { useNavigation } from '@react-navigation/core';\nimport ColorPicker from '../../input/colorpicker';\nimport { PhonePreview, WebPreview } from '../../theme_preview';\nimport FederationSelect from '../../input/dropdown_select/FederationSelect';\nimport LocationPicker from '../../input/LocationPicker';\nimport imagePickDark from '../../../../assets/images/image-pick.json';\nimport imagePickLight from '../../../../assets/images/image-pick-light.json';\n\ninterface IDropzoneForm {\n  loading: boolean;\n}\nexport default function DropzoneForm(props: IDropzoneForm) {\n  const { loading: outsideLoading } = props;\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const dispatch = useAppDispatch();\n  const { data, loading } = useFederationsQuery();\n  const theme = useTheme();\n  const pickImage = useImagePicker();\n\n  React.useEffect(() => {\n    if (data?.federations?.length && !state.fields.federation?.value) {\n      dispatch(actions.forms.dropzone.setField(['federation', data.federations[0]]));\n    }\n  }, [data?.federations, dispatch, state.fields.federation?.value]);\n\n  const onPickImage = React.useCallback(async () => {\n    try {\n      const base64 = await pickImage();\n      if (base64) {\n        dispatch(actions.forms.dropzone.setField(['banner', `data:image/jpeg;base64,${base64}`]));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [dispatch, pickImage]);\n\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    navigation.setOptions({ title: state.fields.name.value });\n  }, [navigation, state.fields.name.value]);\n\n  return (\n    <>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={[styles.skeletonCard, { marginTop: 0, paddingHorizontal: 0 }]}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card\n          style={[\n            styles.card,\n            {\n              paddingLeft: 0,\n              paddingRight: 0,\n              paddingHorizontal: 0,\n              marginLeft: 0,\n              width: '100%',\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n          ]}\n        >\n          <Card.Content style={{ alignItems: 'center', justifyContent: 'center' }}>\n            <TouchableRipple onPress={onPickImage} style={{ width: 185 }}>\n              {!state?.fields?.banner?.value ? (\n                <LottieView\n                  style={{ height: 175, width: 175 }}\n                  autoPlay\n                  loop={false}\n                  // eslint-disable-next-line global-require\n                  source={theme.dark ? imagePickLight : imagePickDark}\n                />\n              ) : (\n                <Avatar.Image\n                  size={175}\n                  source={{ uri: state?.fields?.banner?.value }}\n                  style={{\n                    borderWidth: StyleSheet.hairlineWidth,\n                    backgroundColor: theme.colors.primary,\n                  }}\n                />\n              )}\n            </TouchableRipple>\n            <Title>{state.fields.name.value}</Title>\n            <HelperText type=\"info\" style={{ marginTop: 16 }}>\n              Your banner is displayed on the weather board and on the dropzone selection screen\n            </HelperText>\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Subheader>Name</List.Subheader>\n          <TextInput\n            mode=\"outlined\"\n            error={!!state.fields.name.error}\n            value={state.fields.name.value || ''}\n            onChangeText={(newValue) =>\n              dispatch(actions.forms.dropzone.setField(['name', newValue]))\n            }\n          />\n          <HelperText type=\"error\">{state.fields.name.error || ''}</HelperText>\n          <FederationSelect\n            value={state.fields.federation.value}\n            onChange={(value) => dispatch(actions.forms.dropzone.setField(['federation', value]))}\n          />\n          <HelperText type={state.fields.federation.error ? 'error' : 'info'}>\n            {state.fields.federation.error || ''}\n          </HelperText>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={[styles.card, { height: 500, paddingHorizontal: 0 }]}>\n          <List.Subheader>Location</List.Subheader>\n          <Card.Content\n            style={{\n              marginTop: 50,\n              paddingBottom: 50,\n              paddingLeft: 0,\n              paddingRight: 0,\n              flexGrow: 1,\n            }}\n          >\n            <LocationPicker\n              value={\n                state.fields.lat.value && state.fields.lng.value\n                  ? { lat: state.fields.lat.value, lng: state.fields.lng.value }\n                  : undefined\n              }\n              onChange={(region) => {\n                dispatch(actions.forms.dropzone.setField(['lat', region.latitude]));\n                dispatch(actions.forms.dropzone.setField(['lng', region.longitude]));\n              }}\n            />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCard}\n        layout={[{ key: 'box', height: 300, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <Card.Title title=\"Branding\" />\n          <Card.Content\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'flex-end',\n              width: '100%',\n            }}\n          >\n            <PhonePreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n\n            <WebPreview primaryColor={state.fields.primaryColor.value || '#000000'} />\n          </Card.Content>\n        </Card>\n      </SkeletonContent>\n\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardColorPicker}\n        layout={[{ key: 'box', height: 200, width: '100%' }]}\n      >\n        <ColorPicker\n          title=\"Primary color\"\n          helperText=\"Primary color is used for elements like the title bar and the tab bar\"\n          error={state.fields.primaryColor.error || null}\n          onChange={(color) => {\n            dispatch(actions.forms.dropzone.setField(['primaryColor', color]));\n            dispatch(actions.global.setPrimaryColor(color));\n          }}\n          value={state.fields.primaryColor.value || '#000000'}\n        />\n      </SkeletonContent>\n      <SkeletonContent\n        isLoading={loading || outsideLoading}\n        containerStyle={styles.skeletonCardCheckbox}\n        layout={[{ key: 'box', height: 150, width: '100%' }]}\n      >\n        <Card style={styles.card}>\n          <List.Item\n            descriptionNumberOfLines={10}\n            title=\"Use credit system\"\n            // eslint-disable-next-line max-len\n            description=\"Users will be charged credits when a load is marked as landed and can't manifest with insufficient funds.\"\n            onPress={() =>\n              dispatch(\n                actions.forms.dropzone.setField([\n                  'isCreditSystemEnabled',\n                  !state.fields.isCreditSystemEnabled.value,\n                ])\n              )\n            }\n            left={() => (\n              <Checkbox\n                onPress={() =>\n                  dispatch(\n                    actions.forms.dropzone.setField([\n                      'isCreditSystemEnabled',\n                      !state.fields.isCreditSystemEnabled.value,\n                    ])\n                  )\n                }\n                status={state.fields.isCreditSystemEnabled.value ? 'checked' : 'unchecked'}\n              />\n            )}\n          />\n        </Card>\n      </SkeletonContent>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  skeletonCard: {\n    marginVertical: 16,\n    paddingHorizontal: 24,\n    width: '100%',\n  },\n  skeletonCardColorPicker: {\n    marginVertical: 16,\n    minHeight: 200,\n    width: '100%',\n    paddingHorizontal: 24,\n  },\n  skeletonCardCheckbox: {\n    minHeight: 116,\n    marginVertical: 16,\n    paddingHorizontal: 24,\n    width: '100%',\n  },\n  card: {\n    padding: 16,\n    width: '100%',\n  },\n  fields: {\n    flexGrow: 1,\n    display: 'flex',\n    width: '100%',\n  },\n  field: {\n    marginBottom: 8,\n    width: '100%',\n  },\n  subheader: {\n    paddingLeft: 0,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, ProgressBar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useMutationUpdateDropzone from 'app/api/hooks/useMutationUpdateDropzone';\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\n\nimport { Permission } from 'app/api/schema.d';\nimport DropzoneForm from 'app/components/forms/dropzone/DropzoneForm';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { Screen } from 'app/components/layout';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function UpdateDropzoneScreen() {\n  const state = useAppSelector((root) => root.forms.dropzone);\n  const globalState = useAppSelector((root) => root.global);\n  const notify = useNotifications();\n  const dispatch = useAppDispatch();\n\n  const navigation = useNavigation();\n\n  const {\n    dropzone: { dropzone, loading },\n  } = useDropzoneContext();\n\n  React.useEffect(() => {\n    if (dropzone?.id) {\n      dispatch(actions.forms.dropzone.setOpen(dropzone));\n    }\n  }, [dropzone, dropzone?.id, dispatch]);\n\n  const mutationUpdateDropzone = useMutationUpdateDropzone({\n    onError: (message) => notify.error(message),\n    onSuccess: (payload) => {\n      if (payload?.dropzone?.id) {\n        dispatch(\n          actions.global.setDropzone({\n            ...(globalState.currentDropzone || {}),\n            ...payload?.dropzone,\n          })\n        );\n        notify.success(`Your settings have been saved`);\n        navigation.goBack();\n      }\n    },\n  });\n\n  const onSave = React.useCallback(async () => {\n    let hasError = false;\n    const {\n      name,\n      banner,\n      federation,\n      lat,\n      lng,\n      primaryColor,\n      secondaryColor,\n      isCreditSystemEnabled,\n    } = state.fields;\n\n    if (!name.value?.length || name.value?.length < 3) {\n      hasError = true;\n      dispatch(actions.forms.dropzone.setFieldError(['name', 'Name is too short']));\n    }\n\n    if (!hasError) {\n      try {\n        const result = await mutationUpdateDropzone.mutate({\n          id: Number(dropzone?.id),\n          name: name.value as string,\n          lat: lat.value,\n          lng: lng.value,\n          banner: banner.value || null,\n          primaryColor: primaryColor.value,\n          secondaryColor: secondaryColor.value,\n          federation: Number(federation?.value?.id),\n          isCreditSystemEnabled: !!isCreditSystemEnabled,\n        });\n\n        result?.fieldErrors?.map(({ field, message }) => {\n          switch (field) {\n            case 'federation':\n            case 'federation_id':\n              return dispatch(actions.forms.dropzone.setFieldError(['federation', message]));\n            case 'banner':\n              return dispatch(actions.forms.dropzone.setFieldError(['banner', message]));\n            case 'primary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['primaryColor', message]));\n            case 'secondary_color':\n              return dispatch(actions.forms.dropzone.setFieldError(['secondaryColor', message]));\n            case 'is_credit_system_enabled':\n              return dispatch(\n                actions.forms.dropzone.setFieldError(['isCreditSystemEnabled', message])\n              );\n            case 'name':\n              return dispatch(actions.forms.dropzone.setFieldError(['name', message]));\n            case 'is_public':\n              return dispatch(actions.forms.dropzone.setFieldError(['isPublic', message]));\n            default:\n              return null;\n          }\n        });\n        return null;\n      } catch (error) {\n        if (error instanceof Error) {\n          notify.error(error.message);\n        }\n      }\n    }\n    return null;\n  }, [state.fields, dispatch, mutationUpdateDropzone, dropzone?.id, notify]);\n\n  const canUpdateDropzone = useRestriction(Permission.UpdateDropzone);\n\n  const isDirty: boolean = React.useMemo(() => {\n    return ['banner', 'isCreditSystemEnabled', 'name', 'primaryColor', 'lat', 'lng'].some(\n      (field) =>\n        state.original &&\n        field in state.original &&\n        state.original[field as keyof DropzoneEssentialsFragment] !==\n          state.fields[field as keyof typeof state.fields].value\n    );\n  }, [state]);\n  return (\n    <>\n      <ProgressBar indeterminate color={globalState.theme.colors.primary} visible={loading} />\n      <Screen fullWidth={false}>\n        <DropzoneForm loading={loading} />\n      </Screen>\n      <FAB\n        style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n        visible={Boolean(canUpdateDropzone && isDirty)}\n        disabled={!isDirty || mutationUpdateDropzone.loading}\n        small\n        icon=\"check\"\n        onPress={onSave}\n        label=\"Save\"\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  content: {\n    display: 'flex',\n    flexGrow: 1,\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 0,\n    marginTop: 0,\n    width: '100%',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fields: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  field: {\n    marginBottom: 8,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, RefreshControl, View } from 'react-native';\nimport { FAB, DataTable, ProgressBar, useTheme } from 'react-native-paper';\nimport { useIsFocused } from '@react-navigation/core';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport NoResults from 'app/components/NoResults';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport useRestriction from 'app/hooks/useRestriction';\nimport SwipeActions from 'app/components/layout/SwipeActions';\nimport { useAircrafts } from 'app/api/crud';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { PlaneEssentialsFragment } from 'app/api/operations';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function PlanesScreen() {\n  const global = useAppSelector((root) => root.global);\n  const { dialogs } = useDropzoneContext();\n  const { aircrafts, archive, loading, refetch } = useAircrafts({\n    dropzoneId: global.currentDropzoneId?.toString() as string,\n  });\n\n  const notify = useNotifications();\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  const canDeletePlane = useRestriction(Permission.DeletePlane);\n  const canCreatePlane = useRestriction(Permission.CreatePlane);\n  const theme = useTheme();\n\n  const createArchiveAircraftHandler = React.useCallback(\n    (aircraft: PlaneEssentialsFragment) => {\n      return async function ArchiveAircraftHandler() {\n        const response = await archive(aircraft);\n\n        if ('error' in response && response.error) {\n          notify.error(response.error);\n        } else {\n          notify.success(`Archived aircraft ${aircraft.name}`);\n        }\n      };\n    },\n    [archive, notify]\n  );\n\n  const createEditAircraftHandler = React.useCallback(\n    (aircraft: PlaneEssentialsFragment) => {\n      return function ArchiveAircraftHandler() {\n        dialogs.aircraft.open({ original: aircraft });\n      };\n    },\n    [dialogs.aircraft]\n  );\n  return (\n    <ScrollableScreen\n      contentContainerStyle={{ backgroundColor: theme.colors.surface }}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={refetch} />}\n    >\n      <ProgressBar visible={loading} color={global.theme.colors.primary} />\n\n      {aircrafts?.length ? null : (\n        <NoResults\n          title=\"No planes?\"\n          subtitle=\"You need to have at least one plane to manifest loads\"\n        />\n      )}\n\n      {!aircrafts?.length ? null : (\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Registration</DataTable.Title>\n            <DataTable.Title numeric>Slots</DataTable.Title>\n          </DataTable.Header>\n          {aircrafts?.map((plane) => (\n            <View style={{ height: 46 }}>\n              <SwipeActions\n                key={`plane-${plane.id}`}\n                disabled={!canDeletePlane}\n                rightAction={{\n                  label: 'Delete',\n                  backgroundColor: 'red',\n                  onPress: createArchiveAircraftHandler(plane),\n                }}\n              >\n                <DataTable.Row pointerEvents=\"none\" onPress={createEditAircraftHandler(plane)}>\n                  <DataTable.Cell>{plane.name}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.registration}</DataTable.Cell>\n                  <DataTable.Cell numeric>{plane.maxSlots}</DataTable.Cell>\n                </DataTable.Row>\n              </SwipeActions>\n            </View>\n          ))}\n        </DataTable>\n      )}\n\n      <FAB\n        style={[styles.fab, { backgroundColor: global.theme.colors.primary }]}\n        visible={canCreatePlane}\n        small\n        icon=\"plus\"\n        onPress={dialogs.aircraft.open}\n        label=\"New plane\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { View } from 'react-native';\n\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  Divider,\n  FAB,\n  IconButton,\n  Portal,\n  TextInput,\n  useTheme,\n} from 'react-native-paper';\nimport { actions, useAppSelector, useAppDispatch } from '../../../state';\n\nimport { FieldItem } from './slice';\nimport RigInspectionItem from './RigInspectionItem';\n\nexport default function RigInspectionTemplateForm() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const [newItem, setNewItem] = React.useState<(Partial<FieldItem> & { index?: number }) | null>(\n    null\n  );\n  const [fabOpen, setFabOpen] = React.useState(false);\n\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n\n  return (\n    <>\n      {state.fields?.map((item, index) => {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <React.Fragment key={`${item.valueType}${index}`}>\n            <View\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <View style={{ flexGrow: 1 }} onTouchEnd={() => setNewItem({ ...item, index })}>\n                <RigInspectionItem config={item} value={item?.value || ''} onChange={() => null} />\n              </View>\n              <IconButton\n                icon=\"minus-circle\"\n                onPress={() =>\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.filter((_, i) => i !== index)\n                    )\n                  )\n                }\n              />\n            </View>\n            <Divider />\n          </React.Fragment>\n        );\n      })}\n      <Portal>\n        <Dialog visible={!!newItem}>\n          <Dialog.Title>New field</Dialog.Title>\n          <Dialog.Content>\n            <TextInput\n              label=\"Name\"\n              mode=\"outlined\"\n              value={newItem?.label}\n              onChangeText={(text) => setNewItem({ ...newItem, label: text })}\n            />\n\n            <TextInput\n              label=\"Description\"\n              placeholder=\"optional\"\n              mode=\"outlined\"\n              value={newItem?.description}\n              onChangeText={(text) => setNewItem({ ...newItem, description: text })}\n            />\n\n            <Checkbox.Item\n              label=\"This is a required field\"\n              mode=\"android\"\n              onPress={() => setNewItem({ ...newItem, isRequired: !newItem?.isRequired })}\n              status={newItem?.isRequired ? 'checked' : 'unchecked'}\n            />\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setNewItem(null)}>Cancel</Button>\n            <Button\n              onPress={() => {\n                if (newItem?.index !== undefined) {\n                  // If index was provided, replace existing field at that index\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields(\n                      state.fields.map((field, idx) =>\n                        idx === newItem.index ? newItem : field\n                      ) as FieldItem[]\n                    )\n                  );\n                } else {\n                  dispatch(\n                    actions.forms.rigInspectionTemplate.setFields([\n                      ...state.fields,\n                      newItem as FieldItem,\n                    ])\n                  );\n                }\n                setNewItem(null);\n              }}\n            >\n              Save\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n        <FAB.Group\n          open={fabOpen}\n          visible\n          icon={fabOpen ? 'close' : 'plus'}\n          fabStyle={{\n            marginLeft: 16,\n            marginBottom: 48,\n            backgroundColor: theme.colors.primary,\n          }}\n          actions={[\n            {\n              icon: 'pencil',\n              label: 'Text',\n              onPress: () => setNewItem({ valueType: 'string' }),\n            },\n            {\n              icon: 'calendar',\n              label: 'Date',\n              onPress: () => setNewItem({ valueType: 'date' }),\n            },\n            {\n              icon: 'counter',\n              label: 'Number',\n              onPress: () => setNewItem({ valueType: 'integer' }),\n            },\n            {\n              icon: 'checkbox-marked-circle-outline',\n              label: 'Checkbox',\n              onPress: () => setNewItem({ valueType: 'boolean' }),\n            },\n          ]}\n          onStateChange={({ open }) => setFabOpen(open)}\n        />\n      </Portal>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Button, Card } from 'react-native-paper';\n// eslint-disable-next-line max-len\nimport {\n  useRigInspectionTemplateQuery,\n  useUpdateRigInspectionTemplateMutation,\n} from 'app/api/reflection';\n// eslint-disable-next-line max-len\nimport RigInspectionTemplateForm from 'app/components/forms/rig_inspection_template/RigInspectionTemplateForm';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { FormTemplate, Permission } from 'app/api/schema.d';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { actions, useAppDispatch, useAppSelector } from 'app/state';\nimport { useWindowDimensions, View } from 'react-native';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function RigInspectionTemplateScreen() {\n  const state = useAppSelector((root) => root.forms.rigInspectionTemplate);\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const dispatch = useAppDispatch();\n  const notify = useNotifications();\n  const { data } = useRigInspectionTemplateQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n    },\n  });\n\n  const canEdit = useRestriction(Permission.UpdateFormTemplate);\n  const [mutationUpdateForm, mutation] = useUpdateRigInspectionTemplateMutation();\n\n  React.useEffect(() => {\n    if (data?.dropzone?.rigInspectionTemplate) {\n      dispatch(\n        actions.forms.rigInspectionTemplate.setOpen(\n          data.dropzone.rigInspectionTemplate as FormTemplate\n        )\n      );\n    }\n  }, [data?.dropzone?.rigInspectionTemplate, dispatch]);\n\n  const updateForm = React.useCallback(async () => {\n    try {\n      await mutationUpdateForm({\n        variables: {\n          formId: Number(data?.dropzone?.rigInspectionTemplate?.id),\n          dropzoneId: Number(data?.dropzone?.id),\n          definition: JSON.stringify(state.fields),\n        },\n      });\n      notify.success('Template saved');\n    } catch (error) {\n      if (error instanceof Error) {\n        notify.error(error.message);\n      }\n    }\n  }, [\n    mutationUpdateForm,\n    data?.dropzone?.rigInspectionTemplate?.id,\n    data?.dropzone?.id,\n    state.fields,\n    notify,\n  ]);\n\n  const { width } = useWindowDimensions();\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <ScrollableScreen style={{ marginTop: 16, width: width > 550 ? 550 : '100%' }}>\n        <Card style={{ width: '100%' }}>\n          <Card.Title title=\"Rig Inspection Form Template\" />\n\n          <Card.Content>\n            <RigInspectionTemplateForm />\n          </Card.Content>\n        </Card>\n        <Button\n          disabled={!canEdit}\n          mode=\"contained\"\n          loading={mutation.loading}\n          onPress={() => updateForm()}\n          style={{ width: '100%', marginTop: 16, borderRadius: 20 }}\n        >\n          Save template\n        </Button>\n      </ScrollableScreen>\n    </View>\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, RefreshControl } from 'react-native';\nimport { FAB, DataTable, ProgressBar, useTheme } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { Switch } from 'react-native-gesture-handler';\nimport {\n  AvailableRigsDocument,\n  DropzoneUsersDetailedDocument,\n  useDropzoneRigsQuery,\n  useUpdateRigMutation,\n} from 'app/api/reflection';\nimport { Permission } from 'app/api/schema.d';\n\nimport { actions, useAppSelector, useAppDispatch } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport RigDialog from 'app/components/dialogs/Rig';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { useNotifications } from 'app/providers/notifications';\n\nexport default function DropzoneRigsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const rigForm = useAppSelector((root) => root.forms.rig);\n  const notify = useNotifications();\n  const { data, loading, refetch } = useDropzoneRigsQuery({\n    variables: {\n      dropzoneId: state.currentDropzoneId?.toString() as string,\n    },\n  });\n  const dispatch = useAppDispatch();\n  const isFocused = useIsFocused();\n  const [mutationUpdateRig, updateData] = useUpdateRigMutation();\n\n  const canCreateRig = useRestriction(Permission.CreateDropzoneRig);\n  const theme = useTheme();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused, refetch]);\n\n  return (\n    <ScrollableScreen\n      style={styles.container}\n      contentContainerStyle={[styles.content, { backgroundColor: 'white' }]}\n      refreshControl={<RefreshControl refreshing={loading} onRefresh={() => refetch()} />}\n    >\n      <ProgressBar visible={loading || updateData.loading} color={state.theme.colors.primary} />\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title>Container</DataTable.Title>\n          <DataTable.Title numeric>Repack due</DataTable.Title>\n          <DataTable.Title numeric>Canopy size</DataTable.Title>\n          <DataTable.Title numeric>Type</DataTable.Title>\n          <DataTable.Title numeric>Public</DataTable.Title>\n        </DataTable.Header>\n\n        {data?.dropzone?.rigs?.map((rig) => (\n          <DataTable.Row key={`rig-${rig.id}`}>\n            <DataTable.Cell\n              onPress={() => {\n                dispatch(actions.forms.rig.setOpen(rig));\n              }}\n            >\n              {[rig?.make, rig?.model, `#${rig?.serial}`].join(' ')}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>\n              {rig?.repackExpiresAt ? format(rig.repackExpiresAt * 1000, 'yyyy/MM/dd') : '-'}\n            </DataTable.Cell>\n            <DataTable.Cell numeric>{`${rig?.canopySize}`}</DataTable.Cell>\n            <DataTable.Cell numeric>{rig.rigType}</DataTable.Cell>\n            <DataTable.Cell numeric>\n              <Switch\n                onValueChange={async () => {\n                  const { data: result } = await mutationUpdateRig({\n                    variables: {\n                      id: Number(rig.id),\n                      isPublic: !rig.isPublic,\n                    },\n                    refetchQueries: [AvailableRigsDocument, DropzoneUsersDetailedDocument],\n                  });\n\n                  if (result?.updateRig?.errors?.length) {\n                    notify.error(result?.updateRig.errors[0]);\n                  }\n                }}\n                value={!!rig.isPublic}\n              />\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n      </DataTable>\n\n      <RigDialog\n        onClose={() => dispatch(actions.forms.rig.setOpen(false))}\n        onSuccess={() => {\n          dispatch(actions.forms.rig.setOpen(false));\n          refetch();\n        }}\n        dropzoneId={Number(state.currentDropzoneId)}\n        open={rigForm.open}\n      />\n\n      <FAB\n        visible={canCreateRig}\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        small\n        icon=\"plus\"\n        onPress={() => dispatch(actions.forms.rig.setOpen(true))}\n        label=\"New rig\"\n      />\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { useIsFocused, useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, List, useTheme } from 'react-native-paper';\nimport { Tabs, TabScreen } from 'react-native-paper-tabs';\n\nimport { capitalize } from 'lodash';\nimport SkeletonContent from 'app/components/Skeleton';\nimport { useRolesQuery } from 'app/api/reflection';\nimport { useAppSelector } from 'app/state';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport PermissionListItem from 'app/components/permissions/PermissionListItem';\n\n/**\n * \n * @returns\n * \n *  :updateDropzone,\n    :deleteDropzone,\n\n    :createLoad,\n    :updateLoad,\n    :deleteLoad,\n    :readLoad,\n\n    :createSlot,\n    :updateSlot,\n    :deleteSlot,\n\n\n    :createUserSlot,\n    :updateUserSlot,\n    :deleteUserSlot,\n\n    :createStudentSlot,\n    :updateStudentSlot,\n    :deleteStudentSlot,\n\n    :createTicketType,\n    :updateTicketType,\n    :deleteTicketType,\n\n    :createExtra,\n    :updateExtra,\n    :deleteExtra,\n    :readExtra,\n\n    :createPlane,\n    :updatePlane,\n    :deletePlane,\n\n    :createRig,\n    :updateRig,\n    :deleteRig,\n    :readRig,\n\n    :createDropzoneRig,\n    :updateDropzoneRig,\n    :deleteDropzoneRig,\n\n    :readPermissions,\n    :updatePermissions,\n\n    :createPackjob,\n    :updatePackjob,\n    :deletePackjob,\n    :readPackjob,\n\n    :createFormTemplate,\n    :updateFormTemplate,\n    :deleteFormTemplate,\n    :readFormTemplate,\n\n    :readUser,\n    :updateUser,\n    :deleteUser,\n    :createUser,\n\n    :actAsPilot,\n    :actAsLoadMaster,\n    :actAsGCA,\n    :actAsDZSO,\n    :actAsRigInspector,\n\n    :createUserTransaction,\n    :readUserTransactions,\n */\nexport default function DropzonePermissionScreen() {\n  const theme = useTheme();\n  const state = useAppSelector((root) => root.global);\n  const { data, loading, refetch } = useRolesQuery({\n    variables: {\n      dropzoneId: state.currentDropzoneId?.toString() as string,\n    },\n  });\n  const isFocused = useIsFocused();\n\n  const navigation = useNavigation();\n  React.useEffect(() => {\n    if (isFocused) {\n      navigation.setOptions({ title: 'Permissions' });\n      refetch();\n    }\n  }, [isFocused, navigation, refetch]);\n\n  return loading || !data?.dropzone?.roles?.length ? (\n    <View style={{ height: '100%', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n      <View style={{ maxWidth: 550 }}>\n        <SkeletonContent\n          isLoading\n          containerStyle={{\n            width: '100%',\n            flex: 1,\n            flexGrow: 1,\n            paddingHorizontal: 16,\n          }}\n          layout={[\n            {\n              key: 'first',\n              height: 175,\n              marginTop: 70,\n              marginBottom: 35,\n              width: '100%',\n            },\n            { key: 'second', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'third', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'fourth', height: 175, marginBottom: 35, width: '100%' },\n            { key: 'fifth', height: 175, marginBottom: 35, width: '100%' },\n          ]}\n        />\n      </View>\n    </View>\n  ) : (\n    <Tabs\n      defaultIndex={0}\n      mode=\"scrollable\"\n      theme={{\n        ...state.theme,\n        colors: {\n          ...state.theme.colors,\n          primary: state.palette.primary.light,\n        },\n      }}\n    >\n      {data?.dropzone?.roles?.map((role) => (\n        <TabScreen\n          label={capitalize(role.name?.replace('_', ' '))}\n          key={`permission-tab-role-${role.id}`}\n        >\n          <ScrollableScreen\n            contentContainerStyle={{\n              maxWidth: 500,\n              width: '100%',\n              alignSelf: 'center',\n              backgroundColor: 'transparent',\n            }}\n          >\n            <Card style={styles.card}>\n              <List.Subheader>User Management</List.Subheader>\n              <PermissionListItem\n                role={role}\n                permissionName=\"readUser\"\n                description=\"View other users' profiles\"\n                title=\"View Users\"\n              />\n\n              <PermissionListItem\n                role={role}\n                permissionName=\"updateUser\"\n                description=\"Update other users\"\n                title=\"Update Users\"\n              />\n            </Card>\n\n            <Card style={styles.card}>\n              <List.Section title=\"Manifest\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Loads\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"readLoad\"\n                    description=\"See available loads on the manifest screen\"\n                    title=\"View Load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createLoad\"\n                    title=\"Create Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateLoad\"\n                    description=\"Dispatch loads, update load master, change pilot / plane, etc\"\n                    title=\"Update Loads\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteLoad\"\n                    description=\"Permanently delete existing loads\"\n                    title=\"Delete Load\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Manifesting\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createSlot\"\n                    description=\"Create a slot for himself/herself only\"\n                    title=\"Manifest self\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDoubleSlot\"\n                    description=\"Manifest on more than one load at a time\"\n                    title=\"Double Manifest\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateSlot\"\n                    description=\"Update own slot after manifesting themselves\"\n                    title=\"Update own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteSlot\"\n                    description=\"Take themselves off the load\"\n                    title=\"Remove own slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlot\"\n                    description=\"Manifest other users, e.g yourself + others\"\n                    title=\"Manifest other people\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createUserSlotWithSelf\"\n                    description=\"Allow manifesting others only if the user is part of the group\"\n                    title=\"Manifest own groups\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateUserSlot\"\n                    description=\"Update other people's slots on a load\"\n                    title=\"Update other users slot\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteUserSlot\"\n                    description=\"Delete other users' slots off a load\"\n                    title=\"Take others off the load\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createStudentSlot\"\n                    description=\"Manifest a student on a load\"\n                    title=\"Manifest students\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateStudentSlot\"\n                    description=\"Make changes to an already manifested student\"\n                    title=\"Update student slots\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteStudentSlot\"\n                    description=\"Take a student off the load\"\n                    title=\"Remove student slots\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n            <Card style={styles.card}>\n              <List.Section title=\"Administration\" style={{ width: '100%' }}>\n                <List.Accordion title=\"Dropzone\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzone\"\n                    description=\"Change dropzone name, visibility, and branding\"\n                    title=\"Update Dropzone\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzone\"\n                    description=\"Permanently delete dropzone\"\n                    title=\"Delete Dropzone\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Ticket types\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createTicketType\"\n                    description=\"Create new jump tickets\"\n                    title=\"Create Ticket\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateTicketType\"\n                    description=\"Make changes to existing ticket types, including prices\"\n                    title=\"Update Tickets\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteTicketType\"\n                    description=\"Delete existing ticket types\"\n                    title=\"Remove Tickets\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion\n                  title=\"Ticket addons\"\n                  style={{ backgroundColor: theme.colors.surface }}\n                >\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createExtra\"\n                    description=\"Set up new ticket addons\"\n                    title=\"Create Ticket addon\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateExtra\"\n                    description=\"Make changes to existing ticket addons, including prices\"\n                    title=\"Update Ticket addons\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteExtra\"\n                    description=\"Delete existing ticket addons\"\n                    title=\"Remove Ticket addons\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Planes\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createPlane\"\n                    description=\"Add new aircrafts\"\n                    title=\"Create Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updatePlane\"\n                    description=\"Make changes to existing aircrafts\"\n                    title=\"Update Aircraft\"\n                  />\n\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deletePlane\"\n                    description=\"Remove existing aircrafts\"\n                    title=\"Remove Aircraft\"\n                  />\n                </List.Accordion>\n\n                <List.Accordion title=\"Rigs\" style={{ backgroundColor: theme.colors.surface }}>\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"createDropzoneRig\"\n                    description=\"Create dropzone managed rigs, e.g tandem and student rigs\"\n                    title=\"Create Rig\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateDropzoneRig\"\n                    description=\"Make changes to existing student and tandem rigs\"\n                    title=\"Update Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"deleteDropzoneRig\"\n                    description=\"Delete existing student and tandem rigs\"\n                    title=\"Remove Rigs\"\n                  />\n                  <PermissionListItem\n                    role={role}\n                    permissionName=\"updateFormTemplate\"\n                    description=\"Make changes to the rig inspection template\"\n                    title=\"Modify Rig Inspection Form\"\n                  />\n                </List.Accordion>\n              </List.Section>\n            </Card>\n          </ScrollableScreen>\n        </TabScreen>\n      ))}\n    </Tabs>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  card: {\n    width: '100%',\n    marginVertical: 16,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","import * as React from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport { MasterLogInput } from 'app/api/schema.d';\nimport { useNotifications } from 'app/providers/notifications';\nimport { useUpdateMasterLogMutation } from 'app/api/reflection';\nimport { useDropzoneContext } from 'app/providers';\nimport { MasterLogEntryFragment, MasterLogUserFragment } from 'app/api/operations';\nimport { isEqual } from 'lodash';\n\nexport type MasterLogFields = Omit<MasterLogInput, 'dzso'> & {\n  date: string | null;\n  dzso: MasterLogUserFragment | null;\n};\n\nexport const masterLogValidation = yup.object({\n  date: yup.string(),\n  notes: yup.string().nullable().default(null),\n  dzso: yup.object().required('You must select a DZSO'),\n});\n\nexport const EMPTY_FORM_VALUES: Partial<MasterLogFields> = {\n  dzso: null,\n  date: null,\n  notes: '',\n};\n\nexport interface IUseMasterLogFormOpts {\n  initial?: Partial<MasterLogFields>;\n  onSuccess?(entry: MasterLogEntryFragment): void;\n}\n\nexport default function useMasterLogForm(opts: IUseMasterLogFormOpts) {\n  const { initial, onSuccess } = opts;\n  const initialValues = React.useMemo(\n    () => ({ ...EMPTY_FORM_VALUES, ...initial, notes: initial?.notes || '' }),\n    [initial]\n  );\n  const [defaultValues, setDefaultValues] = React.useState(initialValues);\n  const notify = useNotifications();\n  React.useEffect(() => {\n    if (!isEqual(defaultValues, initialValues)) {\n      setDefaultValues(initialValues);\n    }\n  }, [defaultValues, initialValues]);\n\n  const methods = useForm<MasterLogFields>({\n    defaultValues,\n    mode: 'all',\n    resolver: yupResolver(masterLogValidation),\n  });\n\n  const { handleSubmit, reset, setError } = methods;\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [updateMasterLog] = useUpdateMasterLogMutation();\n\n  React.useEffect(() => {\n    reset(defaultValues);\n  }, [reset, defaultValues]);\n\n  const [{ loading }, onManifest] = useAsyncFn(\n    async (fields: MasterLogFields) => {\n      try {\n        const validatedFields = masterLogValidation.validateSync(fields);\n        console.debug({ validatedFields, dropzone });\n        if (!dropzone?.id) {\n          return;\n        }\n\n        const { data: response } = await updateMasterLog({\n          variables: {\n            date: validatedFields.date,\n            dropzone: dropzone?.id,\n            attributes: {\n              dzso: validatedFields.dzso?.id,\n              notes: validatedFields.notes,\n            },\n          },\n        });\n\n        if (response?.updateMasterLog?.fieldErrors) {\n          response?.updateMasterLog?.fieldErrors?.forEach(({ field, message }) => {\n            setError(field as keyof MasterLogFields, { type: 'custom', message });\n          });\n        }\n        if (response?.updateMasterLog?.masterLog?.date) {\n          notify.success(`Master Log entry updated`);\n          onSuccess?.(response?.updateMasterLog?.masterLog);\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          console.error(error);\n          notify.error(error.message);\n        }\n      }\n    },\n    [dropzone, updateMasterLog]\n  );\n\n  const { notes, dzso } = useWatch<MasterLogFields>({ control: methods.control });\n  const isDirty = React.useMemo(\n    () => !isEqual({ notes: initial?.notes, dzso: initial?.dzso?.id }, { notes, dzso: dzso?.id }),\n    [dzso, initial, notes]\n  );\n\n  const onSubmit = React.useMemo(() => handleSubmit(onManifest), [handleSubmit, onManifest]);\n\n  return React.useMemo(\n    () => ({ ...methods, isDirty, onSubmit, loading }),\n    [methods, isDirty, onSubmit, loading]\n  );\n}\n","import * as React from 'react';\nimport { Button, Card, DataTable, List, Paragraph } from 'react-native-paper';\nimport { Linking, View } from 'react-native';\nimport { useNavigation } from '@react-navigation/core';\nimport { Screen } from 'app/components/layout';\nimport DatePicker from 'app/components/input/date_picker/DatePicker';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useMasterLogQuery } from 'app/api/reflection';\nimport { MasterLogQueryVariables } from 'app/api/operations';\nimport { DateTime } from 'luxon';\nimport { FormTextField } from 'app/components/input/text/TextField';\nimport { DropzoneUserSelectField } from 'app/components/input/dropdown_select';\nimport { Permission } from 'app/api/schema.d';\nimport useMasterLogForm from './useForm';\n\nexport default function DropzoneMasterLogScreen() {\n  const { dropzone: currentDropzone } = useDropzoneContext();\n  const [date, setDate] = React.useState(DateTime.local().toISODate());\n  const navigation = useNavigation();\n  const [isEditing, setIsEditing] = React.useState(false);\n  const toggleEditing = React.useCallback(() => setIsEditing(!isEditing), [isEditing]);\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <DatePicker\n          onChange={(time) => setDate(DateTime.fromSeconds(time).toISODate())}\n          value={DateTime.fromISO(date).toSeconds()}\n          color=\"#FFFFFF\"\n        />\n      ),\n    });\n  }, [date, navigation]);\n\n  const variables: MasterLogQueryVariables = React.useMemo(\n    () => ({\n      dropzoneId: currentDropzone?.dropzone?.id?.toString() as string,\n      date,\n    }),\n    [currentDropzone?.dropzone?.id, date]\n  );\n\n  const { data } = useMasterLogQuery({ variables, skip: !currentDropzone?.dropzone?.id });\n  const entry = React.useMemo(() => data?.masterLog, [data?.masterLog]);\n\n  const onDownload = React.useCallback(() => {\n    if (data?.masterLog?.downloadUrl) {\n      Linking.openURL(data?.masterLog?.downloadUrl);\n    }\n  }, [data?.masterLog?.downloadUrl]);\n\n  const { control, onSubmit, isDirty } = useMasterLogForm({\n    initial: {\n      date,\n      notes: entry?.notes,\n      dzso: entry?.dzso,\n    },\n    onSuccess: () => setIsEditing(false),\n  });\n\n  return (\n    <Screen scrollable fullWidth={false}>\n      <View style={{ width: '100%', paddingTop: 48 }}>\n        <Card>\n          <Card.Title\n            right={() => (\n              <Button onPress={onDownload} mode=\"outlined\" style={{ marginRight: 8 }}>\n                Download JSON\n              </Button>\n            )}\n            title={`Master Log ${DateTime.fromISO(date).toLocaleString(\n              DateTime.DATE_MED_WITH_WEEKDAY\n            )}`}\n          />\n          <Card.Content>\n            {isEditing ? (\n              <>\n                <DropzoneUserSelectField\n                  name=\"dzso\"\n                  label=\"DZSO\"\n                  requiredPermissions={[Permission.ActAsDzso]}\n                  {...{ control }}\n                />\n                <FormTextField\n                  mode=\"flat\"\n                  numberOfLines={5}\n                  placeholder=\"Any notes for the day? e.g hours of CI attendance\"\n                  name=\"notes\"\n                  label=\"Notes\"\n                  {...{ control }}\n                />\n              </>\n            ) : (\n              <>\n                <List.Item title={entry?.dzso?.name} description=\"DZSO\" />\n                <List.Subheader>Notes</List.Subheader>\n                <Paragraph style={{ padding: 16 }}>\n                  {entry?.notes || 'No notes for this day'}\n                </Paragraph>\n              </>\n            )}\n          </Card.Content>\n          <Card.Actions style={{ justifyContent: 'space-between' }}>\n            {isEditing && <Button onPress={toggleEditing}>Cancel</Button>}\n            {isEditing && (\n              <Button mode=\"contained\" onPress={onSubmit} disabled={!isDirty}>\n                Save\n              </Button>\n            )}\n            {!isEditing && <Button onPress={toggleEditing}>Edit</Button>}\n          </Card.Actions>\n        </Card>\n        {data?.masterLog?.loads?.map((load) => (\n          <Card style={{ width: '100%', marginVertical: 16 }}>\n            <Card.Title title={`Load ${load.loadNumber}`} />\n            <Card.Content>\n              <List.Item title=\"Pilot\" description={load?.pilot?.name} />\n              <List.Item title=\"GCA\" description={load?.gca?.name} />\n              <List.Item\n                title=\"Plane\"\n                description={\n                  load?.aircraft?.registration\n                    ? `${load?.aircraft?.name} ${load?.aircraft?.registration}`\n                    : 'No plane selected'\n                }\n              />\n              <DataTable>\n                <DataTable.Header>\n                  <DataTable.Title>Name</DataTable.Title>\n                  <DataTable.Title>Jump type</DataTable.Title>\n                  <DataTable.Title numeric>Altitude</DataTable.Title>\n                </DataTable.Header>\n\n                {load.slots?.map((slot) => (\n                  <DataTable.Row>\n                    <DataTable.Cell>{slot?.name}</DataTable.Cell>\n                    <DataTable.Cell>{slot.jumpType}</DataTable.Cell>\n                    <DataTable.Cell numeric>{slot?.altitude}</DataTable.Cell>\n                  </DataTable.Row>\n                ))}\n              </DataTable>\n            </Card.Content>\n          </Card>\n        ))}\n      </View>\n    </Screen>\n  );\n}\n","import { useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useAppSelector } from 'app/state';\n\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useDropzoneTransactionsLazyQuery } from 'app/api/reflection';\nimport { useUserProfile } from 'app/api/crud';\nimport OrderCard from '../../../../components/orders/OrderCard';\n\nexport default function TransactionsScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const [fetchTransactions] = useDropzoneTransactionsLazyQuery();\n  const route = useRoute<{ key: string; name: string; params: { userId: string } }>();\n  const { dropzoneUser, loading, refetch } = useUserProfile({\n    id: route?.params?.userId || currentUser?.id,\n  });\n\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    if (state.currentDropzoneId) {\n      fetchTransactions({\n        variables: { dropzoneId: state.currentDropzoneId?.toString() as string },\n      });\n    }\n  }, [state?.currentDropzoneId, fetchTransactions]);\n\n  return (\n    <>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n\n      <FlatList\n        style={styles.flatList}\n        data={dropzoneUser?.orders?.edges || []}\n        refreshing={false}\n        onRefresh={refetch}\n        keyExtractor={(item) => `transaction-${item?.node?.id}`}\n        renderItem={({ item }) =>\n          !item?.node ? null : (\n            <OrderCard\n              onPress={() =>\n                !item?.node\n                  ? null\n                  : navigation.navigate('Authenticated', {\n                      screen: 'LeftDrawer',\n                      params: {\n                        screen: 'Users',\n                        params: {\n                          screen: 'OrderReceiptScreen',\n                          params: {\n                            orderId: item?.node?.id,\n                            userId: item?.node?.buyer?.id,\n                          },\n                        },\n                      },\n                    })\n              }\n              order={item?.node}\n              showAvatar\n              {...{ dropzoneUser }}\n            />\n          )\n        }\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  flatList: { flex: 1, paddingTop: 0 },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB, DataTable, ProgressBar } from 'react-native-paper';\nimport { useTicketTypeExtrasQuery } from 'app/api/reflection';\nimport { View } from 'app/components/Themed';\nimport { Permission } from 'app/api/schema.d';\n\nimport { useAppSelector } from 'app/state';\nimport NoResults from 'app/components/NoResults';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { TicketTypeAddonDetailsFragment } from 'app/api/operations';\n\nexport default function ExtrasScreen() {\n  const { dropzone: currentDropzone, dialogs } = useDropzoneContext();\n  const globalState = useAppSelector((root) => root.global);\n  const { data, loading } = useTicketTypeExtrasQuery({\n    variables: {\n      dropzoneId: currentDropzone?.dropzone?.id as string,\n    },\n  });\n  const createEditHandler = React.useCallback(\n    (ticketTypeAddon: TicketTypeAddonDetailsFragment) => () =>\n      dialogs.ticketTypeAddon.open({ original: ticketTypeAddon }),\n    [dialogs.ticketTypeAddon]\n  );\n  const canCreateExtras = useRestriction(Permission.CreateExtra);\n\n  return (\n    <>\n      <ProgressBar visible={loading} indeterminate color={globalState.theme.colors.primary} />\n      <View style={styles.container}>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title>Name</DataTable.Title>\n            <DataTable.Title numeric>Cost</DataTable.Title>\n          </DataTable.Header>\n\n          {data?.extras?.map((extra) => (\n            <DataTable.Row onPress={createEditHandler(extra)} pointerEvents=\"none\">\n              <DataTable.Cell>{extra.name}</DataTable.Cell>\n              <DataTable.Cell numeric>${extra.cost}</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n        {!loading && !data?.extras?.length && (\n          <NoResults\n            title=\"No ticket addons\"\n            // eslint-disable-next-line max-len\n            subtitle=\"You can add multiple addons to assign to tickets, e.g outside camera, or coach\"\n          />\n        )}\n\n        <FAB\n          style={[styles.fab, { backgroundColor: globalState.theme.colors.primary }]}\n          visible={canCreateExtras}\n          small\n          icon=\"plus\"\n          onPress={dialogs.ticketTypeAddon.open}\n          label=\"New ticket addon\"\n        />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: 'flex',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n","/* eslint-disable max-len */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport { DropzoneEssentialsFragment } from 'app/api/operations';\nimport { NavigationProp, useNavigation } from '@react-navigation/core';\nimport AppBar from 'app/components/appbar/AppBar';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport SettingsMenuScreen from './settings_menu/SettingsMenuScreen';\nimport TicketTypeSettingsScreen from './ticket_types/TicketTypesScreen';\nimport DropzoneSettingsScreen from './dropzone_settings/DropzoneSettingsScreen';\nimport PlanesScreen from './aircrafts/AircraftsScreen';\nimport RigInspectionTemplateScreen from './rig_inspection_template/RigInspectionTemplateScreen';\nimport DropzoneRigsScreen from './rigs/DropzoneRigsScreen';\nimport DropzonePermissionScreen from './permissions/PermissionsScreen';\nimport DropzoneMasterLogScreen from './master_log/MasterLogScreen';\nimport DropzoneTransactionsScreen from './transactions/DropzoneTransactionsScreen';\nimport ExtrasScreen from './extras/ExtrasScreen';\n\nexport type ConfigurationRoutes = {\n  DropzoneSettingsScreen: { dropzone: DropzoneEssentialsFragment };\n  SettingsMenuScreen: undefined;\n  TicketTypesScreen: undefined;\n  AircraftsScreen: undefined;\n  AircraftScreen: undefined;\n  ExtrasScreen: undefined;\n  RigInspectionTemplateScreen: undefined;\n  DropzoneRigsScreen: undefined;\n  TransactionsScreen: undefined;\n  PermissionScreen: undefined;\n  MasterLogScreen: undefined;\n};\n\nconst Configuration = createStackNavigator<ConfigurationRoutes>();\n\nexport function useConfigurationNavigation() {\n  return useNavigation<NavigationProp<ConfigurationRoutes>>();\n}\nexport default function SettingsTab() {\n  return (\n    <AppSignalBoundary>\n      <Configuration.Navigator\n        screenOptions={{\n          headerShown: true,\n          header: (props) => <AppBar {...props} />,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n      >\n        <Configuration.Screen\n          name=\"SettingsMenuScreen\"\n          component={SettingsMenuScreen}\n          options={{ title: 'Settings' }}\n        />\n        <Configuration.Screen\n          name=\"DropzoneSettingsScreen\"\n          component={DropzoneSettingsScreen}\n          options={{ title: 'Basic settings' }}\n        />\n        <Configuration.Screen\n          name=\"AircraftsScreen\"\n          component={PlanesScreen}\n          options={{ title: 'Planes' }}\n        />\n        <Configuration.Screen\n          name=\"TicketTypesScreen\"\n          component={TicketTypeSettingsScreen}\n          options={{ title: 'Ticket types' }}\n        />\n        <Configuration.Screen\n          name=\"ExtrasScreen\"\n          component={ExtrasScreen}\n          options={{ title: 'Ticket add-ons' }}\n        />\n        <Configuration.Screen\n          name=\"RigInspectionTemplateScreen\"\n          component={RigInspectionTemplateScreen}\n          options={{ title: 'Rig Inspection Form' }}\n        />\n        <Configuration.Screen\n          name=\"DropzoneRigsScreen\"\n          component={DropzoneRigsScreen}\n          options={{ title: 'Dropzone rigs' }}\n        />\n        <Configuration.Screen\n          name=\"TransactionsScreen\"\n          component={DropzoneTransactionsScreen}\n          options={{ title: 'Transactions' }}\n        />\n        <Configuration.Screen\n          name=\"PermissionScreen\"\n          component={DropzonePermissionScreen}\n          options={{ title: 'Permissions' }}\n        />\n        <Configuration.Screen\n          name=\"MasterLogScreen\"\n          component={DropzoneMasterLogScreen}\n          options={{ title: 'Master log' }}\n        />\n      </Configuration.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import { HeaderStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\n\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport AppBar from 'app/components/appbar/AppBar';\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport LoadScreen, { LoadScreenRoute } from './load/LoadScreen';\n// eslint-disable-next-line max-len\nimport WeatherConditionsScreen from './weather_conditions/WeatherConditionsScreen';\nimport JumpRunScreen from './weather_conditions/JumpRunScreen';\nimport WindScreen from './weather_conditions/WindScreen';\n\nimport ManifestScreen from './manifest/ManifestScreen';\n\nimport User, { UserRoutes } from '../user/routes';\nimport Configuration, { ConfigurationRoutes } from '../configuration/routes';\n\nexport type DropzoneRoutes = {\n  WeatherConditionsScreen: undefined;\n  WindScreen: undefined;\n  ManifestScreen: undefined;\n  JumpRunScreen: undefined;\n  DashboardScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n  Configuration: NavigatorScreenParams<ConfigurationRoutes>;\n} & LoadScreenRoute;\n\nconst Manifest = createStackNavigator<DropzoneRoutes>();\n\nexport default function ManifestTab() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <AppSignalBoundary>\n      <Manifest.Navigator\n        screenOptions={{\n          headerShown: !!(globalState.credentials && globalState.currentDropzone),\n          header: (props) => <AppBar {...props} />,\n          headerStyleInterpolator: HeaderStyleInterpolators.forUIKit,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n      >\n        <Manifest.Screen\n          name=\"ManifestScreen\"\n          component={ManifestScreen}\n          options={{ title: 'Manifest' }}\n        />\n\n        <Manifest.Screen\n          name=\"WeatherConditionsScreen\"\n          component={WeatherConditionsScreen}\n          options={{ headerShown: false }}\n        />\n        <Manifest.Screen\n          name=\"WindScreen\"\n          component={WindScreen}\n          options={{ title: 'Winds Aloft' }}\n        />\n        <Manifest.Screen\n          name=\"JumpRunScreen\"\n          component={JumpRunScreen}\n          options={{ title: 'Jump Run' }}\n        />\n        <Manifest.Screen name=\"LoadScreen\" component={LoadScreen} options={{ title: 'Load' }} />\n\n        <Manifest.Screen\n          name=\"User\"\n          component={User}\n          options={{ headerShown: false, presentation: 'modal' }}\n        />\n\n        <Manifest.Screen\n          name=\"Configuration\"\n          component={Configuration}\n          options={{ headerShown: false }}\n        />\n      </Manifest.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import * as React from 'react';\nimport { Avatar, Caption, Card, List } from 'react-native-paper';\nimport { formatDistanceToNow, parseISO } from 'date-fns';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport { useAppSelector } from 'app/state';\n\ninterface INotification {\n  title: string;\n  description?: string | null;\n  icon: string;\n  timestamp: string;\n  onPress?(): void;\n}\n\nexport default function NotificationCard(props: INotification) {\n  const { title, description, icon, timestamp, onPress } = props;\n  const { theme, palette } = useAppSelector((root) => root.global);\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Card style={styles.notification} elevation={3}>\n        <Card.Content style={styles.notificationContent}>\n          <List.Item\n            {...{ title, description }}\n            style={{ width: '100%' }}\n            titleStyle={styles.notificationTitle}\n            descriptionStyle={styles.notificationDescription}\n            left={() => (\n              <Avatar.Icon\n                size={55}\n                {...{ icon }}\n                color={theme.dark ? theme.colors.text : palette.accent.light}\n                style={styles.avatarIcon}\n              />\n            )}\n          />\n          <Caption style={styles.timestamp}>\n            {formatDistanceToNow(parseISO(timestamp), { addSuffix: true })}\n          </Caption>\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarIcon: {\n    backgroundColor: 'transparent',\n    alignSelf: 'center',\n    marginHorizontal: 12,\n  },\n  notificationTitle: {\n    paddingLeft: 4,\n    fontSize: 12,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  notificationDescription: {\n    paddingLeft: 4,\n  },\n  notificationContent: { paddingLeft: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0 },\n  notification: {\n    margin: 0,\n    paddingVertical: 8,\n    marginVertical: 0,\n    borderRadius: 2,\n    width: '100%',\n  },\n  timestamp: {\n    position: 'absolute',\n    top: 4,\n    right: 8,\n  },\n});\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function ManifestedNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useAuthenticatedNavigation();\n  return (\n    <NotificationCard\n      title=\"Manifest\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane\"\n      onPress={() =>\n        notification?.resource?.id &&\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { loadId: notification?.resource?.id },\n        })\n      }\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { useAuthenticatedNavigation } from 'app/screens/authenticated/useAuthenticatedNavigation';\nimport { Load, Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function BoardingCallNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useAuthenticatedNavigation();\n  return (\n    <NotificationCard\n      title={`Load #${(notification.resource as Load).loadNumber} boarding call`}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"airplane-takeoff\"\n      onPress={() =>\n        notification?.resource?.id &&\n        navigation.navigate('Manifest', {\n          screen: 'LoadScreen',\n          initial: false,\n          params: { loadId: notification.resource.id },\n        })\n      }\n    />\n  );\n}\n","import { capitalize } from 'lodash';\nimport * as React from 'react';\nimport { Notification, Transaction } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nfunction getIcon(status?: string | null) {\n  switch (status) {\n    case 'paid':\n      return 'cash';\n    case 'refunded':\n      return 'cash-refund';\n    case 'deposit':\n      return 'bank-transfer-in';\n    case 'withdrawal':\n      return 'bank-transfer-out';\n    default:\n      return 'cash';\n  }\n}\n\nexport default function FundsNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={capitalize((notification.resource as Transaction).status || '')}\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={getIcon((notification.resource as Transaction)?.status)}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport { RigEssentialsFragment } from 'app/api/operations';\nimport NotificationCard from './NotificationCard';\nimport { useNotificationNavigation } from '../../useNotificationNavigation';\n\ninterface INotification {\n  notification: Notification;\n}\n\nexport default function RigInspectionNotification(props: INotification) {\n  const { notification } = props;\n  const navigation = useNotificationNavigation();\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'rig_inspection_requested'\n          ? 'Rig inspection required'\n          : 'Rig inspection completed'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'rig_inspection_requested' ? 'eye' : 'parachute'}\n      onPress={() =>\n        notification.notificationType === 'rig_inspection_requested'\n          ? navigation.navigate('User', {\n              screen: 'RigInspectionScreen',\n              params: {\n                rigId: (notification.resource as unknown as RigEssentialsFragment).id,\n                dropzoneUserId: (notification.resource as unknown as RigEssentialsFragment).owner\n                  ?.id as string,\n              },\n            })\n          : navigation.navigate('User', {\n              screen: 'ProfileScreen',\n              params: {\n                userId: (notification.resource as unknown as RigEssentialsFragment).owner\n                  ?.id as string,\n              },\n            })\n      }\n    />\n  );\n}\n","import { NavigationProp, useNavigation } from '@react-navigation/core';\nimport type { NotificationRoutes } from './routes';\n\nexport function useNotificationNavigation() {\n  return useNavigation<NavigationProp<NotificationRoutes>>();\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function PermissionNotification(props: INotification) {\n  const { notification } = props;\n\n  return (\n    <NotificationCard\n      title={\n        notification.notificationType === 'permission_granted'\n          ? 'Permission granted'\n          : 'Permission revoked'\n      }\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon={notification.notificationType === 'permission_granted' ? 'lock-open' : 'lock-alert'}\n      onPress={() => null}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Notification } from 'app/api/schema.d';\nimport NotificationCard from './NotificationCard';\n\ninterface INotification {\n  notification: Partial<Notification>;\n}\n\nexport default function PublicationRequestNotification(props: INotification) {\n  const { notification } = props;\n  return (\n    <NotificationCard\n      title=\"Publication requested\"\n      description={notification.message}\n      timestamp={notification.createdAt}\n      icon=\"progress-upload\"\n    />\n  );\n}\n","import { useIsFocused } from '@react-navigation/core';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\n// import gql from 'graphql-tag';\n\nimport { FlatList } from 'react-native-gesture-handler';\nimport { NotificationType } from 'app/api/schema.d';\nimport { useNotificationsLazyQuery } from 'app/api/reflection';\nimport { NotificationsQueryVariables } from 'app/api/operations';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { useAppSelector } from '../../../../state';\nimport NoResults from '../../../../components/NoResults';\n\nimport ManifestedCard from './Cards/Manifested';\nimport BoardingCallNotification from './Cards/BoardingCall';\nimport FundsNotification from './Cards/Funds';\nimport RigInspectionNotification from './Cards/RigInspection';\nimport PermissionNotification from './Cards/Permission';\nimport PublicationRequestNotification from './Cards/PublicationRequest';\n\nexport default function NotificationScreen() {\n  const state = useAppSelector((root) => root.global);\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n  const [getNotifications, query] = useNotificationsLazyQuery();\n  const { data, loading } = query;\n  const variables: NotificationsQueryVariables | undefined = React.useMemo(\n    () => (!dropzone?.id ? undefined : { dropzoneId: dropzone?.id }),\n    [dropzone?.id]\n  );\n\n  const fetchNotifications = React.useCallback(() => {\n    if (variables?.dropzoneId) {\n      getNotifications({ variables, fetchPolicy: 'cache-and-network' });\n    }\n  }, [getNotifications, variables]);\n\n  React.useEffect(() => {\n    if (!loading && query?.variables?.dropzoneId !== variables?.dropzoneId) {\n      getNotifications({ variables });\n    }\n  }, [getNotifications, loading, query?.variables?.dropzoneId, variables]);\n\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused && fetchNotifications) {\n      fetchNotifications();\n    }\n  }, [isFocused, fetchNotifications]);\n\n  // const [mutationMarkAsSeen, mutation] = useMutation<Mutation>(MUTATION_MARK_AS_SEEN);\n  console.debug('Notifications', data?.dropzone?.currentUser?.notifications?.edges);\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      {loading && (\n        <ProgressBar color={state.theme.colors.primary} indeterminate visible={loading} />\n      )}\n      <FlatList\n        ListEmptyComponent={() => (\n          <View style={styles.empty}>\n            <NoResults title=\"No notifications\" subtitle=\"Notifications will show up here\" />\n          </View>\n        )}\n        contentContainerStyle={styles.content}\n        onRefresh={fetchNotifications}\n        data={data?.dropzone?.currentUser?.notifications?.edges}\n        refreshing={loading}\n        numColumns={1}\n        keyExtractor={(edge) => `notification-${edge?.node?.id}`}\n        style={StyleSheet.absoluteFill}\n        renderItem={({ item: edge }) => {\n          console.debug('Rendering notification ', edge?.node?.notificationType);\n          switch (edge?.node?.notificationType) {\n            case NotificationType.BoardingCall:\n              return (\n                <BoardingCallNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.UserManifested:\n              console.debug('Renderign manifest card');\n              return <ManifestedCard key={edge.node.id} notification={edge.node as never} />;\n            case NotificationType.CreditsUpdated:\n              return <FundsNotification key={edge.node.id} notification={edge.node as never} />;\n            case NotificationType.RigInspectionRequested:\n            case NotificationType.RigInspectionCompleted:\n              return (\n                <RigInspectionNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.PermissionGranted:\n            case NotificationType.PermissionRevoked:\n              return (\n                <PermissionNotification key={edge.node.id} notification={edge.node as never} />\n              );\n            case NotificationType.PublicationRequested:\n              return (\n                <PublicationRequestNotification\n                  key={edge.node.id}\n                  notification={edge.node as never}\n                />\n              );\n            default:\n              return null;\n          }\n        }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexGrow: 1,\n    paddingBottom: 56,\n    paddingHorizontal: 4,\n  },\n  divider: {\n    height: 1,\n    width: '100%',\n  },\n  empty: {\n    ...StyleSheet.absoluteFillObject,\n    height: '100%',\n    flexGrow: 1,\n    flex: 1,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport AppBar from 'app/components/appbar/AppBar';\n\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport NotificationsScreen from './notifications/NotificationsScreen';\nimport Users, { UserRoutes } from '../user/routes';\n\nexport type NotificationRoutes = {\n  NotificationsScreen: undefined;\n  RigInspectionScreen: undefined;\n  User: NavigatorScreenParams<UserRoutes>;\n};\n\nconst Notification = createStackNavigator<NotificationRoutes>();\n\nexport default function Notifications() {\n  return (\n    <AppSignalBoundary>\n      <Notification.Navigator\n        screenOptions={{\n          headerShown: true,\n          header: (props) => <AppBar {...props} hideWarnings />,\n          cardStyle: {\n            flex: 1,\n          },\n        }}\n        initialRouteName=\"NotificationsScreen\"\n      >\n        <Notification.Screen\n          name=\"NotificationsScreen\"\n          component={NotificationsScreen}\n          options={{ title: 'Notifications' }}\n        />\n\n        <Notification.Screen name=\"User\" component={Users} />\n      </Notification.Navigator>\n    </AppSignalBoundary>\n  );\n}\n","import * as React from 'react';\nimport { View, StyleSheet, LayoutChangeEvent } from 'react-native';\nimport { Card, Text } from 'react-native-paper';\n\nexport interface IStatsProps {\n  title?: string;\n  columns?: number;\n  data: { label: string; value: number | string; color?: string }[];\n}\nexport default function Stats(props: IStatsProps) {\n  const { title, data, columns: cols } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const columns = React.useMemo(() => cols || data?.length || 1, [cols, data?.length]);\n\n  const itemWidth = React.useMemo(() => {\n    if (columns) {\n      return Math.floor((dimensions.width - 32) / columns);\n    }\n    return 50;\n  }, [columns, dimensions.width]);\n\n  const cardHeight = React.useMemo(\n    () => Math.ceil((data?.length || 1) / columns) * 120,\n    [columns, data?.length]\n  );\n  return (\n    <Card style={[styles.card, { height: cardHeight }]} {...{ onLayout }}>\n      <Card.Title title={title} />\n      <Card.Content style={styles.row}>\n        {data?.map(({ label, color, value }, index) => (\n          <View style={{ flexDirection: 'row', width: itemWidth, height: 70 }}>\n            <View style={styles.statistic}>\n              <View style={styles.value}>\n                <Text style={[styles.valueText, { color }]}>{value}</Text>\n              </View>\n              <View style={styles.label}>\n                <Text\n                  style={[styles.labelText, { color }]}\n                  lineBreakMode=\"middle\"\n                  numberOfLines={2}\n                >\n                  {label}\n                </Text>\n              </View>\n            </View>\n            {index === (data?.length || 0) - 1 ? null : <View style={styles.divider} />}\n          </View>\n        ))}\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: { flex: 1, marginVertical: 4, maxWidth: '100%', justifyContent: 'center' },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    flex: 1,\n    // width: 50,\n    // padding: 8,\n    // marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n  },\n  label: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 4,\n    justifyContent: 'flex-start',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import { subDays } from 'date-fns';\nimport * as React from 'react';\nimport ContributionGraph from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css';\nimport { LayoutChangeEvent, ViewProps } from 'react-native';\nimport { Card } from 'react-native-paper';\n\nimport './LoadsByDay.css';\n\ninterface ILoadsByDayProps extends Pick<ViewProps, 'style'> {\n  data: { date: string; count: number }[];\n  startTime: Date;\n}\n\nexport default function LoadsByDay(props: ILoadsByDayProps) {\n  const { data, startTime, style } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n  return (\n    <Card {...{ onLayout, style }}>\n      <Card.Title title=\"Dispatched Loads\" />\n      <Card.Content style={{ height: dimensions.height - 75, width: dimensions.width - 32 }}>\n        <ContributionGraph\n          values={data}\n          showMonthLabels\n          classForValue={(value) => {\n            if (!value?.count) {\n              return 'none';\n            }\n            if (value.count > 3) {\n              return 'many';\n            }\n            if (value.count < 3 && value.count > 0) {\n              return 'few';\n            }\n            return 'none';\n          }}\n          horizontal\n          titleForValue={(value) =>\n            value?.date ? `${value?.date}: ${value?.count} loads` : 'No loads'\n          }\n          startDate={startTime || subDays(new Date(), 365)}\n          endDate={new Date()}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n","import * as React from 'react';\nimport { StyleSheet, FlatList, ScrollView } from 'react-native';\nimport { Card, DataTable, HelperText } from 'react-native-paper';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { format, parseISO } from 'date-fns';\nimport { DropzoneState, DropzoneStateEvent } from 'app/api/schema.d';\nimport { DropzoneStatisticsFragment } from 'app/api/operations';\nimport ChipSelect from 'app/components/input/chip_select/ChipSelect';\nimport Select from 'app/components/input/select/Select';\nimport { useDropzonesContext } from 'app/api/crud/useDropzones';\nimport { useNotifications } from 'app/providers/notifications';\n\ninterface IDropzonesTableProps {\n  dropzones: DropzoneStatisticsFragment[];\n  selected: DropzoneStatisticsFragment[];\n  onChangeSelected(dropzones: DropzoneStatisticsFragment[]): void;\n}\n\nconst stateEvent = {\n  [DropzoneState.Archived]: DropzoneStateEvent.Archive,\n  [DropzoneState.InReview]: DropzoneStateEvent.RequestPublication,\n  [DropzoneState.Private]: DropzoneStateEvent.Unpublish,\n  [DropzoneState.Public]: DropzoneStateEvent.Publish,\n};\n\nfunction DropzoneTableRow(props: { dropzone?: DropzoneStatisticsFragment | null }) {\n  const { dropzone } = props;\n\n  const { updateVisibility } = useDropzonesContext();\n  const notify = useNotifications();\n\n  const onChangeVisibility = React.useCallback(\n    async (state: DropzoneState) => {\n      if (!dropzone?.id) {\n        return;\n      }\n      const result = await updateVisibility(dropzone.id, stateEvent[state]);\n\n      if ('error' in result && result.error) {\n        notify.error(result.error);\n      }\n    },\n    [notify, dropzone?.id, updateVisibility]\n  );\n\n  if (!dropzone) {\n    return null;\n  }\n  return (\n    <DataTable.Row\n      style={{\n        borderLeftColor: dropzone.primaryColor || undefined,\n        borderLeftWidth: 5,\n      }}\n    >\n      <DataTable.Cell style={styles.avatarCell}>\n        <UserAvatar size={20} name={dropzone?.name} image={dropzone.banner} />\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.nameCell}>{dropzone.name}</DataTable.Cell>\n      <DataTable.Cell style={styles.createdCell}>\n        <HelperText type=\"info\">{format(parseISO(dropzone.createdAt), 'dd MMM, HH:mm')}</HelperText>\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.statusCell}>\n        <Select<DropzoneState>\n          value={dropzone.status}\n          options={[\n            { label: 'Archived', value: DropzoneState.Archived },\n            { label: 'Private', value: DropzoneState.Private },\n            { label: 'In Review', value: DropzoneState.InReview },\n            { label: 'Public', value: DropzoneState.Public },\n          ]}\n          onChange={onChangeVisibility}\n        />\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.loadsCell}>\n        {dropzone?.statistics?.loadsCount || 0}\n      </DataTable.Cell>\n      <DataTable.Cell style={styles.usersCell}>\n        {dropzone?.statistics?.activeUserCount || 0}\n      </DataTable.Cell>\n    </DataTable.Row>\n  );\n}\nexport default function DropzonesTable(props: IDropzonesTableProps) {\n  const { dropzones, onChangeSelected, selected } = props;\n\n  return (\n    <Card style={{ flexGrow: 1, width: '100%' }}>\n      <Card.Title title=\"Dropzones\" />\n      <Card.Content style={{ width: '100%' }}>\n        <ChipSelect\n          allowEmpty\n          items={dropzones}\n          onChange={onChangeSelected}\n          value={selected}\n          renderItemLabel={(value) => value.name}\n        />\n        <ScrollView\n          horizontal\n          alwaysBounceVertical={false}\n          showsVerticalScrollIndicator={false}\n          style={{ width: '100%', height: '100%', flexGrow: 1 }}\n          contentContainerStyle={{ flexGrow: 1 }}\n        >\n          <DataTable>\n            <DataTable.Header>\n              <DataTable.Title style={styles.avatarCell}>{null}</DataTable.Title>\n              <DataTable.Title style={styles.nameCell}>Name</DataTable.Title>\n              <DataTable.Title style={styles.createdCell}>Created</DataTable.Title>\n              <DataTable.Title style={styles.statusCell}>Status</DataTable.Title>\n              <DataTable.Title style={styles.loadsCell}>Loads</DataTable.Title>\n              <DataTable.Title style={styles.usersCell}>Active Users</DataTable.Title>\n            </DataTable.Header>\n            <FlatList\n              data={dropzones}\n              renderItem={({ item }) =>\n                !item ? null : <DropzoneTableRow key={`dropzone-row=${item?.id}`} dropzone={item} />\n              }\n            />\n          </DataTable>\n        </ScrollView>\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n  },\n  avatarCell: {\n    flex: 5,\n  },\n  statusCell: {\n    flex: 20,\n  },\n  nameCell: {\n    flex: 40,\n  },\n  loadsCell: {\n    flex: 5,\n  },\n  usersCell: {\n    flex: 5,\n  },\n  createdCell: {\n    flex: 10,\n  },\n});\n","import { AbstractChartConfig } from 'react-native-chart-kit/dist/AbstractChart';\n\nexport const chartConfig: AbstractChartConfig = {\n  backgroundColor: '#e26a00',\n  backgroundGradientFrom: '#fb8c00',\n  backgroundGradientTo: '#ffa726',\n  decimalPlaces: 2, // optional, defaults to 2dp\n  color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  style: {\n    borderRadius: 16,\n  },\n  propsForDots: {\n    r: '6',\n    strokeWidth: '2',\n    stroke: '#ffa726',\n  },\n  backgroundGradientFromOpacity: 0,\n  backgroundGradientToOpacity: 0.5,\n  strokeWidth: 2, // optional, default 3\n  barPercentage: 0.5,\n  useShadowColorFromDataset: false,\n};\n","import { chartConfig } from 'app/constants/ChartConfig';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { LayoutChangeEvent, ViewProps } from 'react-native';\nimport { PieChart } from 'react-native-chart-kit';\nimport { Card } from 'react-native-paper';\n\ninterface IJumpTypePieChart extends Pick<ViewProps, 'style'> {\n  data: { name: string; count: number }[];\n}\n\nconst JUMP_TYPE_COLORS = {\n  angle: '#AA0000',\n  cam: '#FFAA00',\n  ws: '#AAFF00',\n  hnp: '#ABABFF',\n  hp: '#BAFFBA',\n  fs: '#DD00FF',\n  freefly: '#00ABFF',\n};\n\nexport default function LoadsByDay(props: IJumpTypePieChart) {\n  const { data: values, style } = props;\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const onLayout = React.useCallback((event: LayoutChangeEvent) => {\n    setDimensions(event.nativeEvent.layout);\n  }, []);\n\n  const data = React.useMemo(\n    () =>\n      sortBy(values, 'count').map<{\n        name: string;\n        count: number;\n        legendFontColor: string;\n        legendFontSize: number;\n        color: string;\n      }>((stat) => ({\n        ...stat,\n        color:\n          stat?.name && stat?.name in JUMP_TYPE_COLORS\n            ? JUMP_TYPE_COLORS[stat.name as keyof typeof JUMP_TYPE_COLORS]\n            : '#AAA',\n        legendFontColor: '#333',\n        legendFontSize: 15,\n      })),\n    [values]\n  );\n  return (\n    <Card {...{ onLayout, style }}>\n      <Card.Title title=\"Jump types\" />\n      <Card.Content style={{ height: 300 }}>\n        <PieChart\n          {...{ data, chartConfig }}\n          width={(dimensions.width || 400) - 32}\n          height={(dimensions.height || 200) - 75}\n          accessor=\"count\"\n          backgroundColor=\"transparent\"\n          paddingLeft=\"15\"\n          center={[0, 0]}\n          absolute={false}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n","import { useDropzonesStatisticsQuery } from 'app/api/reflection';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport * as React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { successColor, warningColor } from 'app/constants/Colors';\nimport { parseISO, subMonths } from 'date-fns';\nimport Chip from 'app/components/chips/Chip';\nimport { sumBy } from 'lodash';\nimport { DropzoneStatisticsFragment } from 'app/api/operations';\nimport { Card } from 'react-native-paper';\nimport { DropzonesProvider } from 'app/api/crud';\nimport { DropzoneState } from 'app/api/schema.d';\nimport Stats, { IStatsProps } from './statistics/Stats';\nimport LoadsByDay from './statistics/LoadsByDay';\nimport DropzonesTable from './DropzonesTable';\nimport JumpTypePieChart from './statistics/JumpTypePieChart';\n\nenum TimeRange {\n  AllTime = 0,\n  ThreeMonths = 3,\n  SixMonths = 6,\n  Year = 12,\n}\n\nfunction AdminOverviewPage() {\n  const [selectedTimeRange, setTimeRange] = React.useState<TimeRange>();\n\n  const timeRange = React.useMemo(() => {\n    if (selectedTimeRange) {\n      return {\n        startTime: subMonths(new Date(), selectedTimeRange).toISOString(),\n        endTime: new Date().toISOString(),\n      };\n    }\n    return {\n      startTime: new Date(2020, 0, 1).toISOString(),\n      endTime: new Date().toISOString(),\n    };\n  }, [selectedTimeRange]);\n\n  const createTimeRangeHandler = React.useCallback(\n    (range?: TimeRange) => () => {\n      setTimeRange(range);\n    },\n    []\n  );\n\n  const [selectedDropzones, setSelectedDropzones] = React.useState<DropzoneStatisticsFragment[]>();\n\n  const { data } = useDropzonesStatisticsQuery({\n    variables: {\n      timeRange,\n    },\n  });\n  React.useEffect(() => {\n    if (data?.dropzones?.edges?.length && selectedDropzones === undefined) {\n      setSelectedDropzones(\n        data.dropzones.edges.map((edge) => edge?.node as DropzoneStatisticsFragment).filter(Boolean)\n      );\n    }\n  }, [data?.dropzones.edges, selectedDropzones]);\n\n  const summedStatistics = React.useMemo(\n    () => ({\n      revenueCents: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.revenueCentsCount || 0\n      ),\n      loadsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.loadsCount || 0\n      ),\n      cancelledLoadsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.cancelledLoadsCount || 0\n      ),\n      slotsCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.slotsCount || 0\n      ),\n      pilotCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.pilotCount || 0\n      ),\n      dzsoCount: sumBy(selectedDropzones || [], (dropzone) => dropzone?.statistics?.dzsoCount || 0),\n      gcaCount: sumBy(selectedDropzones || [], (dropzone) => dropzone?.statistics?.gcaCount || 0),\n      totalUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.totalUserCount || 0\n      ),\n      activeUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.activeUserCount || 0\n      ),\n      inactiveUserCount: sumBy(\n        selectedDropzones || [],\n        (dropzone) => dropzone?.statistics?.inactiveUserCount || 0\n      ),\n      loadCountByDay: (selectedDropzones || [])\n        .map((dropzone) => dropzone?.statistics?.loadCountByDay || [])\n        .flat(),\n      slotsByJumpType: (selectedDropzones || [])\n        .map((dropzone) => dropzone?.statistics?.slotsByJumpType || [])\n        .flat(),\n    }),\n    [selectedDropzones]\n  );\n  return (\n    <ScrollableScreen stickyHeaderIndices={[0]}>\n      <Card style={styles.controls}>\n        <Card.Content style={{ flexDirection: 'row' }}>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={!selectedTimeRange}\n            onPress={createTimeRangeHandler()}\n          >\n            All time\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.ThreeMonths}\n            onPress={createTimeRangeHandler(TimeRange.ThreeMonths)}\n          >\n            3 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.SixMonths}\n            onPress={createTimeRangeHandler(TimeRange.SixMonths)}\n          >\n            6 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.Year}\n            onPress={createTimeRangeHandler(TimeRange.Year)}\n          >\n            12 months\n          </Chip>\n        </Card.Content>\n      </Card>\n      <View style={StyleSheet.flatten([styles.row, styles.turnaround])}>\n        <Stats\n          title=\"Turn-around\"\n          columns={Platform.OS === 'web' ? undefined : 2}\n          data={\n            [\n              {\n                label: 'Total',\n                color: successColor,\n                value: `$${summedStatistics?.revenueCents || 0}`,\n              },\n              {\n                label: 'Dispatched',\n                value: summedStatistics?.loadsCount || 0,\n              },\n              {\n                label: 'Cancelled',\n                value: summedStatistics?.cancelledLoadsCount || 0,\n              },\n              {\n                label: 'Slots',\n                value: summedStatistics?.slotsCount || 0,\n              },\n            ].filter(Boolean) as IStatsProps['data']\n          }\n        />\n\n        <Stats\n          title=\"Accounts\"\n          columns={Platform.OS === 'web' ? undefined : 3}\n          data={[\n            { label: 'Dropzones', value: data?.dropzones.edges?.length || 0 },\n            { label: 'Users', value: summedStatistics?.totalUserCount || 0 },\n            {\n              label: 'Active',\n              value: summedStatistics?.activeUserCount || 0,\n              color: successColor,\n            },\n            {\n              label: 'Inactive',\n              value: summedStatistics?.inactiveUserCount || 0,\n              color: warningColor,\n            },\n            { label: 'Pilots', value: summedStatistics?.pilotCount || 0 },\n            {\n              label: 'GCA',\n              value: summedStatistics?.gcaCount || 0,\n            },\n            {\n              label: 'DZSO',\n              value: summedStatistics.dzsoCount || 0,\n            },\n          ]}\n        />\n      </View>\n      <View style={StyleSheet.flatten([styles.row, styles.statistics])}>\n        <LoadsByDay\n          style={styles.dispatchedLoadsCard}\n          data={summedStatistics?.loadCountByDay || []}\n          startTime={\n            timeRange?.startTime ? parseISO(timeRange?.startTime) : subMonths(new Date(), 6)\n          }\n        />\n\n        <JumpTypePieChart\n          style={styles.jumpTypesCard}\n          data={summedStatistics?.slotsByJumpType || []}\n        />\n      </View>\n      <View style={StyleSheet.flatten([styles.row, styles.table])}>\n        <DropzonesTable\n          selected={selectedDropzones || []}\n          onChangeSelected={setSelectedDropzones}\n          dropzones={\n            data?.dropzones?.edges?.map((edge) => edge?.node as DropzoneStatisticsFragment) || []\n          }\n        />\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nexport default function AdminOverviewPageWrapper() {\n  return (\n    <DropzonesProvider\n      state={[\n        DropzoneState.Archived,\n        DropzoneState.InReview,\n        DropzoneState.Private,\n        DropzoneState.Public,\n      ]}\n    >\n      <AdminOverviewPage />\n    </DropzonesProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  turnaround: {\n    width: '100%',\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 8,\n    justifyContent: 'space-between',\n    flexWrap: Platform.OS === 'web' ? 'wrap' : 'nowrap',\n  },\n  statistics: {\n    width: '100%',\n    gap: 8,\n    flexWrap: 'wrap',\n  },\n  table: {\n    width: '100%',\n    flex: 8,\n  },\n\n  dispatchedLoadsCard: {\n    height: 300,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 3 / 4 : undefined,\n    marginVertical: 4,\n  },\n  jumpTypesCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 1 / 4 : undefined,\n  },\n\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n    marginTop: 16,\n    flexWrap: 'wrap-reverse',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: 8,\n    marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, FlatList } from 'react-native';\nimport { DataTable, HelperText } from 'react-native-paper';\nimport UserAvatar from 'app/components/UserAvatar';\nimport { format, parseISO } from 'date-fns';\nimport { EventLevel } from 'app/api/schema.d';\nimport { ActivityEssentialsFragment, ActivityQueryVariables } from 'app/api/operations';\n\nconst LEVEL_COLORS = {\n  [EventLevel.Debug]: '#AF00FF',\n  [EventLevel.Error]: '#FF1515',\n  [EventLevel.Info]: '#15A0FF',\n};\n\ninterface IActivityFeedProps extends ActivityQueryVariables {\n  data: ActivityEssentialsFragment[];\n  onFetchMore(): void;\n}\n\nfunction FeedItem(props: { event?: ActivityEssentialsFragment | null }) {\n  const { event } = props;\n  const [expanded, setExpanded] = React.useState(false);\n\n  const onPress = React.useCallback(() => {\n    if (event?.details) {\n      setExpanded(!expanded);\n    }\n  }, [event?.details, expanded]);\n\n  if (!event) {\n    return null;\n  }\n\n  return (\n    <>\n      <DataTable.Row\n        style={{\n          borderLeftColor: LEVEL_COLORS[event?.level || 'info'],\n          borderLeftWidth: 5,\n        }}\n        {...{ onPress }}\n      >\n        <DataTable.Cell style={styles.avatarCell}>\n          <UserAvatar\n            size={20}\n            name={event?.createdBy?.user?.name || 'System'}\n            image={event?.createdBy?.user?.image || undefined}\n          />\n          <HelperText type=\"info\">{format(parseISO(event.createdAt), 'dd MMM, HH:mm')}</HelperText>\n        </DataTable.Cell>\n        <DataTable.Cell style={styles.levelCell}>\n          <HelperText type=\"info\">{event?.level}</HelperText>\n        </DataTable.Cell>\n        <DataTable.Cell style={styles.messageCell}>{event?.message}</DataTable.Cell>\n      </DataTable.Row>\n      {!expanded ? null : (\n        <DataTable.Row\n          style={{\n            borderLeftColor: LEVEL_COLORS[event?.level || 'info'],\n            borderLeftWidth: 5,\n          }}\n        >\n          <DataTable.Cell style={styles.avatarCell}>{null}</DataTable.Cell>\n          <DataTable.Cell style={styles.levelCell}>{null}</DataTable.Cell>\n          <DataTable.Cell style={styles.messageCell}>{event?.details}</DataTable.Cell>\n        </DataTable.Row>\n      )}\n    </>\n  );\n}\nexport default function Feed(props: IActivityFeedProps) {\n  const { data, onFetchMore } = props;\n\n  return (\n    <DataTable>\n      <DataTable.Header>\n        <DataTable.Title style={styles.avatarCell}>Time</DataTable.Title>\n        <DataTable.Title style={styles.levelCell}>Level</DataTable.Title>\n        <DataTable.Title style={styles.messageCell}>Message</DataTable.Title>\n      </DataTable.Header>\n      <FlatList\n        {...{ data }}\n        renderItem={({ item }) =>\n          !item ? null : <FeedItem key={`event-log-row=${item?.id}`} event={item} />\n        }\n        onEndReached={onFetchMore}\n        onEndReachedThreshold={1}\n      />\n    </DataTable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatarCell: {\n    flex: 1,\n  },\n  levelCell: {\n    flex: 1,\n  },\n  messageCell: {\n    flex: 4,\n  },\n});\n","import { useActivityDetailsLazyQuery } from 'app/api/reflection';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Card, List } from 'react-native-paper';\nimport { EventLevel, EventAccessLevel, Permission } from 'app/api/schema.d';\nimport { ActivityEssentialsFragment, ActivityQueryVariables } from 'app/api/operations';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { isEqual, uniqBy } from 'lodash';\nimport ChipSelect from '../input/chip_select/ChipSelect';\nimport Feed from './Feed';\n\ninterface IActivityFeedContainerProps extends ActivityQueryVariables {\n  onChange(variables: Partial<ActivityQueryVariables>): void;\n}\n\nexport default function ActivityFeedContainer(props: IActivityFeedContainerProps) {\n  const { dropzone, accessLevels, levels, timeRange, onChange } = props;\n  const canViewAdminActivity = useRestriction(Permission.ViewAdminActivity);\n  const canViewSystemActivity = useRestriction(Permission.ViewSystemActivity);\n  const canViewUserActivity = useRestriction(Permission.ViewUserActivity);\n\n  const variables: ActivityQueryVariables = React.useMemo(\n    () => ({\n      dropzone,\n      levels,\n      accessLevels,\n      timeRange,\n    }),\n    [accessLevels, dropzone, levels, timeRange]\n  );\n\n  const [getActivity, query] = useActivityDetailsLazyQuery();\n\n  React.useEffect(() => {\n    if (!isEqual(query?.variables, variables)) {\n      getActivity({ variables });\n    }\n  }, [getActivity, query?.variables, variables]);\n\n  const onFetchMore = React.useCallback(() => {\n    if (\n      query?.data?.activity?.pageInfo?.hasNextPage &&\n      !query?.loading &&\n      query?.data?.activity?.pageInfo?.endCursor !== query?.variables?.after\n    ) {\n      query\n        ?.fetchMore({ variables: { after: query?.data?.activity?.pageInfo?.endCursor } })\n        .then((result) => {\n          query?.updateQuery((prev) => ({\n            ...prev,\n            activity: {\n              ...prev?.activity,\n              ...result?.data?.activity,\n              pageInfo: result?.data?.activity?.pageInfo,\n              edges: uniqBy(\n                [...(prev.activity.edges || []), ...(result?.data?.activity?.edges || [])],\n                'node.id'\n              ),\n            },\n          }));\n        });\n    }\n  }, [query]);\n\n  const onChangeEventLevel = React.useCallback(\n    (newLevels: EventLevel[]) =>\n      onChange({\n        levels: newLevels,\n      }),\n    [onChange]\n  );\n\n  const onChangeAccessLevel = React.useCallback(\n    (newAccessLevels: EventAccessLevel[]) => {\n      onChange({\n        accessLevels: newAccessLevels,\n      });\n    },\n    [onChange]\n  );\n\n  console.debug({ accessLevels, timeRange, levels });\n\n  return (\n    <Card style={{ width: '100%' }}>\n      <Card.Title title=\"Events\" />\n      <Card.Content style={{ paddingHorizontal: 0 }}>\n        {(canViewAdminActivity || canViewSystemActivity) && (\n          <View style={styles.controls}>\n            <View>\n              <List.Subheader>Event Type</List.Subheader>\n              <ChipSelect\n                allowEmpty\n                items={\n                  [\n                    canViewAdminActivity && EventAccessLevel.Admin,\n                    canViewUserActivity && EventAccessLevel.User,\n                    canViewSystemActivity && EventAccessLevel.System,\n                  ].filter(Boolean) as EventAccessLevel[]\n                }\n                onChange={onChangeAccessLevel}\n                value={(accessLevels || []) as EventAccessLevel[]}\n                renderItemLabel={(value) =>\n                  Object.keys(EventAccessLevel).find(\n                    (key) => EventAccessLevel[key as keyof typeof EventAccessLevel] === value\n                  )\n                }\n              />\n            </View>\n\n            <View>\n              <List.Subheader>Event Level</List.Subheader>\n              <ChipSelect\n                allowEmpty\n                items={\n                  [\n                    canViewUserActivity && EventLevel.Info,\n                    canViewSystemActivity && EventLevel.Debug,\n                    canViewAdminActivity && EventLevel.Error,\n                  ].filter(Boolean) as EventLevel[]\n                }\n                onChange={onChangeEventLevel}\n                value={(levels || []) as EventLevel[]}\n                renderItemLabel={(value) =>\n                  Object.keys(EventLevel).find(\n                    (key) => EventLevel[key as keyof typeof EventLevel] === value\n                  )\n                }\n              />\n            </View>\n          </View>\n        )}\n\n        <Feed\n          data={\n            query?.data?.activity?.edges?.map((edge) => edge?.node as ActivityEssentialsFragment) ||\n            ([] as ActivityEssentialsFragment[])\n          }\n          {...{ onFetchMore }}\n        />\n      </Card.Content>\n    </Card>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    gap: 8,\n    marginHorizontal: 8,\n    marginBottom: 16,\n  },\n});\n","import { useDropzoneStatisticsQuery } from 'app/api/reflection';\nimport ScrollableScreen from 'app/components/layout/ScrollableScreen';\nimport * as React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { successColor, warningColor } from 'app/constants/Colors';\nimport { subMonths } from 'date-fns';\nimport { EventAccessLevel, EventLevel, Permission } from 'app/api/schema.d';\nimport Chip from 'app/components/chips/Chip';\nimport ActivityFeed from 'app/components/activity/Container';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { ActivityQueryVariables } from 'app/api/operations';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { Card } from 'react-native-paper';\nimport Stats, { IStatsProps } from './statistics/Stats';\nimport LoadsByDay from './statistics/LoadsByDay';\nimport JumpTypePieChart from './statistics/JumpTypePieChart';\n\nenum TimeRange {\n  AllTime = 0,\n  ThreeMonths = 3,\n  SixMonths = 6,\n  Year = 12,\n}\n\nexport default function DashboardPage() {\n  const {\n    dropzone: { dropzone },\n  } = useDropzoneContext();\n\n  const [selectedTimeRange, setTimeRange] = React.useState<TimeRange>();\n  const canViewAdminActivity = useRestriction(Permission.ViewAdminActivity);\n  const canViewSystemActivity = useRestriction(Permission.ViewSystemActivity);\n  const canViewRevenue = useRestriction(Permission.ViewStatistics);\n  const canViewStatistics = useRestriction(Permission.ViewRevenue);\n\n  const timeRange = React.useMemo(() => {\n    if (selectedTimeRange) {\n      return {\n        startTime: subMonths(new Date(), selectedTimeRange),\n        endTime: new Date().toISOString(),\n      };\n    }\n    return undefined;\n  }, [selectedTimeRange]);\n\n  const [activityVariables, setActivityVariables] = React.useState<ActivityQueryVariables>({\n    levels: [\n      canViewSystemActivity && EventLevel.Debug,\n      canViewSystemActivity && EventLevel.Error,\n      EventLevel.Info,\n    ].filter(Boolean) as EventLevel[],\n    accessLevels: [\n      canViewSystemActivity && EventAccessLevel.System,\n      EventAccessLevel.User,\n      canViewAdminActivity && EventAccessLevel.Admin,\n    ].filter(Boolean) as EventAccessLevel[],\n    timeRange,\n  });\n\n  const onChangeActivityVariables = React.useCallback(\n    (vars: ActivityQueryVariables) => setActivityVariables({ ...activityVariables, ...vars }),\n    [activityVariables]\n  );\n\n  const { data } = useDropzoneStatisticsQuery({\n    variables: {\n      dropzoneId: dropzone?.id?.toString() as string,\n      timeRange,\n    },\n    skip: !dropzone?.id,\n  });\n\n  const createTimeRangeHandler = React.useCallback(\n    (range?: TimeRange) => () => {\n      setTimeRange(range);\n    },\n    []\n  );\n  return (\n    <ScrollableScreen stickyHeaderIndices={[0]}>\n      <Card style={styles.controls}>\n        <Card.Content style={{ flexDirection: 'row' }}>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={!selectedTimeRange}\n            onPress={createTimeRangeHandler()}\n          >\n            All time\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.ThreeMonths}\n            onPress={createTimeRangeHandler(TimeRange.ThreeMonths)}\n          >\n            3 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.SixMonths}\n            onPress={createTimeRangeHandler(TimeRange.SixMonths)}\n          >\n            6 months\n          </Chip>\n          <Chip\n            small={Platform.OS !== 'web'}\n            selected={selectedTimeRange === TimeRange.Year}\n            onPress={createTimeRangeHandler(TimeRange.Year)}\n          >\n            12 months\n          </Chip>\n        </Card.Content>\n      </Card>\n      <View style={StyleSheet.flatten([styles.row, styles.turnaround])}>\n        {canViewStatistics && (\n          <Stats\n            title=\"Turn-around\"\n            columns={Platform.OS === 'web' ? undefined : 4}\n            data={\n              [\n                canViewRevenue\n                  ? {\n                      label: 'Total',\n                      color: successColor,\n                      value: `$${data?.dropzone?.statistics?.revenueCentsCount || 0}`,\n                    }\n                  : undefined,\n                {\n                  label: 'Dispatched',\n                  value: data?.dropzone?.statistics?.loadsCount || 0,\n                },\n                {\n                  label: 'Cancelled',\n                  value: data?.dropzone?.statistics?.cancelledLoadsCount || 0,\n                },\n                {\n                  label: 'Slots',\n                  value: data?.dropzone?.statistics?.slotsCount || 0,\n                },\n              ].filter(Boolean) as IStatsProps['data']\n            }\n          />\n        )}\n\n        <Stats\n          title=\"Roles\"\n          data={[\n            { label: 'Pilots', value: data?.dropzone?.statistics?.pilotCount || 0 },\n            {\n              label: 'GCA',\n              value: data?.dropzone?.statistics?.gcaCount || 0,\n            },\n            {\n              label: 'DZSO',\n              value: data?.dropzone?.statistics.dzsoCount || 0,\n            },\n          ]}\n        />\n        {canViewStatistics && (\n          <Stats\n            title=\"Users\"\n            data={[\n              { label: 'Total', value: data?.dropzone?.statistics?.totalUserCount || 0 },\n              {\n                label: 'Active',\n                value: data?.dropzone?.statistics?.activeUserCount || 0,\n                color: successColor,\n              },\n              {\n                label: 'Inactive',\n                value: data?.dropzone?.statistics?.inactiveUserCount || 0,\n                color: warningColor,\n              },\n            ]}\n          />\n        )}\n      </View>\n      {canViewStatistics && (\n        <View style={StyleSheet.flatten([styles.row, styles.statistics])}>\n          <LoadsByDay\n            style={styles.dispatchedLoadsCard}\n            data={data?.dropzone?.statistics?.loadCountByDay || []}\n            startTime={timeRange?.startTime || subMonths(new Date(), 6)}\n          />\n          <JumpTypePieChart\n            style={styles.jumpTypesCard}\n            data={data?.dropzone?.statistics?.slotsByJumpType || []}\n          />\n        </View>\n      )}\n      <View style={StyleSheet.flatten([styles.row, styles.table])}>\n        <ActivityFeed\n          {...activityVariables}\n          {...{ timeRange }}\n          onChange={onChangeActivityVariables}\n          dropzone={dropzone?.id}\n        />\n      </View>\n    </ScrollableScreen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  controls: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  turnaround: {\n    width: '100%',\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 8,\n    justifyContent: 'space-between',\n    flexWrap: Platform.OS === 'web' ? 'wrap' : 'nowrap',\n  },\n  statistics: {\n    width: '100%',\n    gap: 8,\n    flexWrap: 'wrap',\n  },\n  table: {\n    width: '100%',\n    flex: 8,\n  },\n\n  dispatchedLoadsCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 3 / 4 : undefined,\n  },\n  jumpTypesCard: {\n    height: 300,\n    marginVertical: 4,\n    width: Platform.OS === 'web' ? undefined : '100%',\n    flex: Platform.OS === 'web' ? 1 / 4 : undefined,\n  },\n\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    width: '100%',\n    alignItems: 'center',\n    gap: 8,\n    marginTop: 16,\n    flexWrap: 'wrap-reverse',\n  },\n  statistic: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: 8,\n    marginHorizontal: 8,\n  },\n  divider: {\n    height: '100%',\n    width: StyleSheet.hairlineWidth,\n    backgroundColor: '#FAFAFA',\n  },\n  value: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  labelText: {\n    fontSize: 13,\n    fontWeight: 'bold',\n  },\n  valueText: {\n    fontSize: 16,\n  },\n});\n","import { HeaderStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\n\nimport * as React from 'react';\nimport { useAppSelector } from 'app/state';\nimport AppBar from 'app/components/appbar/AppBar';\nimport OverviewScreen from './AdminOverview';\nimport DashboardScreen from './DropzoneOverview';\n\nexport type OverviewRoutes = {\n  OverviewScreen: undefined;\n  DashboardScreen: undefined;\n};\n\nconst Overview = createStackNavigator<OverviewRoutes>();\n\nexport default function OverviewTab() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Overview.Navigator\n      screenOptions={{\n        headerShown: !!(globalState.credentials && globalState.currentDropzone),\n        header: (props) => <AppBar {...props} />,\n        headerStyleInterpolator: HeaderStyleInterpolators.forUIKit,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      <Overview.Screen\n        name=\"DashboardScreen\"\n        component={DashboardScreen}\n        options={{ title: 'Dashboard' }}\n      />\n      <Overview.Screen\n        name=\"OverviewScreen\"\n        component={OverviewScreen}\n        options={{ title: 'Overview' }}\n      />\n    </Overview.Navigator>\n  );\n}\n","import { AnimatedTabBarNavigator } from 'react-native-animated-nav-tab-bar';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport type { AuthenticatedRoutes } from './routes';\n\nexport default (AnimatedTabBarNavigator as typeof createBottomTabNavigator)<AuthenticatedRoutes>();\n","import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\n\nimport { useAppSelector } from 'app/state';\nimport useRestriction from 'app/hooks/useRestriction';\nimport { ModerationRole, Permission } from 'app/api/schema.d';\n\nimport { useTheme } from 'react-native-paper';\n\nimport { NavigatorScreenParams } from '@react-navigation/core';\nimport { useDropzoneContext } from 'app/providers/dropzone/context';\nimport { AppSignalBoundary } from 'app/components/app_signal';\nimport ManifestTab, { DropzoneRoutes } from './dropzone/routes';\nimport UsersTab, { UserRoutes } from './user/routes';\nimport NotificationsTab, { NotificationRoutes } from './notifications/routes';\nimport OverviewTab, { OverviewRoutes } from './overview/routes';\n\nimport BottomTab from './TabBar';\n\nexport type AuthenticatedRoutes = {\n  Manifest: NavigatorScreenParams<DropzoneRoutes>;\n  Overview: NavigatorScreenParams<OverviewRoutes>;\n  Users: NavigatorScreenParams<UserRoutes>;\n  Notifications: NavigatorScreenParams<NotificationRoutes>;\n};\n\nexport default function AuthenticatedTabBar() {\n  const { palette } = useAppSelector((root) => root.global);\n\n  const {\n    dropzone: { currentUser },\n  } = useDropzoneContext();\n  const isAdmin = currentUser?.user?.moderationRole !== ModerationRole.User;\n  const canViewUsers = useRestriction(Permission.ReadUser);\n  const canViewDashboard = useRestriction(Permission.ViewStatistics);\n\n  const theme = useTheme();\n\n  const screenOptions = React.useMemo(\n    () => ({\n      tabBarActiveTintColor: theme.colors.primary,\n      tabBarInactiveBackgroundColor: theme.dark ? theme.colors.backdrop : theme.colors.surface,\n      tabBarActiveBackgroundColor: theme.colors.surface,\n      tabBarInactiveTintColor: '#CCCCCC',\n      tabBarShowLabel: Platform.OS !== 'web',\n      headerShown: false,\n      tabBarStyle: {\n        backgroundColor: theme.dark ? theme.colors.background : '#FFFFFF',\n        borderTopWidth: StyleSheet.hairlineWidth,\n        borderTopColor: '#CCCCCC',\n      },\n    }),\n    [\n      theme.colors.backdrop,\n      theme.colors.background,\n      theme.colors.primary,\n      theme.colors.surface,\n      theme.dark,\n    ]\n  );\n\n  return (\n    <AppSignalBoundary>\n      <BottomTab.Navigator\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        appearance={{\n          tabBarBackground: theme.colors.surface,\n          topPadding: 16,\n          shadow: true,\n          bottomPadding: 16,\n        }}\n        tabBarOptions={{\n          activeTintColor: '#FFFFFF',\n          inactiveTintColor: palette.primary.main,\n          activeBackgroundColor: palette.primary.main,\n        }}\n        initialRouteName=\"Manifest\"\n        {...{ screenOptions }}\n      >\n        {(canViewDashboard || isAdmin) && (\n          <BottomTab.Screen\n            name=\"Overview\"\n            component={OverviewTab}\n            options={{\n              tabBarIcon: ({ focused, color, size }) => (\n                <MaterialCommunityIcons\n                  name=\"view-dashboard-outline\"\n                  {...{ size, color }}\n                  style={[styles.icon, focused ? styles.iconActive : undefined]}\n                />\n              ),\n              unmountOnBlur: false,\n            }}\n          />\n        )}\n        <BottomTab.Screen\n          name=\"Manifest\"\n          component={ManifestTab}\n          options={{\n            tabBarIcon: ({ focused, color, size }) => (\n              <MaterialCommunityIcons\n                name=\"airplane\"\n                {...{ size, color }}\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n              />\n            ),\n            unmountOnBlur: false,\n          }}\n        />\n        <BottomTab.Screen\n          name=\"Notifications\"\n          component={NotificationsTab}\n          options={{\n            tabBarIcon: ({ focused, color, size }) => (\n              <MaterialCommunityIcons\n                name=\"bell-outline\"\n                style={[styles.icon, focused ? styles.iconActive : undefined]}\n                {...{ size, color }}\n              />\n            ),\n            unmountOnBlur: true,\n          }}\n        />\n        {canViewUsers && (\n          <BottomTab.Screen\n            name=\"Users\"\n            component={UsersTab}\n            options={{\n              tabBarIcon: ({ size, color, focused }) => (\n                <MaterialCommunityIcons\n                  {...{ size, color }}\n                  name=\"account-group-outline\"\n                  style={[styles.icon, focused ? styles.iconActive : undefined]}\n                />\n              ),\n              unmountOnBlur: true,\n            }}\n          />\n        )}\n      </BottomTab.Navigator>\n    </AppSignalBoundary>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    opacity: 0.75,\n  },\n  iconActive: {\n    opacity: 1.0,\n  },\n  label: {\n    color: '#FFFFFF',\n    fontSize: 12,\n  },\n});\n","import { NavigatorScreenParams } from '@react-navigation/native';\nimport * as React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport DrawerMenu from 'app/components/drawer/Drawer';\nimport Authenticated, { AuthenticatedRoutes } from '../authenticated/routes';\n\nexport type LeftDrawerRoutes = {\n  LeftDrawer: NavigatorScreenParams<AuthenticatedRoutes>;\n};\n\nconst Drawer = createDrawerNavigator<LeftDrawerRoutes>();\n\nexport default function DrawerNavigator() {\n  const drawerContent = React.useCallback(() => <DrawerMenu />, []);\n  return (\n    <Drawer.Navigator\n      {...{ drawerContent }}\n      screenOptions={{ drawerType: 'back', headerShown: false }}\n    >\n      <Drawer.Screen name=\"LeftDrawer\" component={Authenticated} />\n    </Drawer.Navigator>\n  );\n}\n","import { LinkingOptions, NavigatorScreenParams } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n/* eslint-disable no-nested-ternary */\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport NotFoundScreen from './NotFoundScreen';\nimport { useAppSelector } from '../state/store';\n\nimport Limbo, { LimboRoutes } from './limbo/routes';\nimport Unauthenticated, { UnauthenticatedRoutes } from './unauthenticated/routes';\nimport Wizards, { WizardRoutes } from './wizards/routes';\nimport LeftDrawer, { LeftDrawerRoutes } from './drawers/UserDrawer';\n\nexport const options: LinkingOptions<ReactNavigation.RootParamList> = {\n  prefixes: [\n    Linking.makeUrl('/'),\n    'https://www.openmanifest.org',\n    'https://staging.openmanifest.org',\n    'openmanifest://',\n    'http://localhost:19006',\n  ],\n  config: {\n    screens: {\n      Authenticated: {\n        screens: {\n          LeftDrawer: {\n            screens: {\n              Overview: {\n                screens: {\n                  DashboardScreen: '/dropzone/dashboard',\n                  OverviewScreen: '/overview',\n                },\n              },\n              Manifest: {\n                screens: {\n                  ManifestScreen: '/dropzone/manifest',\n                  DashboardScreen: '/dropzone/overview',\n                  User: {\n                    screens: {\n                      EquipmentScreen: '/dropzone/manifest/users/:userId/equipment/',\n                      OrderReceiptScreen:\n                        '/dropzone/manifest/users/:userId/orders/:orderId/receipts',\n                      ProfileScreen: '/dropzone/manifest/users/:userId',\n                      OrdersScreen: '/dropzone/manifest/users/:userId/orders',\n                      RigInspectionScreen:\n                        '/dropzone/manifest/users/:dropzoneUserId/rig/:rigId/inspection',\n                      UserListScreen: '/dropzone/manifest/users',\n                    },\n                  },\n                  Configuration: {\n                    screens: {\n                      AircraftScreen: '/dropzone/configuration/aircraft/:planeId',\n                      TicketTypesScreen: '/dropzone/configuration/ticket-types',\n                      DropzoneRigsScreen: '/dropzone/configuration/rigs',\n                      ExtrasScreen: '/dropzone/ticket-types/extra',\n                      MasterLogScreen: '/dropzone/master-log',\n                      SettingsMenuScreen: '/dropzone/configuration',\n                      AircraftsScreen: '/dropzone/configuration/aircrafts',\n                      DropzoneSettingsScreen: '/dropzone/configuration/basic',\n                      PermissionScreen: '/dropzone/configuration/permissions',\n                      RigInspectionTemplateScreen: '/dropzone/configuration/rig-inspection',\n                      TransactionsScreen: '/dropzone/transactions',\n                    },\n                  },\n                  JumpRunScreen: '/dropzone/weather/jumprun',\n                  WeatherConditionsScreen: '/dropzone/weather',\n                  LoadScreen: '/dropzone/load/:loadId',\n                  WindScreen: '/dropzone/weather/winds',\n                },\n              },\n              Users: {\n                screens: {\n                  UserListScreen: '/users',\n                  ProfileScreen: '/user/:userId',\n                  EquipmentScreen: '/user/:userId/equipment',\n                  OrdersScreen: '/user/:userId/transactions',\n                  OrderReceiptScreen: '/user/:userId/transactions/:orderId/receipt',\n                  RigInspectionScreen: '/user/:dropzoneUserId/rig-inspection/:rig',\n                },\n              },\n              Notifications: {\n                screens: {\n                  NotificationsScreen: '/notifications',\n                },\n              },\n            },\n          },\n        },\n      },\n      Limbo: {\n        screens: {\n          DropzoneSelectScreen: '/select-dropzone',\n        },\n      },\n      Unauthenticated: {\n        screens: {\n          LoginScreen: '/login',\n          SignUpScreen: '/signup',\n          SignUpWizard: '/user-setup',\n        },\n      },\n      Wizards: {\n        screens: {\n          ConfirmUserScreen: '/confirm',\n          RecoverPasswordScreen: '/recover-password',\n          ChangePasswordScreen: '/change-password',\n          DropzoneWizardScreen: '/setup',\n          User: {\n            screens: {\n              UserListScreen: '/modal/users',\n              ProfileScreen: '/modal/user/:userId',\n              EquipmentScreen: '/modal/user/:userId/equipment',\n              OrdersScreen: '/modal/user/:userId/transactions',\n              OrderReceiptScreen: '/modal/user/:userId/transactions/:orderId/receipt',\n              RigInspectionScreen: '/modal/user/:dropzoneUserId/rig-inspection/:rig',\n            },\n          },\n        },\n      },\n      // FIXME: Remove in release\n      // NotFound: '*',\n    },\n  },\n};\n\nexport type Routes = {\n  Authenticated: NavigatorScreenParams<LeftDrawerRoutes>;\n  Unauthenticated: NavigatorScreenParams<UnauthenticatedRoutes>;\n  Limbo: NavigatorScreenParams<LimboRoutes>;\n  Wizards: NavigatorScreenParams<WizardRoutes>;\n  NotFound: undefined;\n};\n\nconst Stack = createStackNavigator<Routes>();\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace ReactNavigation {\n    // eslint-disable-next-line @typescript-eslint/no-empty-interface\n    interface RootParamList extends Routes {}\n  }\n}\n\nexport default function RootNavigator() {\n  const globalState = useAppSelector((root) => root.global);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: {\n          flex: 1,\n        },\n      }}\n    >\n      {globalState.credentials ? (\n        globalState.currentDropzone ? (\n          <Stack.Screen name=\"Authenticated\" component={LeftDrawer} />\n        ) : (\n          <Stack.Screen name=\"Limbo\" component={Limbo} />\n        )\n      ) : (\n        <Stack.Screen name=\"Unauthenticated\" component={Unauthenticated} />\n      )}\n      <Stack.Screen name=\"Wizards\" component={Wizards} />\n\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport * as React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ActivityIndicator, ProgressBar } from 'react-native-paper';\nimport { View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { PortalProvider } from '@gorhom/portal';\n\nimport './bootstrap';\nimport Apollo from 'app/api/Apollo';\nimport { NotificationsProvider } from 'app/providers/notifications';\nimport Wrapper from './EntrypointWrapper';\n\nimport {\n  ExpoUpdatesProvider,\n  DropzonesProvider,\n  PushNotificationsProvider,\n  ThemeProvider,\n} from './providers';\n\nimport { useRouteChange, useAppearanceListener, useCachedResources } from './hooks';\n\nimport { store, persistor, useAppSelector } from '../state/store';\nimport ImageViewer from '../components/dialogs/ImageViewer/ImageViewer';\n\nimport RootNavigator, { options as LinkingConfiguration } from '../screens/routes';\nimport {\n  AppSignalBoundary,\n  AppSignalProvider,\n  AppSignalSessionTagger,\n} from '../components/app_signal';\n\nfunction Content() {\n  useAppearanceListener();\n  const state = useAppSelector((root) => root.global);\n  const onRouteChange = useRouteChange();\n\n  return (\n    <AppSignalProvider>\n      <AppSignalBoundary>\n        <ExpoUpdatesProvider>\n          <React.Suspense\n            fallback={\n              <View style={{ flex: 1, flexGrow: 1 }}>\n                <ProgressBar indeterminate color={state?.theme?.colors?.primary} visible />\n              </View>\n            }\n          >\n            <Apollo>\n              <ThemeProvider>\n                <GestureHandlerRootView style={{ flex: 1 }}>\n                  <PortalProvider>\n                    <SafeAreaProvider>\n                      <ImageViewer />\n                      <NotificationsProvider>\n                        <NavigationContainer\n                          onStateChange={onRouteChange}\n                          linking={LinkingConfiguration}\n                          theme={state.theme as unknown as never}\n                        >\n                          <Wrapper>\n                            <DropzonesProvider>\n                              <AppSignalSessionTagger>\n                                <PushNotificationsProvider>\n                                  <RootNavigator />\n                                </PushNotificationsProvider>\n                              </AppSignalSessionTagger>\n                            </DropzonesProvider>\n                          </Wrapper>\n                        </NavigationContainer>\n\n                        <StatusBar />\n                      </NotificationsProvider>\n                    </SafeAreaProvider>\n                  </PortalProvider>\n                </GestureHandlerRootView>\n              </ThemeProvider>\n            </Apollo>\n          </React.Suspense>\n        </ExpoUpdatesProvider>\n      </AppSignalBoundary>\n    </AppSignalProvider>\n  );\n}\nfunction App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    console.debug('[App] Loading resources and rendering nothing');\n    return null;\n  }\n  return (\n    <Provider store={store}>\n      <PersistGate\n        persistor={persistor}\n        loading={\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <ActivityIndicator size=\"large\" />\n          </View>\n        }\n      >\n        <Content />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import * as React from 'react';\nimport { Appearance } from 'react-native';\nimport { useAppSelector, useAppDispatch } from 'app/state/store';\nimport { actions } from 'app/state';\n\nexport default function useAppearance() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  const listener = React.useRef<ReturnType<typeof Appearance.addChangeListener>>(\n    Appearance.addChangeListener(({ colorScheme }) => {\n      if (colorScheme) {\n        dispatch(actions.global.setAppearance(colorScheme));\n      }\n    })\n  );\n\n  /// Listen to changes in Appearance and set dark mode theme in state\n  React.useEffect(() => {\n    const handler = listener?.current;\n    return () => handler?.remove?.();\n  }, [dispatch, state.isDarkMode, state.theme.colors.background]);\n}\n","import * as React from 'react';\nimport { NavigationState, getPathFromState } from '@react-navigation/native';\nimport { useAppSelector, useAppDispatch } from 'app/state/store';\n\nimport { actions } from 'app/state';\n\nexport default function useRouteChange() {\n  const state = useAppSelector((root) => root.global);\n  const dispatch = useAppDispatch();\n\n  return React.useCallback(\n    (s?: NavigationState) => {\n      if (s) {\n        const [path] = getPathFromState(s).split(/\\?/);\n        const [screenName] = path.split(/\\//).reverse();\n        if (state.currentRouteName !== screenName) {\n          dispatch(actions.global.setCurrentRouteName(screenName));\n        }\n      }\n    },\n    [dispatch, state.currentRouteName]\n  );\n}\n","import Entrypoint from './Entrypoint';\n\nexport default Entrypoint;\n","import MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\nimport MaterialIcons from '@expo/vector-icons/MaterialIcons';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\nimport * as inter from '@expo-google-fonts/inter';\nimport * as roboto from '@expo-google-fonts/roboto';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  const [fontsLoaded] = Font.useFonts({\n    Inter_400Regular: inter.Inter_400Regular,\n    Inter_500Medium: inter.Inter_500Medium,\n    Inter_700Bold: inter.Inter_700Bold,\n    Roboto_400Regular: roboto.Roboto_400Regular,\n    Roboto_500Medium: roboto.Roboto_500Medium,\n    Roboto_700Bold: roboto.Roboto_700Bold,\n    ...Ionicons.font,\n    ...MaterialCommunityIcons.font,\n    ...MaterialIcons.font,\n  });\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          ...MaterialCommunityIcons.font,\n          ...MaterialIcons.font,\n          // eslint-disable-next-line global-require\n          'space-mono': require('../../../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n        setLoadingComplete(true);\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete && fontsLoaded;\n}\n","import { registerRootComponent } from 'expo';\nimport Entrypoint from './app/entrypoint';\n\nregisterRootComponent(Entrypoint);","module.exports = __webpack_public_path__ + \"static/media/logo-black.36bb8461.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.97bdff33.png\";","module.exports = __webpack_public_path__ + \"static/media/webb-dark.cc0e3dfa.png\";","module.exports = __webpack_public_path__ + \"static/media/pattern.9f57eead.png\";"],"sourceRoot":""}